{"ast":null,"code":"import { ethers } from 'ethers';\nimport { simpleRpcProvider } from 'utils/providers';\nimport { poolsConfig } from 'config/constants';\nimport { PoolCategory } from 'config/constants/types'; // Addresses\n\nimport { getAddress, getPancakeProfileAddress, getPancakeRabbitsAddress, getBunnyFactoryAddress, getBunnySpecialAddress, getCakeAddress, getLotteryV2Address, getMasterChefAddress, getPointCenterIfoAddress, getClaimRefundAddress, getTradingCompetitionAddress, getEasterNftAddress, getCakeVaultAddress, getPredictionsAddress, getChainlinkOracleAddress, getMulticallAddress, getBunnySpecialCakeVaultAddress, getBunnySpecialPredictionAddress, getBunnySpecialLotteryAddress, getFarmAuctionAddress } from 'utils/addressHelpers'; // ABI\n\nimport profileABI from 'config/abi/pancakeProfile.json';\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json';\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json';\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json';\nimport bep20Abi from 'config/abi/erc20.json';\nimport erc721Abi from 'config/abi/erc721.json';\nimport lpTokenAbi from 'config/abi/lpToken.json';\nimport cakeAbi from 'config/abi/cake.json';\nimport ifoV1Abi from 'config/abi/ifoV1.json';\nimport ifoV2Abi from 'config/abi/ifoV2.json';\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json';\nimport lotteryV2Abi from 'config/abi/lotteryV2.json';\nimport masterChef from 'config/abi/masterchef.json';\nimport sousChef from 'config/abi/sousChef.json';\nimport sousChefV2 from 'config/abi/sousChefV2.json';\nimport sousChefBnb from 'config/abi/sousChefBnb.json';\nimport claimRefundAbi from 'config/abi/claimRefund.json';\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json';\nimport easterNftAbi from 'config/abi/easterNft.json';\nimport cakeVaultAbi from 'config/abi/cakeVault.json';\nimport predictionsAbi from 'config/abi/predictions.json';\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json';\nimport MultiCallAbi from 'config/abi/Multicall.json';\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json';\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json';\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json';\nimport farmAuctionAbi from 'config/abi/farmAuction.json';\n\nconst getContract = (abi, address, signer) => {\n  const signerOrProvider = signer !== null && signer !== void 0 ? signer : simpleRpcProvider;\n  return new ethers.Contract(address, abi, signerOrProvider);\n};\n\nexport const getBep20Contract = (address, signer) => {\n  return getContract(bep20Abi, address, signer);\n};\nexport const getErc721Contract = (address, signer) => {\n  return getContract(erc721Abi, address, signer);\n};\nexport const getLpContract = (address, signer) => {\n  return getContract(lpTokenAbi, address, signer);\n};\nexport const getIfoV1Contract = (address, signer) => {\n  return getContract(ifoV1Abi, address, signer);\n};\nexport const getIfoV2Contract = (address, signer) => {\n  return getContract(ifoV2Abi, address, signer);\n};\nexport const getSouschefContract = (id, signer) => {\n  const config = poolsConfig.find(pool => pool.sousId === id);\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef;\n  return getContract(abi, getAddress(config.contractAddress), signer);\n};\nexport const getSouschefV2Contract = (id, signer) => {\n  const config = poolsConfig.find(pool => pool.sousId === id);\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer);\n};\nexport const getPointCenterIfoContract = signer => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer);\n};\nexport const getCakeContract = signer => {\n  return getContract(cakeAbi, getCakeAddress(), signer);\n};\nexport const getProfileContract = signer => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer);\n};\nexport const getPancakeRabbitContract = signer => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer);\n};\nexport const getBunnyFactoryContract = signer => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer);\n};\nexport const getBunnySpecialContract = signer => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer);\n};\nexport const getLotteryV2Contract = signer => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer);\n};\nexport const getMasterchefContract = signer => {\n  return getContract(masterChef, getMasterChefAddress(), signer);\n};\nexport const getClaimRefundContract = signer => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer);\n};\nexport const getTradingCompetitionContract = signer => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer);\n};\nexport const getEasterNftContract = signer => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer);\n};\nexport const getCakeVaultContract = signer => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer);\n};\nexport const getPredictionsContract = signer => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer);\n};\nexport const getChainlinkOracleContract = signer => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer);\n};\nexport const getMulticallContract = signer => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer);\n};\nexport const getBunnySpecialCakeVaultContract = signer => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer);\n};\nexport const getBunnySpecialPredictionContract = signer => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer);\n};\nexport const getBunnySpecialLotteryContract = signer => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer);\n};\nexport const getFarmAuctionContract = signer => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer);\n};","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/pancake-frontend/src/utils/contractHelpers.ts"],"names":["ethers","simpleRpcProvider","poolsConfig","PoolCategory","getAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getBunnySpecialAddress","getCakeAddress","getLotteryV2Address","getMasterChefAddress","getPointCenterIfoAddress","getClaimRefundAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getMulticallAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","profileABI","pancakeRabbitsAbi","bunnyFactoryAbi","bunnySpecialAbi","bep20Abi","erc721Abi","lpTokenAbi","cakeAbi","ifoV1Abi","ifoV2Abi","pointCenterIfo","lotteryV2Abi","masterChef","sousChef","sousChefV2","sousChefBnb","claimRefundAbi","tradingCompetitionAbi","easterNftAbi","cakeVaultAbi","predictionsAbi","chainlinkOracleAbi","MultiCallAbi","bunnySpecialCakeVaultAbi","bunnySpecialPredictionAbi","bunnySpecialLotteryAbi","farmAuctionAbi","getContract","abi","address","signer","signerOrProvider","Contract","getBep20Contract","getErc721Contract","getLpContract","getIfoV1Contract","getIfoV2Contract","getSouschefContract","id","config","find","pool","sousId","poolCategory","BINANCE","contractAddress","getSouschefV2Contract","getPointCenterIfoContract","getCakeContract","getProfileContract","getPancakeRabbitContract","getBunnyFactoryContract","getBunnySpecialContract","getLotteryV2Contract","getMasterchefContract","getClaimRefundContract","getTradingCompetitionContract","getEasterNftContract","getCakeVaultContract","getPredictionsContract","getChainlinkOracleContract","getMulticallContract","getBunnySpecialCakeVaultContract","getBunnySpecialPredictionContract","getBunnySpecialLotteryContract","getFarmAuctionContract"],"mappings":"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","sourcesContent":["import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n"]},"metadata":{},"sourceType":"module"}