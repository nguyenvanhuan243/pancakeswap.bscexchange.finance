{"ast":null,"code":"import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/nguyenvanhuan243/Documents/pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState}from'react';import styled from'styled-components';import{Text,PancakeToggle,Toggle,Flex,Modal}from'@pancakeswap/uikit';import{useAudioModeManager,useExpertModeManager,useUserSingleHopOnly}from'state/user/hooks';import{useTranslation}from'contexts/Localization';import{useSwapActionHandlers}from'state/swap/hooks';import usePersistState from'hooks/usePersistState';import useTheme from'hooks/useTheme';import QuestionHelper from'../../QuestionHelper';import TransactionSettings from'./TransactionSettings';import ExpertModal from'./ExpertModal';import GasSettings from'./GasSettings';// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PancakeToggleWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  .pancakes {\\n    position: absolute;\\n  }\\n\"])));var SettingsModal=function SettingsModal(_ref){var onDismiss=_ref.onDismiss;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showConfirmExpertModal=_useState2[0],setShowConfirmExpertModal=_useState2[1];var _usePersistState=usePersistState(false,{localStorageKey:'pancake_expert_mode_remember_acknowledgement'}),_usePersistState2=_slicedToArray(_usePersistState,2),rememberExpertModeAcknowledgement=_usePersistState2[0],setRememberExpertModeAcknowledgement=_usePersistState2[1];var _useExpertModeManager=useExpertModeManager(),_useExpertModeManager2=_slicedToArray(_useExpertModeManager,2),expertMode=_useExpertModeManager2[0],toggleExpertMode=_useExpertModeManager2[1];var _useUserSingleHopOnly=useUserSingleHopOnly(),_useUserSingleHopOnly2=_slicedToArray(_useUserSingleHopOnly,2),singleHopOnly=_useUserSingleHopOnly2[0],setSingleHopOnly=_useUserSingleHopOnly2[1];var _useAudioModeManager=useAudioModeManager(),_useAudioModeManager2=_slicedToArray(_useAudioModeManager,2),audioPlay=_useAudioModeManager2[0],toggleSetAudioMode=_useAudioModeManager2[1];var _useSwapActionHandler=useSwapActionHandlers(),onChangeRecipient=_useSwapActionHandler.onChangeRecipient;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;if(showConfirmExpertModal){return/*#__PURE__*/_jsx(ExpertModal,{setShowConfirmExpertModal:setShowConfirmExpertModal,onDismiss:onDismiss,setRememberExpertModeAcknowledgement:setRememberExpertModeAcknowledgement});}var handleExpertModeToggle=function handleExpertModeToggle(){if(expertMode){onChangeRecipient(null);toggleExpertMode();}else if(rememberExpertModeAcknowledgement){onChangeRecipient(null);toggleExpertMode();}else{setShowConfirmExpertModal(true);}};return/*#__PURE__*/_jsx(Modal,{title:t('Settings'),headerBackground:\"gradients.cardHeader\",onDismiss:onDismiss,style:{maxWidth:'420px',overflowY:'auto'},children:/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsxs(Flex,{pb:\"24px\",flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",fontSize:\"12px\",color:\"secondary\",mb:\"24px\",children:t('Global')}),/*#__PURE__*/_jsx(GasSettings,{})]}),/*#__PURE__*/_jsxs(Flex,{pt:\"24px\",flexDirection:\"column\",borderTop:\"1px \".concat(theme.colors.cardBorder,\" solid\"),children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",fontSize:\"12px\",color:\"secondary\",mb:\"24px\",children:t('Swaps & Liquidity')}),/*#__PURE__*/_jsx(TransactionSettings,{})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"24px\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{children:t('Expert Mode')}),/*#__PURE__*/_jsx(QuestionHelper,{text:t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.'),placement:\"top-start\",ml:\"4px\"})]}),/*#__PURE__*/_jsx(Toggle,{id:\"toggle-expert-mode-button\",scale:\"md\",checked:expertMode,onChange:handleExpertModeToggle})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"24px\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{children:t('Disable Multihops')}),/*#__PURE__*/_jsx(QuestionHelper,{text:t('Restricts swaps to direct pairs only.'),placement:\"top-start\",ml:\"4px\"})]}),/*#__PURE__*/_jsx(Toggle,{id:\"toggle-disable-multihop-button\",checked:singleHopOnly,scale:\"md\",onChange:function onChange(){setSingleHopOnly(!singleHopOnly);}})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{children:t('Flippy sounds')}),/*#__PURE__*/_jsx(QuestionHelper,{text:t('Fun sounds to make a truly immersive pancake-flipping trading experience'),placement:\"top-start\",ml:\"4px\"})]}),/*#__PURE__*/_jsx(PancakeToggleWrapper,{children:/*#__PURE__*/_jsx(PancakeToggle,{checked:audioPlay,onChange:toggleSetAudioMode,scale:\"md\"})})]})]})});};export default SettingsModal;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/pancake-frontend/src/components/Menu/GlobalSettings/SettingsModal.tsx"],"names":["React","useState","styled","Text","PancakeToggle","Toggle","Flex","Modal","useAudioModeManager","useExpertModeManager","useUserSingleHopOnly","useTranslation","useSwapActionHandlers","usePersistState","useTheme","QuestionHelper","TransactionSettings","ExpertModal","GasSettings","PancakeToggleWrapper","div","SettingsModal","onDismiss","showConfirmExpertModal","setShowConfirmExpertModal","localStorageKey","rememberExpertModeAcknowledgement","setRememberExpertModeAcknowledgement","expertMode","toggleExpertMode","singleHopOnly","setSingleHopOnly","audioPlay","toggleSetAudioMode","onChangeRecipient","t","theme","handleExpertModeToggle","maxWidth","overflowY","colors","cardBorder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useAudioModeManager, useExpertModeManager, useUserSingleHopOnly } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nconst PancakeToggleWrapper = styled.div`\n  .pancakes {\n    position: absolute;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [rememberExpertModeAcknowledgement, setRememberExpertModeAcknowledgement] = usePersistState(false, {\n    localStorageKey: 'pancake_expert_mode_remember_acknowledgement',\n  })\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setRememberExpertModeAcknowledgement={setRememberExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (rememberExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px', overflowY: 'auto' }}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggleWrapper>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n          </PancakeToggleWrapper>\n        </Flex>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n"]},"metadata":{},"sourceType":"module"}