{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import{Modal,Text,Button,AutoRenewIcon}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import useToast from'hooks/useToast';import{useClaimRefundContract}from'hooks/useContract';import{useTranslation}from'contexts/Localization';import{getClaimRefundContract}from'utils/contractHelpers';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var useCanClaim=function useCanClaim(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),canClaim=_useState2[0],setCanClaim=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),refresh=_useState4[0],setRefresh=_useState4[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var checkClaimStatus=useCallback(function(){setRefresh(function(prevRefresh){return prevRefresh+1;});},[setRefresh]);useEffect(function(){var fetchClaimStatus=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var claimRefundContract,walletCanClaim;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:claimRefundContract=getClaimRefundContract();_context.prev=1;_context.next=4;return claimRefundContract.canClaim(account);case 4:walletCanClaim=_context.sent;setCanClaim(walletCanClaim);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function fetchClaimStatus(){return _ref.apply(this,arguments);};}();if(account){fetchClaimStatus();}},[account,refresh,setCanClaim]);return{canClaim:canClaim,checkClaimStatus:checkClaimStatus};};var ClaimGift=function ClaimGift(_ref2){var onSuccess=_ref2.onSuccess,onDismiss=_ref2.onDismiss;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isConfirming=_useState6[0],setIsConfirming=_useState6[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useCanClaim=useCanClaim(),canClaim=_useCanClaim.canClaim;var claimRefundContract=useClaimRefundContract();var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var handleClick=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var tx,receipt;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return callWithGasPrice(claimRefundContract,'getCakeBack');case 2:tx=_context2.sent;setIsConfirming(true);_context2.next=6;return tx.wait();case 6:receipt=_context2.sent;if(receipt.status){toastSuccess(t('Success!'));onSuccess();onDismiss();}else{setIsConfirming(false);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));}case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function handleClick(){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Modal,{title:t('Claim your Gift!'),onDismiss:onDismiss,children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'640px'},children:[/*#__PURE__*/_jsx(Text,{as:\"p\",children:t('Thank you for being a day-one user of Pancake Profiles!')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"8px\",children:t(\"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\")}),/*#__PURE__*/_jsx(Text,{as:\"p\",children:t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"8px\",children:t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"24px\",children:t('Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.')}),/*#__PURE__*/_jsx(Button,{endIcon:isConfirming?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,isLoading:isConfirming,onClick:handleClick,disabled:!canClaim,children:t('Claim Your CAKE')})]})});};export default ClaimGift;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Profile/components/ClaimGiftModal.tsx"],"names":["React","useCallback","useEffect","useState","Modal","Text","Button","AutoRenewIcon","useWeb3React","useToast","useClaimRefundContract","useTranslation","getClaimRefundContract","useCallWithGasPrice","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","account","checkClaimStatus","prevRefresh","fetchClaimStatus","claimRefundContract","walletCanClaim","console","error","ClaimGift","onSuccess","onDismiss","isConfirming","setIsConfirming","t","toastSuccess","toastError","callWithGasPrice","handleClick","tx","wait","receipt","status","maxWidth"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      try {\n        const walletCanClaim = await claimRefundContract.canClaim(account)\n        setCanClaim(walletCanClaim)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { t } = useTranslation()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const handleClick = async () => {\n    const tx = await callWithGasPrice(claimRefundContract, 'getCakeBack')\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Success!'))\n      onSuccess()\n      onDismiss()\n    } else {\n      setIsConfirming(false)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }\n\n  return (\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t(\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {t(\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {t('Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n"]},"metadata":{},"sourceType":"module"}