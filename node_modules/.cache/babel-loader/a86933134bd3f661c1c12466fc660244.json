{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState,useEffect,useMemo}from'react';import{Flex,Text,Skeleton,Link,Button,ArrowForwardIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import useRefresh from'hooks/useRefresh';import useIntersectionObserver from'hooks/useIntersectionObserver';import{usePriceCakeBusd}from'state/farms/hooks';import Balance from'components/Balance';import styled from'styled-components';import{fetchCurrentLotteryIdAndMaxBuy,fetchLottery}from'state/lottery/helpers';import BigNumber from'bignumber.js';import{getBalanceAmount}from'utils/formatBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledLink=styled(Link)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));var StyledBalance=styled(Balance)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  -webkit-background-clip: text;\\n  -webkit-text-fill-color: transparent;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.gradients.gold;});var LotteryCardContent=function LotteryCardContent(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useIntersectionObser=useIntersectionObserver(),observerRef=_useIntersectionObser.observerRef,isIntersecting=_useIntersectionObser.isIntersecting;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loadData=_useState2[0],setLoadData=_useState2[1];var _useRefresh=useRefresh(),slowRefresh=_useRefresh.slowRefresh;var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),lotteryId=_useState4[0],setLotteryId=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),currentLotteryPrize=_useState6[0],setCurrentLotteryPrize=_useState6[1];var cakePriceBusdAsString=usePriceCakeBusd().toString();var cakePrizesText=t('%cakePrizeInUsd% in CAKE prizes this round',{cakePrizeInUsd:cakePriceBusdAsString});var _cakePrizesText$split=cakePrizesText.split(cakePriceBusdAsString),_cakePrizesText$split2=_slicedToArray(_cakePrizesText$split,2),pretext=_cakePrizesText$split2[0],prizesThisRound=_cakePrizesText$split2[1];var cakePriceBusd=useMemo(function(){return new BigNumber(cakePriceBusdAsString);},[cakePriceBusdAsString]);useEffect(function(){if(isIntersecting){setLoadData(true);}},[isIntersecting]);useEffect(function(){// get current lottery ID\nvar fetchCurrentID=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$fetchCurrentLo,currentLotteryId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchCurrentLotteryIdAndMaxBuy();case 2:_yield$fetchCurrentLo=_context.sent;currentLotteryId=_yield$fetchCurrentLo.currentLotteryId;setLotteryId(currentLotteryId);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchCurrentID(){return _ref2.apply(this,arguments);};}();if(loadData){fetchCurrentID();}},[loadData,setLotteryId]);useEffect(function(){// get public data for current lottery\nvar fetchCurrentLotteryPrize=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$fetchLottery,amountCollectedInCake,prizeInBusd;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchLottery(lotteryId);case 2:_yield$fetchLottery=_context2.sent;amountCollectedInCake=_yield$fetchLottery.amountCollectedInCake;prizeInBusd=cakePriceBusd.times(amountCollectedInCake);setCurrentLotteryPrize(prizeInBusd);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchCurrentLotteryPrize(){return _ref3.apply(this,arguments);};}();if(lotteryId){fetchCurrentLotteryPrize();}},[lotteryId,slowRefresh,setCurrentLotteryPrize,cakePriceBusd]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",mt:\"48px\",children:[/*#__PURE__*/_jsx(\"div\",{ref:observerRef}),/*#__PURE__*/_jsx(Text,{color:\"white\",bold:true,fontSize:\"16px\",children:t('Lottery')}),pretext&&/*#__PURE__*/_jsx(Text,{color:\"white\",mt:\"12px\",bold:true,fontSize:\"16px\",children:pretext}),currentLotteryPrize&&currentLotteryPrize.gt(0)?/*#__PURE__*/_jsx(StyledBalance,{fontSize:\"40px\",bold:true,prefix:\"$\",decimals:0,value:getBalanceAmount(currentLotteryPrize).toNumber()}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Skeleton,{width:200,height:40,my:\"8px\"}),/*#__PURE__*/_jsx(\"div\",{ref:observerRef})]}),/*#__PURE__*/_jsx(Text,{color:\"white\",mb:\"24px\",bold:true,fontSize:\"16px\",children:prizesThisRound}),/*#__PURE__*/_jsx(Text,{color:\"white\",mb:\"40px\",children:t('Buy tickets with CAKE, win CAKE if your numbers match')})]}),/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(StyledLink,{href:\"/lottery\",id:\"homepage-prediction-cta\",children:/*#__PURE__*/_jsxs(Button,{width:\"100%\",children:[/*#__PURE__*/_jsx(Text,{bold:true,color:\"invertedContrast\",children:t('Buy Tickets')}),/*#__PURE__*/_jsx(ArrowForwardIcon,{ml:\"4px\",color:\"invertedContrast\"})]})})})]});};export default LotteryCardContent;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Home/components/WinSection/LotteryCardContent.tsx"],"names":["React","useState","useEffect","useMemo","Flex","Text","Skeleton","Link","Button","ArrowForwardIcon","useTranslation","useRefresh","useIntersectionObserver","usePriceCakeBusd","Balance","styled","fetchCurrentLotteryIdAndMaxBuy","fetchLottery","BigNumber","getBalanceAmount","StyledLink","StyledBalance","theme","colors","gradients","gold","LotteryCardContent","t","observerRef","isIntersecting","loadData","setLoadData","slowRefresh","lotteryId","setLotteryId","currentLotteryPrize","setCurrentLotteryPrize","cakePriceBusdAsString","toString","cakePrizesText","cakePrizeInUsd","split","pretext","prizesThisRound","cakePriceBusd","fetchCurrentID","currentLotteryId","fetchCurrentLotteryPrize","amountCollectedInCake","prizeInBusd","times","gt","toNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport { Flex, Text, Skeleton, Link, Button, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useRefresh from 'hooks/useRefresh'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Balance from 'components/Balance'\nimport styled from 'styled-components'\nimport { fetchCurrentLotteryIdAndMaxBuy, fetchLottery } from 'state/lottery/helpers'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceAmount } from 'utils/formatBalance'\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StyledBalance = styled(Balance)`\n  background: ${({ theme }) => theme.colors.gradients.gold};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`\n\nconst LotteryCardContent = () => {\n  const { t } = useTranslation()\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [loadData, setLoadData] = useState(false)\n  const { slowRefresh } = useRefresh()\n  const [lotteryId, setLotteryId] = useState<string>(null)\n  const [currentLotteryPrize, setCurrentLotteryPrize] = useState<BigNumber>(null)\n  const cakePriceBusdAsString = usePriceCakeBusd().toString()\n\n  const cakePrizesText = t('%cakePrizeInUsd% in CAKE prizes this round', { cakePrizeInUsd: cakePriceBusdAsString })\n  const [pretext, prizesThisRound] = cakePrizesText.split(cakePriceBusdAsString)\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadData(true)\n    }\n  }, [isIntersecting])\n\n  useEffect(() => {\n    // get current lottery ID\n    const fetchCurrentID = async () => {\n      const { currentLotteryId } = await fetchCurrentLotteryIdAndMaxBuy()\n      setLotteryId(currentLotteryId)\n    }\n\n    if (loadData) {\n      fetchCurrentID()\n    }\n  }, [loadData, setLotteryId])\n\n  useEffect(() => {\n    // get public data for current lottery\n    const fetchCurrentLotteryPrize = async () => {\n      const { amountCollectedInCake } = await fetchLottery(lotteryId)\n      const prizeInBusd = cakePriceBusd.times(amountCollectedInCake)\n      setCurrentLotteryPrize(prizeInBusd)\n    }\n\n    if (lotteryId) {\n      fetchCurrentLotteryPrize()\n    }\n  }, [lotteryId, slowRefresh, setCurrentLotteryPrize, cakePriceBusd])\n\n  return (\n    <>\n      <Flex flexDirection=\"column\" mt=\"48px\">\n        <div ref={observerRef} />\n        <Text color=\"white\" bold fontSize=\"16px\">\n          {t('Lottery')}\n        </Text>\n        {pretext && (\n          <Text color=\"white\" mt=\"12px\" bold fontSize=\"16px\">\n            {pretext}\n          </Text>\n        )}\n        {currentLotteryPrize && currentLotteryPrize.gt(0) ? (\n          <StyledBalance\n            fontSize=\"40px\"\n            bold\n            prefix=\"$\"\n            decimals={0}\n            value={getBalanceAmount(currentLotteryPrize).toNumber()}\n          />\n        ) : (\n          <>\n            <Skeleton width={200} height={40} my=\"8px\" />\n            <div ref={observerRef} />\n          </>\n        )}\n        <Text color=\"white\" mb=\"24px\" bold fontSize=\"16px\">\n          {prizesThisRound}\n        </Text>\n        <Text color=\"white\" mb=\"40px\">\n          {t('Buy tickets with CAKE, win CAKE if your numbers match')}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <StyledLink href=\"/lottery\" id=\"homepage-prediction-cta\">\n          <Button width=\"100%\">\n            <Text bold color=\"invertedContrast\">\n              {t('Buy Tickets')}\n            </Text>\n            <ArrowForwardIcon ml=\"4px\" color=\"invertedContrast\" />\n          </Button>\n        </StyledLink>\n      </Flex>\n    </>\n  )\n}\n\nexport default LotteryCardContent\n"]},"metadata":{},"sourceType":"module"}