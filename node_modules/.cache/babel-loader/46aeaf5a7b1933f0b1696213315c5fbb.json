{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Text,Flex,Skeleton,Box,Image}from'@pancakeswap/uikit';import{useFarmAuctionContract}from'hooks/useContract';import{useTranslation}from'contexts/Localization';import{usePriceCakeBusd}from'state/farms/hooks';import{getBalanceNumber}from'utils/formatBalance';import{ethersToBigNumber}from'utils/bigNumber';import Balance from'components/Balance';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AuctionCakeBurn=function AuctionCakeBurn(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),burnedCakeAmount=_useState2[0],setBurnedCakeAmount=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var farmAuctionContract=useFarmAuctionContract();var cakePriceBusd=usePriceCakeBusd();var burnedAmountAsUSD=cakePriceBusd.times(burnedCakeAmount);useEffect(function(){var fetchBurnedCakeAmount=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var amount,amountAsBN;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return farmAuctionContract.totalCollected();case 3:amount=_context.sent;amountAsBN=ethersToBigNumber(amount);setBurnedCakeAmount(getBalanceNumber(amountAsBN));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error('Failed to fetch burned auction cake',_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function fetchBurnedCakeAmount(){return _ref.apply(this,arguments);};}();if(burnedCakeAmount===0){fetchBurnedCakeAmount();}},[burnedCakeAmount,farmAuctionContract]);return/*#__PURE__*/_jsxs(Flex,{flexDirection:['column-reverse',null,'row'],children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",flex:\"2\",children:[burnedCakeAmount!==0?/*#__PURE__*/_jsx(Balance,{fontSize:\"64px\",bold:true,value:burnedCakeAmount,decimals:0,unit:\" CAKE\"}):/*#__PURE__*/_jsx(Skeleton,{width:\"256px\",height:\"64px\"}),/*#__PURE__*/_jsx(Text,{textTransform:\"uppercase\",fontSize:\"64px\",bold:true,color:\"secondary\",children:t('Burned')}),/*#__PURE__*/_jsx(Text,{fontSize:\"24px\",bold:true,children:t('through community auctions so far!')}),!burnedAmountAsUSD.isNaN()&&!burnedAmountAsUSD.isZero()?/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",children:[\"~$\",burnedAmountAsUSD.toNumber().toLocaleString('en',{maximumFractionDigits:0})]}):/*#__PURE__*/_jsx(Skeleton,{width:\"128px\"})]}),/*#__PURE__*/_jsx(Flex,{flex:\"1\",alignSelf:\"center\",children:/*#__PURE__*/_jsx(Box,{width:\"350px\",children:/*#__PURE__*/_jsx(Image,{width:350,height:320,src:\"/images/burnt-cake.png\",alt:t('Burnt CAKE')})})})]});};export default AuctionCakeBurn;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/FarmAuction/components/AuctionCakeBurn.tsx"],"names":["React","useState","useEffect","Text","Flex","Skeleton","Box","Image","useFarmAuctionContract","useTranslation","usePriceCakeBusd","getBalanceNumber","ethersToBigNumber","Balance","AuctionCakeBurn","burnedCakeAmount","setBurnedCakeAmount","t","farmAuctionContract","cakePriceBusd","burnedAmountAsUSD","times","fetchBurnedCakeAmount","totalCollected","amount","amountAsBN","console","error","isNaN","isZero","toNumber","toLocaleString","maximumFractionDigits"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Text, Flex, Skeleton, Box, Image } from '@pancakeswap/uikit'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { ethersToBigNumber } from 'utils/bigNumber'\nimport Balance from 'components/Balance'\n\nconst AuctionCakeBurn: React.FC = () => {\n  const [burnedCakeAmount, setBurnedCakeAmount] = useState(0)\n  const { t } = useTranslation()\n  const farmAuctionContract = useFarmAuctionContract()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const burnedAmountAsUSD = cakePriceBusd.times(burnedCakeAmount)\n\n  useEffect(() => {\n    const fetchBurnedCakeAmount = async () => {\n      try {\n        const amount = await farmAuctionContract.totalCollected()\n        const amountAsBN = ethersToBigNumber(amount)\n        setBurnedCakeAmount(getBalanceNumber(amountAsBN))\n      } catch (error) {\n        console.error('Failed to fetch burned auction cake', error)\n      }\n    }\n    if (burnedCakeAmount === 0) {\n      fetchBurnedCakeAmount()\n    }\n  }, [burnedCakeAmount, farmAuctionContract])\n  return (\n    <Flex flexDirection={['column-reverse', null, 'row']}>\n      <Flex flexDirection=\"column\" flex=\"2\">\n        {burnedCakeAmount !== 0 ? (\n          <Balance fontSize=\"64px\" bold value={burnedCakeAmount} decimals={0} unit=\" CAKE\" />\n        ) : (\n          <Skeleton width=\"256px\" height=\"64px\" />\n        )}\n        <Text textTransform=\"uppercase\" fontSize=\"64px\" bold color=\"secondary\">\n          {t('Burned')}\n        </Text>\n        <Text fontSize=\"24px\" bold>\n          {t('through community auctions so far!')}\n        </Text>\n        {!burnedAmountAsUSD.isNaN() && !burnedAmountAsUSD.isZero() ? (\n          <Text color=\"textSubtle\">\n            ~${burnedAmountAsUSD.toNumber().toLocaleString('en', { maximumFractionDigits: 0 })}\n          </Text>\n        ) : (\n          <Skeleton width=\"128px\" />\n        )}\n      </Flex>\n      <Flex flex=\"1\" alignSelf=\"center\">\n        <Box width=\"350px\">\n          <Image width={350} height={320} src=\"/images/burnt-cake.png\" alt={t('Burnt CAKE')} />\n        </Box>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AuctionCakeBurn\n"]},"metadata":{},"sourceType":"module"}