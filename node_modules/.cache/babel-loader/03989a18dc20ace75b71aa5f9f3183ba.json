{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/nguyenvanhuan243/Documents/pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useEffect}from'react';import styled from'styled-components';import confetti from'canvas-confetti';import{Modal,Text,Button,Flex}from'@pancakeswap/uikit';import history from'routerHistory';import{delay}from'lodash';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NftImage=styled.img(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  border-radius: 50%;\\n  height: 128px;\\n  margin-bottom: 24px;\\n  margin-right: 8px;\\n  width: 128px;\\n\"])));var showConfetti=function showConfetti(){confetti({resize:true,particleCount:200,startVelocity:30,gravity:0.5,spread:350,origin:{x:0.5,y:0.3}});};var NftGiveawayModal=function NftGiveawayModal(_ref){var onDismiss=_ref.onDismiss,nfts=_ref.nfts;var _useTranslation=useTranslation(),t=_useTranslation.t;// This is required because the modal exists outside the Router\nvar handleClick=function handleClick(){onDismiss();history.push('/collectibles');};useEffect(function(){delay(showConfetti,100);},[]);var getImages=function getImages(){return nfts.map(function(nft){return/*#__PURE__*/_jsx(NftImage,{src:\"/images/nfts/\".concat(nft.images.md)},nft.variationId);});};return/*#__PURE__*/_jsx(Modal,{title:t('Congratulations!'),onDismiss:onDismiss,children:/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",children:[/*#__PURE__*/_jsx(Flex,{flexWrap:\"wrap\",alignItems:\"center\",justifyContent:\"center\",children:getImages()}),/*#__PURE__*/_jsx(Text,{textAlign:\"center\",bold:true,color:\"secondary\",fontSize:\"24px\",mb:\"24px\",children:nfts.length>1?t('You won multiple collectibles!'):t('You won a collectible!')}),/*#__PURE__*/_jsx(Button,{onClick:handleClick,children:t('Claim now')})]})});};export default NftGiveawayModal;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/pancake-frontend/src/views/Collectibles/components/NftGiveawayModal.tsx"],"names":["React","useEffect","styled","confetti","Modal","Text","Button","Flex","history","delay","useTranslation","NftImage","img","showConfetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","NftGiveawayModal","onDismiss","nfts","t","handleClick","push","getImages","map","nft","images","md","variationId","length"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,OAASC,KAAT,CAAgBC,IAAhB,CAAsBC,MAAtB,CAA8BC,IAA9B,KAA8D,oBAA9D,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,KAAT,KAAsB,QAAtB,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAGA,GAAMC,CAAAA,QAAQ,CAAGT,MAAM,CAACU,GAAV,2KAAd,CAQA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBV,QAAQ,CAAC,CACPW,MAAM,CAAE,IADD,CAEPC,aAAa,CAAE,GAFR,CAGPC,aAAa,CAAE,EAHR,CAIPC,OAAO,CAAE,GAJF,CAKPC,MAAM,CAAE,GALD,CAMPC,MAAM,CAAE,CACNC,CAAC,CAAE,GADG,CAENC,CAAC,CAAE,GAFG,CAND,CAAD,CAAR,CAWD,CAZD,CAkBA,GAAMC,CAAAA,gBAAiD,CAAG,QAApDA,CAAAA,gBAAoD,MAAyB,IAAtBC,CAAAA,SAAsB,MAAtBA,SAAsB,CAAXC,IAAW,MAAXA,IAAW,CACjF,oBAAcd,cAAc,EAA5B,CAAQe,CAAR,iBAAQA,CAAR,CAEA;AACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBH,SAAS,GACTf,OAAO,CAACmB,IAAR,CAAa,eAAb,EACD,CAHD,CAKA1B,SAAS,CAAC,UAAM,CACdQ,KAAK,CAACI,YAAD,CAAe,GAAf,CAAL,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMe,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,MAAOJ,CAAAA,IAAI,CAACK,GAAL,CAAS,SAACC,GAAD,qBAAS,KAAC,QAAD,EAAgC,GAAG,wBAAkBA,GAAG,CAACC,MAAJ,CAAWC,EAA7B,CAAnC,EAAeF,GAAG,CAACG,WAAnB,CAAT,EAAT,CAAP,CACD,CAFD,CAIA,mBACE,KAAC,KAAD,EAAO,KAAK,CAAER,CAAC,CAAC,kBAAD,CAAf,CAAqC,SAAS,CAAEF,SAAhD,uBACE,MAAC,IAAD,EAAM,aAAa,CAAC,QAApB,CAA6B,UAAU,CAAC,QAAxC,CAAiD,cAAc,CAAC,QAAhE,wBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,UAAU,CAAC,QAAjC,CAA0C,cAAc,CAAC,QAAzD,UACGK,SAAS,EADZ,EADF,cAIE,KAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,CAAyB,IAAI,KAA7B,CAA8B,KAAK,CAAC,WAApC,CAAgD,QAAQ,CAAC,MAAzD,CAAgE,EAAE,CAAC,MAAnE,UACGJ,IAAI,CAACU,MAAL,CAAc,CAAd,CAAkBT,CAAC,CAAC,gCAAD,CAAnB,CAAwDA,CAAC,CAAC,wBAAD,CAD5D,EAJF,cAOE,KAAC,MAAD,EAAQ,OAAO,CAAEC,WAAjB,UAA+BD,CAAC,CAAC,WAAD,CAAhC,EAPF,GADF,EADF,CAaD,CA9BD,CAgCA,cAAeH,CAAAA,gBAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport { useTranslation } from 'contexts/Localization'\nimport { Nft } from 'config/constants/types'\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\ninterface NftGiveawayModalProps extends InjectedModalProps {\n  nfts: Nft[]\n}\n\nconst NftGiveawayModal: React.FC<NftGiveawayModalProps> = ({ onDismiss, nfts }) => {\n  const { t } = useTranslation()\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  const getImages = () => {\n    return nfts.map((nft) => <NftImage key={nft.variationId} src={`/images/nfts/${nft.images.md}`} />)\n  }\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent=\"center\">\n          {getImages()}\n        </Flex>\n        <Text textAlign=\"center\" bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {nfts.length > 1 ? t('You won multiple collectibles!') : t('You won a collectible!')}\n        </Text>\n        <Button onClick={handleClick}>{t('Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default NftGiveawayModal\n"]},"metadata":{},"sourceType":"module"}