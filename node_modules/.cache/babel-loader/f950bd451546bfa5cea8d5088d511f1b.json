{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyenvanhuan243/Documents/pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nguyenvanhuan243/Documents/pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/nguyenvanhuan243/Documents/pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useState}from'react';import styled from'styled-components';import{Card,CardBody,Heading,Tag,Button,ChevronUpIcon,ChevronDownIcon,Text,CardFooter,useModal}from'@pancakeswap/uikit';import{useProfile}from'state/profile/hooks';import{useTranslation}from'contexts/Localization';import InfoRow from'../InfoRow';import TransferNftModal from'../TransferNftModal';import ClaimNftModal from'../ClaimNftModal';import Preview from'./Preview';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Header=styled(InfoRow)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-height: 28px;\\n\"])));var DetailsButton=styled(Button).attrs({variant:'text'})(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  height: auto;\\n  padding: 16px 24px;\\n\\n  &:hover:not(:disabled):not(:active) {\\n    background-color: transparent;\\n  }\\n\\n  &:focus:not(:active) {\\n    box-shadow: none;\\n  }\\n\"])));var InfoBlock=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 24px;\\n\"])));var NftCard=function NftCard(_ref){var _profile$nft;var nft=_ref.nft,_ref$canClaim=_ref.canClaim,canClaim=_ref$canClaim===void 0?false:_ref$canClaim,_ref$tokenIds=_ref.tokenIds,tokenIds=_ref$tokenIds===void 0?[]:_ref$tokenIds,onClaim=_ref.onClaim,refresh=_ref.refresh;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useProfile=useProfile(),profile=_useProfile.profile;var identifier=nft.identifier,name=nft.name,description=nft.description;var walletOwnsNft=tokenIds.length>0;var Icon=isOpen?ChevronUpIcon:ChevronDownIcon;var handleClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsOpen(!isOpen);case 1:case\"end\":return _context.stop();}}},_callee);}));return function handleClick(){return _ref2.apply(this,arguments);};}();var handleSuccess=function handleSuccess(){refresh();};var _useModal=useModal(/*#__PURE__*/_jsx(TransferNftModal,{nft:nft,tokenIds:tokenIds,onSuccess:handleSuccess})),_useModal2=_slicedToArray(_useModal,1),onPresentTransferModal=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(ClaimNftModal,{nft:nft,onSuccess:handleSuccess,onClaim:onClaim})),_useModal4=_slicedToArray(_useModal3,1),onPresentClaimModal=_useModal4[0];return/*#__PURE__*/_jsxs(Card,{isActive:walletOwnsNft,children:[/*#__PURE__*/_jsx(Preview,{nft:nft,isOwned:walletOwnsNft}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(Heading,{children:name}),walletOwnsNft&&/*#__PURE__*/_jsx(Tag,{outline:true,variant:\"secondary\",children:t('In Wallet')}),(profile===null||profile===void 0?void 0:(_profile$nft=profile.nft)===null||_profile$nft===void 0?void 0:_profile$nft.identifier)===identifier&&/*#__PURE__*/_jsx(Tag,{outline:true,variant:\"success\",children:t('Profile Pic')})]}),canClaim&&/*#__PURE__*/_jsx(Button,{width:\"100%\",mt:\"24px\",onClick:onPresentClaimModal,children:t('Claim this NFT')}),walletOwnsNft&&/*#__PURE__*/_jsx(Button,{width:\"100%\",variant:\"secondary\",mt:\"24px\",onClick:onPresentTransferModal,children:t('Transfer')})]}),/*#__PURE__*/_jsxs(CardFooter,{p:\"0\",children:[/*#__PURE__*/_jsx(DetailsButton,{width:\"100%\",endIcon:/*#__PURE__*/_jsx(Icon,{width:\"24px\",color:\"primary\"}),onClick:handleClick,children:t('Details')}),isOpen&&/*#__PURE__*/_jsx(InfoBlock,{children:/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",style:{textAlign:'center'},children:t(description)})})]})]});};export default NftCard;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/pancake-frontend/src/views/Collectibles/components/NftCard/index.tsx"],"names":["React","useState","styled","Card","CardBody","Heading","Tag","Button","ChevronUpIcon","ChevronDownIcon","Text","CardFooter","useModal","useProfile","useTranslation","InfoRow","TransferNftModal","ClaimNftModal","Preview","Header","DetailsButton","attrs","variant","InfoBlock","div","NftCard","nft","canClaim","tokenIds","onClaim","refresh","isOpen","setIsOpen","t","profile","identifier","name","description","walletOwnsNft","length","Icon","handleClick","handleSuccess","onPresentTransferModal","onPresentClaimModal","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Tag,\n  Button,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Text,\n  CardFooter,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Nft } from 'config/constants/types'\nimport InfoRow from '../InfoRow'\nimport TransferNftModal from '../TransferNftModal'\nimport ClaimNftModal from '../ClaimNftModal'\nimport Preview from './Preview'\n\nexport interface NftCardProps {\n  nft: Nft\n  canClaim?: boolean\n  tokenIds?: number[]\n  onClaim?: () => Promise<ethers.providers.TransactionResponse>\n  refresh: () => void\n}\n\nconst Header = styled(InfoRow)`\n  min-height: 28px;\n`\n\nconst DetailsButton = styled(Button).attrs({ variant: 'text' })`\n  height: auto;\n  padding: 16px 24px;\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n\n  &:focus:not(:active) {\n    box-shadow: none;\n  }\n`\n\nconst InfoBlock = styled.div`\n  padding: 24px;\n`\n\nconst NftCard: React.FC<NftCardProps> = ({ nft, canClaim = false, tokenIds = [], onClaim, refresh }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const { t } = useTranslation()\n  const { profile } = useProfile()\n  const { identifier, name, description } = nft\n  const walletOwnsNft = tokenIds.length > 0\n  const Icon = isOpen ? ChevronUpIcon : ChevronDownIcon\n\n  const handleClick = async () => {\n    setIsOpen(!isOpen)\n  }\n\n  const handleSuccess = () => {\n    refresh()\n  }\n\n  const [onPresentTransferModal] = useModal(\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\n  )\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={handleSuccess} onClaim={onClaim} />)\n\n  return (\n    <Card isActive={walletOwnsNft}>\n      <Preview nft={nft} isOwned={walletOwnsNft} />\n      <CardBody>\n        <Header>\n          <Heading>{name}</Heading>\n          {walletOwnsNft && (\n            <Tag outline variant=\"secondary\">\n              {t('In Wallet')}\n            </Tag>\n          )}\n          {profile?.nft?.identifier === identifier && (\n            <Tag outline variant=\"success\">\n              {t('Profile Pic')}\n            </Tag>\n          )}\n        </Header>\n        {canClaim && (\n          <Button width=\"100%\" mt=\"24px\" onClick={onPresentClaimModal}>\n            {t('Claim this NFT')}\n          </Button>\n        )}\n        {walletOwnsNft && (\n          <Button width=\"100%\" variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\n            {t('Transfer')}\n          </Button>\n        )}\n      </CardBody>\n      <CardFooter p=\"0\">\n        <DetailsButton width=\"100%\" endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\n          {t('Details')}\n        </DetailsButton>\n        {isOpen && (\n          <InfoBlock>\n            <Text as=\"p\" color=\"textSubtle\" style={{ textAlign: 'center' }}>\n              {t(description)}\n            </Text>\n          </InfoBlock>\n        )}\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default NftCard\n"]},"metadata":{},"sourceType":"module"}