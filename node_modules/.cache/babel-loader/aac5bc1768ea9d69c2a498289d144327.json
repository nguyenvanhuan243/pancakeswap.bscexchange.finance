{"ast":null,"code":"import{ethers}from'ethers';import{BetPosition}from'state/types';import{formatBigNumber,formatBigNumberToFixed}from'utils/formatBalance';import getTimePeriods from'utils/getTimePeriods';export var formatUsdv2=function formatUsdv2(usd){return\"$\".concat(formatBigNumberToFixed(usd,3,8));};export var formatBnbv2=function formatBnbv2(bnb){var value=bnb||ethers.BigNumber.from(0);return formatBigNumberToFixed(value,4);};export var padTime=function padTime(num){return num.toString().padStart(2,'0');};export var formatRoundTime=function formatRoundTime(secondsBetweenBlocks){var _getTimePeriods=getTimePeriods(secondsBetweenBlocks),hours=_getTimePeriods.hours,minutes=_getTimePeriods.minutes,seconds=_getTimePeriods.seconds;var minutesSeconds=\"\".concat(padTime(minutes),\":\").concat(padTime(seconds));if(hours>0){return\"\".concat(padTime(hours),\":\").concat(minutesSeconds);}return minutesSeconds;};export var getHasRoundFailed=function getHasRoundFailed(round,buffer){var closeTimestampMs=(round.closeTimestamp+buffer)*1000;var now=Date.now();if(closeTimestampMs!==null&&now>closeTimestampMs&&!round.oracleCalled){return true;}return false;};export var getMultiplierv2=function getMultiplierv2(total,amount){if(!total){return ethers.FixedNumber.from(0);}if(total.eq(0)||amount.eq(0)){return ethers.FixedNumber.from(0);}var rewardAmountFixed=ethers.FixedNumber.from(total);var multiplierAmountFixed=ethers.FixedNumber.from(amount);return rewardAmountFixed.divUnsafe(multiplierAmountFixed);};export var getPayoutv2=function getPayoutv2(ledger,round){if(!ledger||!round){return ethers.FixedNumber.from(0);}var bullAmount=round.bullAmount,bearAmount=round.bearAmount,rewardAmount=round.rewardAmount;var amount=ledger.amount,position=ledger.position;var amountFixed=ethers.FixedNumber.from(formatBigNumber(amount));var multiplier=getMultiplierv2(rewardAmount,position===BetPosition.BULL?bullAmount:bearAmount);return amountFixed.mulUnsafe(multiplier);};export var getNetPayoutv2=function getNetPayoutv2(ledger,round){if(!ledger||!round){return ethers.FixedNumber.from(0);}var payout=getPayoutv2(ledger,round);var amount=ethers.FixedNumber.from(formatBigNumber(ledger.amount));return payout.subUnsafe(amount);};export var getPriceDifference=function getPriceDifference(price,lockPrice){if(!price||!lockPrice){return ethers.BigNumber.from(0);}return price.sub(lockPrice);};","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Predictions/helpers.ts"],"names":["ethers","BetPosition","formatBigNumber","formatBigNumberToFixed","getTimePeriods","formatUsdv2","usd","formatBnbv2","bnb","value","BigNumber","from","padTime","num","toString","padStart","formatRoundTime","secondsBetweenBlocks","hours","minutes","seconds","minutesSeconds","getHasRoundFailed","round","buffer","closeTimestampMs","closeTimestamp","now","Date","oracleCalled","getMultiplierv2","total","amount","FixedNumber","eq","rewardAmountFixed","multiplierAmountFixed","divUnsafe","getPayoutv2","ledger","bullAmount","bearAmount","rewardAmount","position","amountFixed","multiplier","BULL","mulUnsafe","getNetPayoutv2","payout","subUnsafe","getPriceDifference","price","lockPrice","sub"],"mappings":"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","sourcesContent":["import { ethers } from 'ethers'\nimport { BetPosition, NodeLedger, NodeRound } from 'state/types'\nimport { formatBigNumber, formatBigNumberToFixed } from 'utils/formatBalance'\nimport getTimePeriods from 'utils/getTimePeriods'\n\nexport const formatUsdv2 = (usd: ethers.BigNumber) => {\n  return `$${formatBigNumberToFixed(usd, 3, 8)}`\n}\n\nexport const formatBnbv2 = (bnb: ethers.BigNumber) => {\n  const value = bnb || ethers.BigNumber.from(0)\n  return formatBigNumberToFixed(value, 4)\n}\n\nexport const padTime = (num: number) => num.toString().padStart(2, '0')\n\nexport const formatRoundTime = (secondsBetweenBlocks: number) => {\n  const { hours, minutes, seconds } = getTimePeriods(secondsBetweenBlocks)\n  const minutesSeconds = `${padTime(minutes)}:${padTime(seconds)}`\n\n  if (hours > 0) {\n    return `${padTime(hours)}:${minutesSeconds}`\n  }\n\n  return minutesSeconds\n}\n\nexport const getHasRoundFailed = (round: NodeRound, buffer: number) => {\n  const closeTimestampMs = (round.closeTimestamp + buffer) * 1000\n  const now = Date.now()\n\n  if (closeTimestampMs !== null && now > closeTimestampMs && !round.oracleCalled) {\n    return true\n  }\n\n  return false\n}\n\nexport const getMultiplierv2 = (total: ethers.BigNumber, amount: ethers.BigNumber) => {\n  if (!total) {\n    return ethers.FixedNumber.from(0)\n  }\n\n  if (total.eq(0) || amount.eq(0)) {\n    return ethers.FixedNumber.from(0)\n  }\n\n  const rewardAmountFixed = ethers.FixedNumber.from(total)\n  const multiplierAmountFixed = ethers.FixedNumber.from(amount)\n\n  return rewardAmountFixed.divUnsafe(multiplierAmountFixed)\n}\n\nexport const getPayoutv2 = (ledger: NodeLedger, round: NodeRound) => {\n  if (!ledger || !round) {\n    return ethers.FixedNumber.from(0)\n  }\n\n  const { bullAmount, bearAmount, rewardAmount } = round\n  const { amount, position } = ledger\n\n  const amountFixed = ethers.FixedNumber.from(formatBigNumber(amount))\n  const multiplier = getMultiplierv2(rewardAmount, position === BetPosition.BULL ? bullAmount : bearAmount)\n  return amountFixed.mulUnsafe(multiplier)\n}\n\nexport const getNetPayoutv2 = (ledger: NodeLedger, round: NodeRound) => {\n  if (!ledger || !round) {\n    return ethers.FixedNumber.from(0)\n  }\n\n  const payout = getPayoutv2(ledger, round)\n  const amount = ethers.FixedNumber.from(formatBigNumber(ledger.amount))\n\n  return payout.subUnsafe(amount)\n}\n\nexport const getPriceDifference = (price: ethers.BigNumber, lockPrice: ethers.BigNumber) => {\n  if (!price || !lockPrice) {\n    return ethers.BigNumber.from(0)\n  }\n\n  return price.sub(lockPrice)\n}\n"]},"metadata":{},"sourceType":"module"}