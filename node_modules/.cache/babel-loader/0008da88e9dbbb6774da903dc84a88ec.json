{"ast":null,"code":"export var getEarningsText=function getEarningsText(numFarmsToCollect,hasCakePoolToCollect,earningsBusd,t){var data={earningsBusd:earningsBusd.toString(),count:numFarmsToCollect};var earningsText=t('%earningsBusd% to collect',data);if(numFarmsToCollect>0&&hasCakePoolToCollect){if(numFarmsToCollect>1){earningsText=t('%earningsBusd% to collect from %count% farms and CAKE pool',data);}else{earningsText=t('%earningsBusd% to collect from %count% farm and CAKE pool',data);}}else if(numFarmsToCollect>0){if(numFarmsToCollect>1){earningsText=t('%earningsBusd% to collect from %count% farms',data);}else{earningsText=t('%earningsBusd% to collect from %count% farm',data);}}else if(hasCakePoolToCollect){earningsText=t('%earningsBusd% to collect from CAKE pool',data);}return earningsText;};","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Home/components/UserBanner/EarningsText.tsx"],"names":["getEarningsText","numFarmsToCollect","hasCakePoolToCollect","earningsBusd","t","data","toString","count","earningsText"],"mappings":"AAGA,MAAO,IAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAC7BC,iBAD6B,CAE7BC,oBAF6B,CAG7BC,YAH6B,CAI7BC,CAJ6B,CAKlB,CACX,GAAMC,CAAAA,IAAI,CAAG,CACXF,YAAY,CAAEA,YAAY,CAACG,QAAb,EADH,CAEXC,KAAK,CAAEN,iBAFI,CAAb,CAKA,GAAIO,CAAAA,YAAY,CAAGJ,CAAC,CAAC,2BAAD,CAA8BC,IAA9B,CAApB,CAEA,GAAIJ,iBAAiB,CAAG,CAApB,EAAyBC,oBAA7B,CAAmD,CACjD,GAAID,iBAAiB,CAAG,CAAxB,CAA2B,CACzBO,YAAY,CAAGJ,CAAC,CAAC,4DAAD,CAA+DC,IAA/D,CAAhB,CACD,CAFD,IAEO,CACLG,YAAY,CAAGJ,CAAC,CAAC,2DAAD,CAA8DC,IAA9D,CAAhB,CACD,CACF,CAND,IAMO,IAAIJ,iBAAiB,CAAG,CAAxB,CAA2B,CAChC,GAAIA,iBAAiB,CAAG,CAAxB,CAA2B,CACzBO,YAAY,CAAGJ,CAAC,CAAC,8CAAD,CAAiDC,IAAjD,CAAhB,CACD,CAFD,IAEO,CACLG,YAAY,CAAGJ,CAAC,CAAC,6CAAD,CAAgDC,IAAhD,CAAhB,CACD,CACF,CANM,IAMA,IAAIH,oBAAJ,CAA0B,CAC/BM,YAAY,CAAGJ,CAAC,CAAC,0CAAD,CAA6CC,IAA7C,CAAhB,CACD,CAED,MAAOG,CAAAA,YAAP,CACD,CA9BM","sourcesContent":["import { ContextApi } from 'contexts/Localization/types'\nimport BigNumber from 'bignumber.js'\n\nexport const getEarningsText = (\n  numFarmsToCollect: number,\n  hasCakePoolToCollect: boolean,\n  earningsBusd: BigNumber,\n  t: ContextApi['t'],\n): string => {\n  const data = {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect,\n  }\n\n  let earningsText = t('%earningsBusd% to collect', data)\n\n  if (numFarmsToCollect > 0 && hasCakePoolToCollect) {\n    if (numFarmsToCollect > 1) {\n      earningsText = t('%earningsBusd% to collect from %count% farms and CAKE pool', data)\n    } else {\n      earningsText = t('%earningsBusd% to collect from %count% farm and CAKE pool', data)\n    }\n  } else if (numFarmsToCollect > 0) {\n    if (numFarmsToCollect > 1) {\n      earningsText = t('%earningsBusd% to collect from %count% farms', data)\n    } else {\n      earningsText = t('%earningsBusd% to collect from %count% farm', data)\n    }\n  } else if (hasCakePoolToCollect) {\n    earningsText = t('%earningsBusd% to collect from CAKE pool', data)\n  }\n\n  return earningsText\n}\n"]},"metadata":{},"sourceType":"module"}