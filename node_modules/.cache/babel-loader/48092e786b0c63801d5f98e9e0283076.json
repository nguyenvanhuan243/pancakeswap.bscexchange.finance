{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{useWeb3React}from'@web3-react/core';import{useGetLotteriesGraphData,useGetUserLotteriesGraphData,useLottery}from'state/lottery/hooks';import fetchUnclaimedUserRewards from'state/lottery/fetchUnclaimedUserRewards';export var FetchStatus;(function(FetchStatus){FetchStatus[\"NOT_FETCHED\"]=\"not-fetched\";FetchStatus[\"IN_PROGRESS\"]=\"in-progress\";FetchStatus[\"SUCCESS\"]=\"success\";})(FetchStatus||(FetchStatus={}));var useGetUnclaimedRewards=function useGetUnclaimedRewards(){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useLottery=useLottery(),isTransitioning=_useLottery.isTransitioning;var userLotteryData=useGetUserLotteriesGraphData();var lotteriesData=useGetLotteriesGraphData();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),unclaimedRewards=_useState2[0],setUnclaimedRewards=_useState2[1];var _useState3=useState(FetchStatus.NOT_FETCHED),_useState4=_slicedToArray(_useState3,2),fetchStatus=_useState4[0],setFetchStatus=_useState4[1];useEffect(function(){// Reset on account change and round transition\nsetFetchStatus(FetchStatus.NOT_FETCHED);},[account,isTransitioning]);var fetchAllRewards=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var unclaimedRewardsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setFetchStatus(FetchStatus.IN_PROGRESS);_context.next=3;return fetchUnclaimedUserRewards(account,userLotteryData,lotteriesData);case 3:unclaimedRewardsResponse=_context.sent;setUnclaimedRewards(unclaimedRewardsResponse);setFetchStatus(FetchStatus.SUCCESS);case 6:case\"end\":return _context.stop();}}},_callee);}));return function fetchAllRewards(){return _ref.apply(this,arguments);};}();return{fetchAllRewards:fetchAllRewards,unclaimedRewards:unclaimedRewards,fetchStatus:fetchStatus};};export default useGetUnclaimedRewards;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Lottery/hooks/useGetUnclaimedRewards.ts"],"names":["useState","useEffect","useWeb3React","useGetLotteriesGraphData","useGetUserLotteriesGraphData","useLottery","fetchUnclaimedUserRewards","FetchStatus","useGetUnclaimedRewards","account","isTransitioning","userLotteryData","lotteriesData","unclaimedRewards","setUnclaimedRewards","NOT_FETCHED","fetchStatus","setFetchStatus","fetchAllRewards","IN_PROGRESS","unclaimedRewardsResponse","SUCCESS"],"mappings":"qfAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,wBAAT,CAAmCC,4BAAnC,CAAiEC,UAAjE,KAAmF,qBAAnF,CACA,MAAOC,CAAAA,yBAAP,KAAsC,yCAAtC,CAEA,UAAYC,CAAAA,WAAZ,C,UAAYA,W,EAAAA,W,8BAAAA,W,8BAAAA,W,yBAAAA,W,GAAAA,W,MAMZ,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CACnC,kBAAoBN,YAAY,EAAhC,CAAQO,OAAR,eAAQA,OAAR,CACA,gBAA4BJ,UAAU,EAAtC,CAAQK,eAAR,aAAQA,eAAR,CACA,GAAMC,CAAAA,eAAe,CAAGP,4BAA4B,EAApD,CACA,GAAMQ,CAAAA,aAAa,CAAGT,wBAAwB,EAA9C,CACA,cAAgDH,QAAQ,CAAC,EAAD,CAAxD,wCAAOa,gBAAP,eAAyBC,mBAAzB,eACA,eAAsCd,QAAQ,CAACO,WAAW,CAACQ,WAAb,CAA9C,yCAAOC,WAAP,eAAoBC,cAApB,eAEAhB,SAAS,CAAC,UAAM,CACd;AACAgB,cAAc,CAACV,WAAW,CAACQ,WAAb,CAAd,CACD,CAHQ,CAGN,CAACN,OAAD,CAAUC,eAAV,CAHM,CAAT,CAKA,GAAMQ,CAAAA,eAAe,0FAAG,gKACtBD,cAAc,CAACV,WAAW,CAACY,WAAb,CAAd,CADsB,sBAEiBb,CAAAA,yBAAyB,CAACG,OAAD,CAAUE,eAAV,CAA2BC,aAA3B,CAF1C,QAEhBQ,wBAFgB,eAGtBN,mBAAmB,CAACM,wBAAD,CAAnB,CACAH,cAAc,CAACV,WAAW,CAACc,OAAb,CAAd,CAJsB,sDAAH,kBAAfH,CAAAA,eAAe,0CAArB,CAOA,MAAO,CAAEA,eAAe,CAAfA,eAAF,CAAmBL,gBAAgB,CAAhBA,gBAAnB,CAAqCG,WAAW,CAAXA,WAArC,CAAP,CACD,CArBD,CAuBA,cAAeR,CAAAA,sBAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetLotteriesGraphData, useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\nimport fetchUnclaimedUserRewards from 'state/lottery/fetchUnclaimedUserRewards'\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  IN_PROGRESS = 'in-progress',\n  SUCCESS = 'success',\n}\n\nconst useGetUnclaimedRewards = () => {\n  const { account } = useWeb3React()\n  const { isTransitioning } = useLottery()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n  const [unclaimedRewards, setUnclaimedRewards] = useState([])\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n\n  useEffect(() => {\n    // Reset on account change and round transition\n    setFetchStatus(FetchStatus.NOT_FETCHED)\n  }, [account, isTransitioning])\n\n  const fetchAllRewards = async () => {\n    setFetchStatus(FetchStatus.IN_PROGRESS)\n    const unclaimedRewardsResponse = await fetchUnclaimedUserRewards(account, userLotteryData, lotteriesData)\n    setUnclaimedRewards(unclaimedRewardsResponse)\n    setFetchStatus(FetchStatus.SUCCESS)\n  }\n\n  return { fetchAllRewards, unclaimedRewards, fetchStatus }\n}\n\nexport default useGetUnclaimedRewards\n"]},"metadata":{},"sourceType":"module"}