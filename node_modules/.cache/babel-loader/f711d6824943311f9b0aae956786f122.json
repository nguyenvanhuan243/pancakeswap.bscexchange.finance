{"ast":null,"code":"import React from'react';import{Heading,Flex,Text,useMatchBreakpoints}from'@pancakeswap/uikit';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StatCardContent=function StatCardContent(_ref){var headingText=_ref.headingText,bodyText=_ref.bodyText,highlightColor=_ref.highlightColor;var _useMatchBreakpoints=useMatchBreakpoints(),isMobile=_useMatchBreakpoints.isMobile,isTablet=_useMatchBreakpoints.isTablet;var isSmallerScreen=isMobile||isTablet;var split=headingText.split(' ');var lastWord=split.pop();var remainingWords=split.slice(0,split.length).join(' ');return/*#__PURE__*/_jsxs(Flex,{minHeight:[null,null,null,'168px'],minWidth:\"232px\",width:\"fit-content\",flexDirection:\"column\",justifyContent:\"flex-end\",mt:[null,null,null,'64px'],children:[isSmallerScreen&&remainingWords.length>13?/*#__PURE__*/_jsx(Heading,{scale:\"lg\",children:remainingWords}):/*#__PURE__*/_jsx(Heading,{scale:\"xl\",children:remainingWords}),/*#__PURE__*/_jsx(Heading,{color:highlightColor,scale:\"xl\",mb:\"24px\",children:lastWord}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",children:bodyText})]});};export default StatCardContent;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Home/components/MetricsSection/StatCardContent.tsx"],"names":["React","Heading","Flex","Text","useMatchBreakpoints","StatCardContent","headingText","bodyText","highlightColor","isMobile","isTablet","isSmallerScreen","split","lastWord","pop","remainingWords","slice","length","join"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,CAAkBC,IAAlB,CAAwBC,IAAxB,CAA8BC,mBAA9B,KAAyD,oBAAzD,C,wFAEA,GAAMC,CAAAA,eAA4F,CAAG,QAA/FA,CAAAA,eAA+F,MAI/F,IAHJC,CAAAA,WAGI,MAHJA,WAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,cACI,MADJA,cACI,CACJ,yBAA+BJ,mBAAmB,EAAlD,CAAQK,QAAR,sBAAQA,QAAR,CAAkBC,QAAlB,sBAAkBA,QAAlB,CACA,GAAMC,CAAAA,eAAe,CAAGF,QAAQ,EAAIC,QAApC,CACA,GAAME,CAAAA,KAAK,CAAGN,WAAW,CAACM,KAAZ,CAAkB,GAAlB,CAAd,CACA,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,GAAN,EAAjB,CACA,GAAMC,CAAAA,cAAc,CAAGH,KAAK,CAACI,KAAN,CAAY,CAAZ,CAAeJ,KAAK,CAACK,MAArB,EAA6BC,IAA7B,CAAkC,GAAlC,CAAvB,CAEA,mBACE,MAAC,IAAD,EACE,SAAS,CAAE,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,OAAnB,CADb,CAEE,QAAQ,CAAC,OAFX,CAGE,KAAK,CAAC,aAHR,CAIE,aAAa,CAAC,QAJhB,CAKE,cAAc,CAAC,UALjB,CAME,EAAE,CAAE,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,MAAnB,CANN,WAQGP,eAAe,EAAII,cAAc,CAACE,MAAf,CAAwB,EAA3C,cACC,KAAC,OAAD,EAAS,KAAK,CAAC,IAAf,UAAqBF,cAArB,EADD,cAGC,KAAC,OAAD,EAAS,KAAK,CAAC,IAAf,UAAqBA,cAArB,EAXJ,cAaE,KAAC,OAAD,EAAS,KAAK,CAAEP,cAAhB,CAAgC,KAAK,CAAC,IAAtC,CAA2C,EAAE,CAAC,MAA9C,UACGK,QADH,EAbF,cAgBE,KAAC,IAAD,EAAM,KAAK,CAAC,YAAZ,UAA0BN,QAA1B,EAhBF,GADF,CAoBD,CA/BD,CAiCA,cAAeF,CAAAA,eAAf","sourcesContent":["import React from 'react'\nimport { Heading, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\n\nconst StatCardContent: React.FC<{ headingText: string; bodyText: string; highlightColor: string }> = ({\n  headingText,\n  bodyText,\n  highlightColor,\n}) => {\n  const { isMobile, isTablet } = useMatchBreakpoints()\n  const isSmallerScreen = isMobile || isTablet\n  const split = headingText.split(' ')\n  const lastWord = split.pop()\n  const remainingWords = split.slice(0, split.length).join(' ')\n\n  return (\n    <Flex\n      minHeight={[null, null, null, '168px']}\n      minWidth=\"232px\"\n      width=\"fit-content\"\n      flexDirection=\"column\"\n      justifyContent=\"flex-end\"\n      mt={[null, null, null, '64px']}\n    >\n      {isSmallerScreen && remainingWords.length > 13 ? (\n        <Heading scale=\"lg\">{remainingWords}</Heading>\n      ) : (\n        <Heading scale=\"xl\">{remainingWords}</Heading>\n      )}\n      <Heading color={highlightColor} scale=\"xl\" mb=\"24px\">\n        {lastWord}\n      </Heading>\n      <Text color=\"textSubtle\">{bodyText}</Text>\n    </Flex>\n  )\n}\n\nexport default StatCardContent\n"]},"metadata":{},"sourceType":"module"}