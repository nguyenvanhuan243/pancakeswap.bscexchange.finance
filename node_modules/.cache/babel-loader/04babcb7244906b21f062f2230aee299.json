{"ast":null,"code":"import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/pancake-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef}from'react';import{useWeb3React}from'@web3-react/core';import{Helmet}from'react-helmet-async';import{useMatchBreakpoints,useModal}from'@pancakeswap/uikit';import{useAppDispatch}from'state';import{useGetPredictionsStatus,useIsChartPaneOpen}from'state/predictions/hooks';import{useInitialBlock}from'state/block/hooks';import{initializePredictions}from'state/predictions';import{PredictionStatus}from'state/types';import usePersistState from'hooks/usePersistState';import PageLoader from'components/Loader/PageLoader';import usePollOraclePrice from'./hooks/usePollOraclePrice';import usePollPredictions from'./hooks/usePollPredictions';import Container from'./components/Container';import CollectWinningsPopup from'./components/CollectWinningsPopup';import SwiperProvider from'./context/SwiperProvider';import Desktop from'./Desktop';import Mobile from'./Mobile';import RiskDisclaimer from'./components/RiskDisclaimer';import ChartDisclaimer,{CHART_LOCAL_STORAGE_KEY}from'./components/ChartDisclaimer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Predictions=function Predictions(){var _useMatchBreakpoints=useMatchBreakpoints(),isDesktop=_useMatchBreakpoints.isDesktop;var _usePersistState=usePersistState(false,{localStorageKey:'pancake_predictions_accepted_risk-2'}),_usePersistState2=_slicedToArray(_usePersistState,2),hasAcceptedRisk=_usePersistState2[0],setHasAcceptedRisk=_usePersistState2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var status=useGetPredictionsStatus();var isChartPaneOpen=useIsChartPaneOpen();var dispatch=useAppDispatch();var initialBlock=useInitialBlock();var handleAcceptRiskSuccess=function handleAcceptRiskSuccess(){return setHasAcceptedRisk(true);};var _useModal=useModal(/*#__PURE__*/_jsx(RiskDisclaimer,{onSuccess:handleAcceptRiskSuccess}),false),_useModal2=_slicedToArray(_useModal,1),onPresentRiskDisclaimer=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(ChartDisclaimer,{}),false),_useModal4=_slicedToArray(_useModal3,1),onPresentChartDisclaimer=_useModal4[0];// TODO: memoize modal's handlers\nvar onPresentRiskDisclaimerRef=useRef(onPresentRiskDisclaimer);var onPresentChartDisclaimerRef=useRef(onPresentChartDisclaimer);// Disclaimer\nuseEffect(function(){if(!hasAcceptedRisk){onPresentRiskDisclaimerRef.current();}},[hasAcceptedRisk,onPresentRiskDisclaimerRef]);// Chart Disclaimer\nuseEffect(function(){if(isChartPaneOpen){var showChartDisclaimer=JSON.parse(localStorage.getItem(CHART_LOCAL_STORAGE_KEY));if(showChartDisclaimer!==true){onPresentChartDisclaimerRef.current();}}},[onPresentChartDisclaimerRef,isChartPaneOpen]);useEffect(function(){if(initialBlock>0){// Do not start initialization until the first block has been retrieved\ndispatch(initializePredictions(account));}},[initialBlock,dispatch,account]);usePollPredictions();usePollOraclePrice();if(status===PredictionStatus.INITIAL){return/*#__PURE__*/_jsx(PageLoader,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"script\",{src:\"https://s3.tradingview.com/tv.js\",type:\"text/javascript\",id:\"tradingViewWidget\"})}),/*#__PURE__*/_jsx(SwiperProvider,{children:/*#__PURE__*/_jsxs(Container,{children:[isDesktop?/*#__PURE__*/_jsx(Desktop,{}):/*#__PURE__*/_jsx(Mobile,{}),/*#__PURE__*/_jsx(CollectWinningsPopup,{})]})})]});};export default Predictions;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/pancake-frontend/src/views/Predictions/index.tsx"],"names":["React","useEffect","useRef","useWeb3React","Helmet","useMatchBreakpoints","useModal","useAppDispatch","useGetPredictionsStatus","useIsChartPaneOpen","useInitialBlock","initializePredictions","PredictionStatus","usePersistState","PageLoader","usePollOraclePrice","usePollPredictions","Container","CollectWinningsPopup","SwiperProvider","Desktop","Mobile","RiskDisclaimer","ChartDisclaimer","CHART_LOCAL_STORAGE_KEY","Predictions","isDesktop","localStorageKey","hasAcceptedRisk","setHasAcceptedRisk","account","status","isChartPaneOpen","dispatch","initialBlock","handleAcceptRiskSuccess","onPresentRiskDisclaimer","onPresentChartDisclaimer","onPresentRiskDisclaimerRef","onPresentChartDisclaimerRef","current","showChartDisclaimer","JSON","parse","localStorage","getItem","INITIAL"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,MAAT,KAAuB,oBAAvB,CACA,OAASC,mBAAT,CAA8BC,QAA9B,KAA8C,oBAA9C,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,OAASC,uBAAT,CAAkCC,kBAAlC,KAA4D,yBAA5D,CACA,OAASC,eAAT,KAAgC,mBAAhC,CACA,OAASC,qBAAT,KAAsC,mBAAtC,CACA,OAASC,gBAAT,KAAiC,aAAjC,CACA,MAAOC,CAAAA,eAAP,KAA4B,uBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,4BAA/B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,4BAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,mCAAjC,CACA,MAAOC,CAAAA,cAAP,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,6BAA3B,CACA,MAAOC,CAAAA,eAAP,EAA0BC,uBAA1B,KAAyD,8BAAzD,C,6IAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,yBAAsBpB,mBAAmB,EAAzC,CAAQqB,SAAR,sBAAQA,SAAR,CACA,qBAA8Cb,eAAe,CAAC,KAAD,CAAQ,CACnEc,eAAe,CAAE,qCADkD,CAAR,CAA7D,sDAAOC,eAAP,sBAAwBC,kBAAxB,sBAGA,kBAAoB1B,YAAY,EAAhC,CAAQ2B,OAAR,eAAQA,OAAR,CACA,GAAMC,CAAAA,MAAM,CAAGvB,uBAAuB,EAAtC,CACA,GAAMwB,CAAAA,eAAe,CAAGvB,kBAAkB,EAA1C,CACA,GAAMwB,CAAAA,QAAQ,CAAG1B,cAAc,EAA/B,CACA,GAAM2B,CAAAA,YAAY,CAAGxB,eAAe,EAApC,CACA,GAAMyB,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,SAAMN,CAAAA,kBAAkB,CAAC,IAAD,CAAxB,EAAhC,CACA,cAAkCvB,QAAQ,cAAC,KAAC,cAAD,EAAgB,SAAS,CAAE6B,uBAA3B,EAAD,CAAyD,KAAzD,CAA1C,wCAAOC,uBAAP,eACA,eAAmC9B,QAAQ,cAAC,KAAC,eAAD,IAAD,CAAsB,KAAtB,CAA3C,yCAAO+B,wBAAP,eAEA;AACA,GAAMC,CAAAA,0BAA0B,CAAGpC,MAAM,CAACkC,uBAAD,CAAzC,CACA,GAAMG,CAAAA,2BAA2B,CAAGrC,MAAM,CAACmC,wBAAD,CAA1C,CAEA;AACApC,SAAS,CAAC,UAAM,CACd,GAAI,CAAC2B,eAAL,CAAsB,CACpBU,0BAA0B,CAACE,OAA3B,GACD,CACF,CAJQ,CAIN,CAACZ,eAAD,CAAkBU,0BAAlB,CAJM,CAAT,CAMA;AACArC,SAAS,CAAC,UAAM,CACd,GAAI+B,eAAJ,CAAqB,CACnB,GAAMS,CAAAA,mBAAmB,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBrB,uBAArB,CAAX,CAA5B,CAEA,GAAIiB,mBAAmB,GAAK,IAA5B,CAAkC,CAChCF,2BAA2B,CAACC,OAA5B,GACD,CACF,CACF,CARQ,CAQN,CAACD,2BAAD,CAA8BP,eAA9B,CARM,CAAT,CAUA/B,SAAS,CAAC,UAAM,CACd,GAAIiC,YAAY,CAAG,CAAnB,CAAsB,CACpB;AACAD,QAAQ,CAACtB,qBAAqB,CAACmB,OAAD,CAAtB,CAAR,CACD,CACF,CALQ,CAKN,CAACI,YAAD,CAAeD,QAAf,CAAyBH,OAAzB,CALM,CAAT,CAOAd,kBAAkB,GAClBD,kBAAkB,GAElB,GAAIgB,MAAM,GAAKnB,gBAAgB,CAACkC,OAAhC,CAAyC,CACvC,mBAAO,KAAC,UAAD,IAAP,CACD,CAED,mBACE,wCACE,KAAC,MAAD,wBACE,eAAQ,GAAG,CAAC,kCAAZ,CAA+C,IAAI,CAAC,iBAApD,CAAsE,EAAE,CAAC,mBAAzE,EADF,EADF,cAIE,KAAC,cAAD,wBACE,MAAC,SAAD,YACGpB,SAAS,cAAG,KAAC,OAAD,IAAH,cAAiB,KAAC,MAAD,IAD7B,cAEE,KAAC,oBAAD,IAFF,GADF,EAJF,GADF,CAaD,CA/DD,CAiEA,cAAeD,CAAAA,WAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Helmet } from 'react-helmet-async'\nimport { useMatchBreakpoints, useModal } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport { useGetPredictionsStatus, useIsChartPaneOpen } from 'state/predictions/hooks'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { initializePredictions } from 'state/predictions'\nimport { PredictionStatus } from 'state/types'\nimport usePersistState from 'hooks/usePersistState'\nimport PageLoader from 'components/Loader/PageLoader'\nimport usePollOraclePrice from './hooks/usePollOraclePrice'\nimport usePollPredictions from './hooks/usePollPredictions'\nimport Container from './components/Container'\nimport CollectWinningsPopup from './components/CollectWinningsPopup'\nimport SwiperProvider from './context/SwiperProvider'\nimport Desktop from './Desktop'\nimport Mobile from './Mobile'\nimport RiskDisclaimer from './components/RiskDisclaimer'\nimport ChartDisclaimer, { CHART_LOCAL_STORAGE_KEY } from './components/ChartDisclaimer'\n\nconst Predictions = () => {\n  const { isDesktop } = useMatchBreakpoints()\n  const [hasAcceptedRisk, setHasAcceptedRisk] = usePersistState(false, {\n    localStorageKey: 'pancake_predictions_accepted_risk-2',\n  })\n  const { account } = useWeb3React()\n  const status = useGetPredictionsStatus()\n  const isChartPaneOpen = useIsChartPaneOpen()\n  const dispatch = useAppDispatch()\n  const initialBlock = useInitialBlock()\n  const handleAcceptRiskSuccess = () => setHasAcceptedRisk(true)\n  const [onPresentRiskDisclaimer] = useModal(<RiskDisclaimer onSuccess={handleAcceptRiskSuccess} />, false)\n  const [onPresentChartDisclaimer] = useModal(<ChartDisclaimer />, false)\n\n  // TODO: memoize modal's handlers\n  const onPresentRiskDisclaimerRef = useRef(onPresentRiskDisclaimer)\n  const onPresentChartDisclaimerRef = useRef(onPresentChartDisclaimer)\n\n  // Disclaimer\n  useEffect(() => {\n    if (!hasAcceptedRisk) {\n      onPresentRiskDisclaimerRef.current()\n    }\n  }, [hasAcceptedRisk, onPresentRiskDisclaimerRef])\n\n  // Chart Disclaimer\n  useEffect(() => {\n    if (isChartPaneOpen) {\n      const showChartDisclaimer = JSON.parse(localStorage.getItem(CHART_LOCAL_STORAGE_KEY))\n\n      if (showChartDisclaimer !== true) {\n        onPresentChartDisclaimerRef.current()\n      }\n    }\n  }, [onPresentChartDisclaimerRef, isChartPaneOpen])\n\n  useEffect(() => {\n    if (initialBlock > 0) {\n      // Do not start initialization until the first block has been retrieved\n      dispatch(initializePredictions(account))\n    }\n  }, [initialBlock, dispatch, account])\n\n  usePollPredictions()\n  usePollOraclePrice()\n\n  if (status === PredictionStatus.INITIAL) {\n    return <PageLoader />\n  }\n\n  return (\n    <>\n      <Helmet>\n        <script src=\"https://s3.tradingview.com/tv.js\" type=\"text/javascript\" id=\"tradingViewWidget\" />\n      </Helmet>\n      <SwiperProvider>\n        <Container>\n          {isDesktop ? <Desktop /> : <Mobile />}\n          <CollectWinningsPopup />\n        </Container>\n      </SwiperProvider>\n    </>\n  )\n}\n\nexport default Predictions\n"]},"metadata":{},"sourceType":"module"}