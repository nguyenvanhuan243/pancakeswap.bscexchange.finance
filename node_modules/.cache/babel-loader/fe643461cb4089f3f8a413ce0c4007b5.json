{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gql = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\n\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")),\n    CrossFetch = cross_fetch_1;\n\nvar printer_1 = require(\"graphql/language/printer\");\n\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\n\nvar types_1 = require(\"./types\");\n\nvar types_2 = require(\"./types\");\n\nObject.defineProperty(exports, \"ClientError\", {\n  enumerable: true,\n  get: function () {\n    return types_2.ClientError;\n  }\n});\n/**\n * Convert the given headers configuration into a plain object.\n */\n\nvar resolveHeaders = function (headers) {\n  var oHeaders = {};\n\n  if (headers) {\n    if (typeof Headers !== 'undefined' && headers instanceof Headers || headers instanceof CrossFetch.Headers) {\n      oHeaders = HeadersInstanceToPlainObject(headers);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (_a) {\n        var name = _a[0],\n            value = _a[1];\n        oHeaders[name] = value;\n      });\n    } else {\n      oHeaders = headers;\n    }\n  }\n\n  return oHeaders;\n};\n/**\n * Fetch data using POST method\n */\n\n\nvar post = function (_a) {\n  var url = _a.url,\n      query = _a.query,\n      variables = _a.variables,\n      operationName = _a.operationName,\n      headers = _a.headers,\n      fetch = _a.fetch,\n      fetchOptions = _a.fetchOptions;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          body = createRequestBody_1.default(query, variables, operationName);\n          return [4\n          /*yield*/\n          , fetch(url, __assign({\n            method: 'POST',\n            headers: __assign(__assign({}, typeof body === 'string' ? {\n              'Content-Type': 'application/json'\n            } : {}), headers),\n            body: body\n          }, fetchOptions))];\n\n        case 1:\n          return [2\n          /*return*/\n          , _b.sent()];\n      }\n    });\n  });\n};\n/**\n * Fetch data using GET method\n */\n\n\nvar get = function (_a) {\n  var url = _a.url,\n      query = _a.query,\n      variables = _a.variables,\n      operationName = _a.operationName,\n      headers = _a.headers,\n      fetch = _a.fetch,\n      fetchOptions = _a.fetchOptions;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var search;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          search = [\"query=\" + encodeURIComponent(query.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim())];\n\n          if (variables) {\n            search.push(\"variables=\" + encodeURIComponent(JSON.stringify(variables)));\n          }\n\n          if (operationName) {\n            search.push(\"operationName=\" + encodeURIComponent(operationName));\n          }\n\n          return [4\n          /*yield*/\n          , fetch(url + \"?\" + search.join('&'), __assign({\n            method: 'GET',\n            headers: headers\n          }, fetchOptions))];\n\n        case 1:\n          return [2\n          /*return*/\n          , _b.sent()];\n      }\n    });\n  });\n};\n/**\n * todo\n */\n\n\nvar GraphQLClient = function () {\n  function GraphQLClient(url, options) {\n    this.url = url;\n    this.options = options || {};\n  }\n\n  GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n    var _a = this.options,\n        headers = _a.headers,\n        _b = _a.fetch,\n        fetch = _b === void 0 ? cross_fetch_1.default : _b,\n        _c = _a.method,\n        method = _c === void 0 ? 'POST' : _c,\n        fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n\n    var url = this.url;\n    return makeRequest({\n      url: url,\n      query: query,\n      variables: variables,\n      headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n      operationName: undefined,\n      fetch: fetch,\n      method: method,\n      fetchOptions: fetchOptions\n    });\n  };\n  /**\n   * Send a GraphQL document to the server.\n   */\n\n\n  GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, headers, _b, fetch, _c, method, fetchOptions, url, _d, query, operationName, data;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n            url = this.url;\n            _d = resolveRequestDocument(document), query = _d.query, operationName = _d.operationName;\n            return [4\n            /*yield*/\n            , makeRequest({\n              url: url,\n              query: query,\n              variables: variables,\n              headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n              operationName: operationName,\n              fetch: fetch,\n              method: method,\n              fetchOptions: fetchOptions\n            })];\n\n          case 1:\n            data = _e.sent().data;\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n\n  GraphQLClient.prototype.setHeaders = function (headers) {\n    this.options.headers = headers;\n    return this;\n  };\n  /**\n   * Attach a header to the client. All subsequent requests will have this header.\n   */\n\n\n  GraphQLClient.prototype.setHeader = function (key, value) {\n    var _a;\n\n    var headers = this.options.headers;\n\n    if (headers) {\n      // todo what if headers is in nested array form... ?\n      //@ts-ignore\n      headers[key] = value;\n    } else {\n      this.options.headers = (_a = {}, _a[key] = value, _a);\n    }\n\n    return this;\n  };\n\n  return GraphQLClient;\n}();\n\nexports.GraphQLClient = GraphQLClient;\n\nfunction makeRequest(_a) {\n  var url = _a.url,\n      query = _a.query,\n      variables = _a.variables,\n      headers = _a.headers,\n      operationName = _a.operationName,\n      fetch = _a.fetch,\n      _b = _a.method,\n      method = _b === void 0 ? 'POST' : _b,\n      fetchOptions = _a.fetchOptions;\n  return __awaiter(this, void 0, void 0, function () {\n    var fetcher, response, result, headers_1, status_1, errorResult;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          fetcher = method.toUpperCase() === 'POST' ? post : get;\n          return [4\n          /*yield*/\n          , fetcher({\n            url: url,\n            query: query,\n            variables: variables,\n            operationName: operationName,\n            headers: headers,\n            fetch: fetch,\n            fetchOptions: fetchOptions\n          })];\n\n        case 1:\n          response = _c.sent();\n          return [4\n          /*yield*/\n          , getResult(response)];\n\n        case 2:\n          result = _c.sent();\n\n          if (response.ok && !result.errors && result.data) {\n            headers_1 = response.headers, status_1 = response.status;\n            return [2\n            /*return*/\n            , __assign(__assign({}, result), {\n              headers: headers_1,\n              status: status_1\n            })];\n          } else {\n            errorResult = typeof result === 'string' ? {\n              error: result\n            } : result;\n            throw new types_1.ClientError(__assign(__assign({}, errorResult), {\n              status: response.status,\n              headers: response.headers\n            }), {\n              query: query,\n              variables: variables\n            });\n          }\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\n * todo\n */\n\n\nfunction rawRequest(url, query, variables, requestHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2\n      /*return*/\n      , client.rawRequest(query, variables, requestHeaders)];\n    });\n  });\n}\n\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\n\nfunction request(url, document, variables, requestHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2\n      /*return*/\n      , client.request(document, variables, requestHeaders)];\n    });\n  });\n}\n\nexports.request = request;\nexports.default = request;\n/**\n * todo\n */\n\nfunction getResult(response) {\n  var contentType = response.headers.get('Content-Type');\n\n  if (contentType && contentType.startsWith('application/json')) {\n    return response.json();\n  } else {\n    return response.text();\n  }\n}\n/**\n * helpers\n */\n\n\nfunction resolveRequestDocument(document) {\n  var _a;\n\n  if (typeof document === 'string') return {\n    query: document\n  };\n  var operationName = undefined;\n  var operationDefinitions = document.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition';\n  });\n\n  if (operationDefinitions.length === 1) {\n    operationName = (_a = operationDefinitions[0].name) === null || _a === void 0 ? void 0 : _a.value;\n  }\n\n  return {\n    query: printer_1.print(document),\n    operationName: operationName\n  };\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\n\n\nfunction gql(chunks) {\n  var variables = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    variables[_i - 1] = arguments[_i];\n  }\n\n  return chunks.reduce(function (accumulator, chunk, index) {\n    return \"\" + accumulator + chunk + (index in variables ? variables[index] : '');\n  }, '');\n}\n\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\n\nfunction HeadersInstanceToPlainObject(headers) {\n  var o = {};\n  headers.forEach(function (v, k) {\n    o[k] = v;\n  });\n  return o;\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gql = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")), CrossFetch = cross_fetch_1;\nvar printer_1 = require(\"graphql/language/printer\");\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\nvar types_1 = require(\"./types\");\nvar types_2 = require(\"./types\");\nObject.defineProperty(exports, \"ClientError\", { enumerable: true, get: function () { return types_2.ClientError; } });\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function (headers) {\n    var oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== 'undefined' && headers instanceof Headers) ||\n            headers instanceof CrossFetch.Headers) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(function (_a) {\n                var name = _a[0], value = _a[1];\n                oHeaders[name] = value;\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * Fetch data using POST method\n */\nvar post = function (_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, operationName = _a.operationName, headers = _a.headers, fetch = _a.fetch, fetchOptions = _a.fetchOptions;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var body;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    body = createRequestBody_1.default(query, variables, operationName);\n                    return [4 /*yield*/, fetch(url, __assign({ method: 'POST', headers: __assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), headers), body: body }, fetchOptions))];\n                case 1: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n};\n/**\n * Fetch data using GET method\n */\nvar get = function (_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, operationName = _a.operationName, headers = _a.headers, fetch = _a.fetch, fetchOptions = _a.fetchOptions;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var search;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    search = [\"query=\" + encodeURIComponent(query.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim())];\n                    if (variables) {\n                        search.push(\"variables=\" + encodeURIComponent(JSON.stringify(variables)));\n                    }\n                    if (operationName) {\n                        search.push(\"operationName=\" + encodeURIComponent(operationName));\n                    }\n                    return [4 /*yield*/, fetch(url + \"?\" + search.join('&'), __assign({ method: 'GET', headers: headers }, fetchOptions))];\n                case 1: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */ (function () {\n    function GraphQLClient(url, options) {\n        this.url = url;\n        this.options = options || {};\n    }\n    GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n        var _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n        var url = this.url;\n        return makeRequest({\n            url: url,\n            query: query,\n            variables: variables,\n            headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n            operationName: undefined,\n            fetch: fetch,\n            method: method,\n            fetchOptions: fetchOptions,\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, fetch, _c, method, fetchOptions, url, _d, query, operationName, data;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\"]);\n                        url = this.url;\n                        _d = resolveRequestDocument(document), query = _d.query, operationName = _d.operationName;\n                        return [4 /*yield*/, makeRequest({\n                                url: url,\n                                query: query,\n                                variables: variables,\n                                headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n                                operationName: operationName,\n                                fetch: fetch,\n                                method: method,\n                                fetchOptions: fetchOptions,\n                            })];\n                    case 1:\n                        data = (_e.sent()).data;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.setHeaders = function (headers) {\n        this.options.headers = headers;\n        return this;\n    };\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    GraphQLClient.prototype.setHeader = function (key, value) {\n        var _a;\n        var headers = this.options.headers;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-ignore\n            headers[key] = value;\n        }\n        else {\n            this.options.headers = (_a = {}, _a[key] = value, _a);\n        }\n        return this;\n    };\n    return GraphQLClient;\n}());\nexports.GraphQLClient = GraphQLClient;\nfunction makeRequest(_a) {\n    var url = _a.url, query = _a.query, variables = _a.variables, headers = _a.headers, operationName = _a.operationName, fetch = _a.fetch, _b = _a.method, method = _b === void 0 ? 'POST' : _b, fetchOptions = _a.fetchOptions;\n    return __awaiter(this, void 0, void 0, function () {\n        var fetcher, response, result, headers_1, status_1, errorResult;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    fetcher = method.toUpperCase() === 'POST' ? post : get;\n                    return [4 /*yield*/, fetcher({\n                            url: url,\n                            query: query,\n                            variables: variables,\n                            operationName: operationName,\n                            headers: headers,\n                            fetch: fetch,\n                            fetchOptions: fetchOptions,\n                        })];\n                case 1:\n                    response = _c.sent();\n                    return [4 /*yield*/, getResult(response)];\n                case 2:\n                    result = _c.sent();\n                    if (response.ok && !result.errors && result.data) {\n                        headers_1 = response.headers, status_1 = response.status;\n                        return [2 /*return*/, __assign(__assign({}, result), { headers: headers_1, status: status_1 })];\n                    }\n                    else {\n                        errorResult = typeof result === 'string' ? { error: result } : result;\n                        throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status, headers: response.headers }), { query: query, variables: variables });\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * todo\n */\nfunction rawRequest(url, query, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.rawRequest(query, variables, requestHeaders)];\n        });\n    });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.request(document, variables, requestHeaders)];\n        });\n    });\n}\nexports.request = request;\nexports.default = request;\n/**\n * todo\n */\nfunction getResult(response) {\n    var contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.startsWith('application/json')) {\n        return response.json();\n    }\n    else {\n        return response.text();\n    }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n    var _a;\n    if (typeof document === 'string')\n        return { query: document };\n    var operationName = undefined;\n    var operationDefinitions = document.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; });\n    if (operationDefinitions.length === 1) {\n        operationName = (_a = operationDefinitions[0].name) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    return { query: printer_1.print(document), operationName: operationName };\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n    var variables = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        variables[_i - 1] = arguments[_i];\n    }\n    return chunks.reduce(function (accumulator, chunk, index) { return \"\" + accumulator + chunk + (index in variables ? variables[index] : ''); }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n    var o = {};\n    headers.forEach(function (v, k) {\n        o[k] = v;\n    });\n    return o;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}