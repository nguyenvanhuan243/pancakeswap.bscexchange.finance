{"ast":null,"code":"import _objectSpread from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Heading,Flex,Text,Skeleton,ChartIcon,CommunityIcon,SwapIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useGetStats}from'hooks/api';import useTheme from'hooks/useTheme';import{formatLocalisedCompactNumber}from'utils/formatBalance';import IconCard from'../IconCard';import StatCardContent from'./StatCardContent';import GradientLogo from'../GradientLogoSvg';// Values fetched from bitQuery effective 13/8/21\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var txCount=44713126;var addressCount=2607499;var Stats=function Stats(){var _useTranslation=useTranslation(),t=_useTranslation.t;var data=useGetStats();var _useTheme=useTheme(),theme=_useTheme.theme;var tvlString=data?formatLocalisedCompactNumber(data.tvl):'-';var trades=formatLocalisedCompactNumber(txCount);var users=formatLocalisedCompactNumber(addressCount);var tvlText=t('And those users are now entrusting the platform with over $%tvl% in funds.',{tvl:tvlString});var _tvlText$split=tvlText.split(tvlString),_tvlText$split2=_slicedToArray(_tvlText$split,2),entrusting=_tvlText$split2[0],inFunds=_tvlText$split2[1];var UsersCardData={icon:/*#__PURE__*/_jsx(CommunityIcon,{color:\"secondary\",width:\"36px\"})};var TradesCardData={icon:/*#__PURE__*/_jsx(SwapIcon,{color:\"primary\",width:\"36px\"})};var StakedCardData={icon:/*#__PURE__*/_jsx(ChartIcon,{color:\"failure\",width:\"36px\"})};return/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",alignItems:\"center\",flexDirection:\"column\",children:[/*#__PURE__*/_jsx(GradientLogo,{height:\"48px\",width:\"48px\",mb:\"24px\"}),/*#__PURE__*/_jsx(Heading,{textAlign:\"center\",scale:\"xl\",children:t('Used by millions.')}),/*#__PURE__*/_jsx(Heading,{textAlign:\"center\",scale:\"xl\",mb:\"32px\",children:t('Trusted with billions.')}),/*#__PURE__*/_jsx(Text,{textAlign:\"center\",color:\"textSubtle\",children:t('PancakeSwap has the most users of any decentralized platform, ever.')}),/*#__PURE__*/_jsx(Flex,{flexWrap:\"wrap\",children:/*#__PURE__*/_jsxs(Text,{display:\"inline\",textAlign:\"center\",color:\"textSubtle\",mb:\"20px\",children:[entrusting,/*#__PURE__*/_jsx(_Fragment,{children:data?/*#__PURE__*/_jsx(_Fragment,{children:tvlString}):/*#__PURE__*/_jsx(Skeleton,{display:\"inline-block\",height:16,width:70,mt:\"2px\"})}),inFunds]})}),/*#__PURE__*/_jsx(Text,{textAlign:\"center\",color:\"textSubtle\",bold:true,mb:\"32px\",children:t('Will you join them?')}),/*#__PURE__*/_jsxs(Flex,{flexDirection:['column',null,null,'row'],children:[/*#__PURE__*/_jsx(IconCard,_objectSpread(_objectSpread({},UsersCardData),{},{mr:[null,null,null,'16px'],mb:['16px',null,null,'0'],children:/*#__PURE__*/_jsx(StatCardContent,{headingText:t('%users% users',{users:users}),bodyText:t('in the last 30 days'),highlightColor:theme.colors.secondary})})),/*#__PURE__*/_jsx(IconCard,_objectSpread(_objectSpread({},TradesCardData),{},{mr:[null,null,null,'16px'],mb:['16px',null,null,'0'],children:/*#__PURE__*/_jsx(StatCardContent,{headingText:t('%trades% trades',{trades:trades}),bodyText:t('made in the last 30 days'),highlightColor:theme.colors.primary})})),/*#__PURE__*/_jsx(IconCard,_objectSpread(_objectSpread({},StakedCardData),{},{children:/*#__PURE__*/_jsx(StatCardContent,{headingText:t('$%tvl% staked',{tvl:tvlString}),bodyText:t('Total Value Locked'),highlightColor:theme.colors.failure})}))]})]});};export default Stats;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Home/components/MetricsSection/index.tsx"],"names":["React","Heading","Flex","Text","Skeleton","ChartIcon","CommunityIcon","SwapIcon","useTranslation","useGetStats","useTheme","formatLocalisedCompactNumber","IconCard","StatCardContent","GradientLogo","txCount","addressCount","Stats","t","data","theme","tvlString","tvl","trades","users","tvlText","split","entrusting","inFunds","UsersCardData","icon","TradesCardData","StakedCardData","colors","secondary","primary","failure"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetStats } from 'hooks/api'\nimport useTheme from 'hooks/useTheme'\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\nimport IconCard, { IconCardData } from '../IconCard'\nimport StatCardContent from './StatCardContent'\nimport GradientLogo from '../GradientLogoSvg'\n\n// Values fetched from bitQuery effective 13/8/21\nconst txCount = 44713126\nconst addressCount = 2607499\n\nconst Stats = () => {\n  const { t } = useTranslation()\n  const data = useGetStats()\n  const { theme } = useTheme()\n\n  const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-'\n  const trades = formatLocalisedCompactNumber(txCount)\n  const users = formatLocalisedCompactNumber(addressCount)\n\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', { tvl: tvlString })\n  const [entrusting, inFunds] = tvlText.split(tvlString)\n\n  const UsersCardData: IconCardData = {\n    icon: <CommunityIcon color=\"secondary\" width=\"36px\" />,\n  }\n\n  const TradesCardData: IconCardData = {\n    icon: <SwapIcon color=\"primary\" width=\"36px\" />,\n  }\n\n  const StakedCardData: IconCardData = {\n    icon: <ChartIcon color=\"failure\" width=\"36px\" />,\n  }\n\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n      <GradientLogo height=\"48px\" width=\"48px\" mb=\"24px\" />\n      <Heading textAlign=\"center\" scale=\"xl\">\n        {t('Used by millions.')}\n      </Heading>\n      <Heading textAlign=\"center\" scale=\"xl\" mb=\"32px\">\n        {t('Trusted with billions.')}\n      </Heading>\n      <Text textAlign=\"center\" color=\"textSubtle\">\n        {t('PancakeSwap has the most users of any decentralized platform, ever.')}\n      </Text>\n      <Flex flexWrap=\"wrap\">\n        <Text display=\"inline\" textAlign=\"center\" color=\"textSubtle\" mb=\"20px\">\n          {entrusting}\n          <>{data ? <>{tvlString}</> : <Skeleton display=\"inline-block\" height={16} width={70} mt=\"2px\" />}</>\n          {inFunds}\n        </Text>\n      </Flex>\n\n      <Text textAlign=\"center\" color=\"textSubtle\" bold mb=\"32px\">\n        {t('Will you join them?')}\n      </Text>\n\n      <Flex flexDirection={['column', null, null, 'row']}>\n        <IconCard {...UsersCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText={t('%users% users', { users })}\n            bodyText={t('in the last 30 days')}\n            highlightColor={theme.colors.secondary}\n          />\n        </IconCard>\n        <IconCard {...TradesCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText={t('%trades% trades', { trades })}\n            bodyText={t('made in the last 30 days')}\n            highlightColor={theme.colors.primary}\n          />\n        </IconCard>\n        <IconCard {...StakedCardData}>\n          <StatCardContent\n            headingText={t('$%tvl% staked', { tvl: tvlString })}\n            bodyText={t('Total Value Locked')}\n            highlightColor={theme.colors.failure}\n          />\n        </IconCard>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Stats\n"]},"metadata":{},"sourceType":"module"}