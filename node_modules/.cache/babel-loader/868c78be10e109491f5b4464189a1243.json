{"ast":null,"code":"import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{AutoRenewIcon,Card,CardHeader,ChevronDownIcon,Flex,Heading,Button,ChevronUpIcon,Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import orderBy from'lodash/orderBy';import{useTranslation}from'contexts/Localization';import{VotingStateLoadingStatus}from'state/types';import{useGetVotingStateLoadingStatus}from'state/voting/hooks';import VotesLoading from'../components/Proposal/VotesLoading';import VoteRow from'../components/Proposal/VoteRow';import Row,{AddressColumn,ChoiceColumn,VotingPowerColumn}from'../components/Proposal/Row';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var VOTES_PER_VIEW=20;var parseVotePower=function parseVotePower(incomingVote){var _incomingVote$metadat;return parseFloat(incomingVote===null||incomingVote===void 0?void 0:(_incomingVote$metadat=incomingVote.metadata)===null||_incomingVote$metadat===void 0?void 0:_incomingVote$metadat.votingPower);};var Votes=function Votes(_ref){var votes=_ref.votes;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAll=_useState2[0],setShowAll=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var orderedVotes=orderBy(votes,[parseVotePower,'created'],['desc','desc']);var displayVotes=showAll?orderedVotes:orderedVotes.slice(0,VOTES_PER_VIEW);var voteStatus=useGetVotingStateLoadingStatus();var isFinished=voteStatus===VotingStateLoadingStatus.IDLE;var handleClick=function handleClick(){setShowAll(!showAll);};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Heading,{as:\"h3\",scale:\"md\",children:t('Votes (%count%)',{count:votes.length.toLocaleString()})}),!isFinished&&/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,width:\"22px\"})]})}),!isFinished&&/*#__PURE__*/_jsx(VotesLoading,{}),isFinished&&displayVotes.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(AddressColumn,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",textTransform:\"uppercase\",bold:true,children:t('Voter')})}),/*#__PURE__*/_jsx(ChoiceColumn,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",textTransform:\"uppercase\",bold:true,children:t('Decision')})}),/*#__PURE__*/_jsx(VotingPowerColumn,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",textTransform:\"uppercase\",bold:true,children:t('Vote Weight')})})]}),displayVotes.map(function(vote){var isVoter=account&&vote.voter.toLowerCase()===account.toLowerCase();return/*#__PURE__*/_jsx(VoteRow,{vote:vote,isVoter:isVoter},vote.id);}),/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"center\",py:\"8px\",px:\"24px\",children:/*#__PURE__*/_jsx(Button,{width:\"100%\",onClick:handleClick,variant:\"text\",endIcon:showAll?/*#__PURE__*/_jsx(ChevronUpIcon,{color:\"primary\",width:\"21px\"}):/*#__PURE__*/_jsx(ChevronDownIcon,{color:\"primary\",width:\"21px\"}),disabled:!isFinished,children:showAll?t('Hide'):t('See All')})})]}),isFinished&&displayVotes.length===0&&/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"center\",py:\"32px\",children:/*#__PURE__*/_jsx(Heading,{as:\"h5\",children:t('No votes found')})})]});};export default Votes;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Voting/Proposal/Votes.tsx"],"names":["React","useState","AutoRenewIcon","Card","CardHeader","ChevronDownIcon","Flex","Heading","Button","ChevronUpIcon","Text","useWeb3React","orderBy","useTranslation","VotingStateLoadingStatus","useGetVotingStateLoadingStatus","VotesLoading","VoteRow","Row","AddressColumn","ChoiceColumn","VotingPowerColumn","VOTES_PER_VIEW","parseVotePower","incomingVote","parseFloat","metadata","votingPower","Votes","votes","showAll","setShowAll","t","account","orderedVotes","displayVotes","slice","voteStatus","isFinished","IDLE","handleClick","count","length","toLocaleString","map","vote","isVoter","voter","toLowerCase","id"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACEC,aADF,CAEEC,IAFF,CAGEC,UAHF,CAIEC,eAJF,CAKEC,IALF,CAMEC,OANF,CAOEC,MAPF,CAQEC,aARF,CASEC,IATF,KAUO,oBAVP,CAWA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAAeC,wBAAf,KAA+C,aAA/C,CACA,OAASC,8BAAT,KAA+C,oBAA/C,CACA,MAAOC,CAAAA,YAAP,KAAyB,qCAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gCAApB,CACA,MAAOC,CAAAA,GAAP,EAAcC,aAAd,CAA6BC,YAA7B,CAA2CC,iBAA3C,KAAoE,4BAApE,C,6IAEA,GAAMC,CAAAA,cAAc,CAAG,EAAvB,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,YAAD,CAAwB,2BAC7C,MAAOC,CAAAA,UAAU,CAACD,YAAD,SAACA,YAAD,wCAACA,YAAY,CAAEE,QAAf,gDAAC,sBAAwBC,WAAzB,CAAjB,CACD,CAFD,CAIA,GAAMC,CAAAA,KAA2B,CAAG,QAA9BA,CAAAA,KAA8B,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CACjD,cAA8B5B,QAAQ,CAAC,KAAD,CAAtC,wCAAO6B,OAAP,eAAgBC,UAAhB,eACA,oBAAclB,cAAc,EAA5B,CAAQmB,CAAR,iBAAQA,CAAR,CACA,kBAAoBrB,YAAY,EAAhC,CAAQsB,OAAR,eAAQA,OAAR,CACA,GAAMC,CAAAA,YAAY,CAAGtB,OAAO,CAACiB,KAAD,CAAQ,CAACN,cAAD,CAAiB,SAAjB,CAAR,CAAqC,CAAC,MAAD,CAAS,MAAT,CAArC,CAA5B,CACA,GAAMY,CAAAA,YAAY,CAAGL,OAAO,CAAGI,YAAH,CAAkBA,YAAY,CAACE,KAAb,CAAmB,CAAnB,CAAsBd,cAAtB,CAA9C,CACA,GAAMe,CAAAA,UAAU,CAAGtB,8BAA8B,EAAjD,CACA,GAAMuB,CAAAA,UAAU,CAAGD,UAAU,GAAKvB,wBAAwB,CAACyB,IAA3D,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBT,UAAU,CAAC,CAACD,OAAF,CAAV,CACD,CAFD,CAIA,mBACE,MAAC,IAAD,yBACE,KAAC,UAAD,wBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,cAAc,CAAC,eAAzC,wBACE,KAAC,OAAD,EAAS,EAAE,CAAC,IAAZ,CAAiB,KAAK,CAAC,IAAvB,UACGE,CAAC,CAAC,iBAAD,CAAoB,CAAES,KAAK,CAAEZ,KAAK,CAACa,MAAN,CAAaC,cAAb,EAAT,CAApB,CADJ,EADF,CAIG,CAACL,UAAD,eAAe,KAAC,aAAD,EAAe,IAAI,KAAnB,CAAoB,KAAK,CAAC,MAA1B,EAJlB,GADF,EADF,CASG,CAACA,UAAD,eAAe,KAAC,YAAD,IATlB,CAWGA,UAAU,EAAIH,YAAY,CAACO,MAAb,CAAsB,CAApC,eACC,wCACE,MAAC,GAAD,yBACE,KAAC,aAAD,wBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,CAAyC,aAAa,CAAC,WAAvD,CAAmE,IAAI,KAAvE,UACGV,CAAC,CAAC,OAAD,CADJ,EADF,EADF,cAME,KAAC,YAAD,wBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,CAAyC,aAAa,CAAC,WAAvD,CAAmE,IAAI,KAAvE,UACGA,CAAC,CAAC,UAAD,CADJ,EADF,EANF,cAWE,KAAC,iBAAD,wBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,CAAyC,aAAa,CAAC,WAAvD,CAAmE,IAAI,KAAvE,UACGA,CAAC,CAAC,aAAD,CADJ,EADF,EAXF,GADF,CAkBGG,YAAY,CAACS,GAAb,CAAiB,SAACC,IAAD,CAAU,CAC1B,GAAMC,CAAAA,OAAO,CAAGb,OAAO,EAAIY,IAAI,CAACE,KAAL,CAAWC,WAAX,KAA6Bf,OAAO,CAACe,WAAR,EAAxD,CACA,mBAAO,KAAC,OAAD,EAAuB,IAAI,CAAEH,IAA7B,CAAmC,OAAO,CAAEC,OAA5C,EAAcD,IAAI,CAACI,EAAnB,CAAP,CACD,CAHA,CAlBH,cAsBE,KAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,cAAc,CAAC,QAAzC,CAAkD,EAAE,CAAC,KAArD,CAA2D,EAAE,CAAC,MAA9D,uBACE,KAAC,MAAD,EACE,KAAK,CAAC,MADR,CAEE,OAAO,CAAET,WAFX,CAGE,OAAO,CAAC,MAHV,CAIE,OAAO,CACLV,OAAO,cACL,KAAC,aAAD,EAAe,KAAK,CAAC,SAArB,CAA+B,KAAK,CAAC,MAArC,EADK,cAGL,KAAC,eAAD,EAAiB,KAAK,CAAC,SAAvB,CAAiC,KAAK,CAAC,MAAvC,EARN,CAWE,QAAQ,CAAE,CAACQ,UAXb,UAaGR,OAAO,CAAGE,CAAC,CAAC,MAAD,CAAJ,CAAeA,CAAC,CAAC,SAAD,CAb1B,EADF,EAtBF,GAZJ,CAsDGM,UAAU,EAAIH,YAAY,CAACO,MAAb,GAAwB,CAAtC,eACC,KAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,cAAc,CAAC,QAAzC,CAAkD,EAAE,CAAC,MAArD,uBACE,KAAC,OAAD,EAAS,EAAE,CAAC,IAAZ,UAAkBV,CAAC,CAAC,gBAAD,CAAnB,EADF,EAvDJ,GADF,CA8DD,CA3ED,CA6EA,cAAeJ,CAAAA,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport {\n  AutoRenewIcon,\n  Card,\n  CardHeader,\n  ChevronDownIcon,\n  Flex,\n  Heading,\n  Button,\n  ChevronUpIcon,\n  Text,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport orderBy from 'lodash/orderBy'\nimport { useTranslation } from 'contexts/Localization'\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\nimport VotesLoading from '../components/Proposal/VotesLoading'\nimport VoteRow from '../components/Proposal/VoteRow'\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from '../components/Proposal/Row'\n\nconst VOTES_PER_VIEW = 20\n\ninterface VotesProps {\n  votes: Vote[]\n}\n\nconst parseVotePower = (incomingVote: Vote) => {\n  return parseFloat(incomingVote?.metadata?.votingPower)\n}\n\nconst Votes: React.FC<VotesProps> = ({ votes }) => {\n  const [showAll, setShowAll] = useState(false)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const orderedVotes = orderBy(votes, [parseVotePower, 'created'], ['desc', 'desc'])\n  const displayVotes = showAll ? orderedVotes : orderedVotes.slice(0, VOTES_PER_VIEW)\n  const voteStatus = useGetVotingStateLoadingStatus()\n  const isFinished = voteStatus === VotingStateLoadingStatus.IDLE\n\n  const handleClick = () => {\n    setShowAll(!showAll)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Heading as=\"h3\" scale=\"md\">\n            {t('Votes (%count%)', { count: votes.length.toLocaleString() })}\n          </Heading>\n          {!isFinished && <AutoRenewIcon spin width=\"22px\" />}\n        </Flex>\n      </CardHeader>\n      {!isFinished && <VotesLoading />}\n\n      {isFinished && displayVotes.length > 0 && (\n        <>\n          <Row>\n            <AddressColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                {t('Voter')}\n              </Text>\n            </AddressColumn>\n            <ChoiceColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                {t('Decision')}\n              </Text>\n            </ChoiceColumn>\n            <VotingPowerColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                {t('Vote Weight')}\n              </Text>\n            </VotingPowerColumn>\n          </Row>\n          {displayVotes.map((vote) => {\n            const isVoter = account && vote.voter.toLowerCase() === account.toLowerCase()\n            return <VoteRow key={vote.id} vote={vote} isVoter={isVoter} />\n          })}\n          <Flex alignItems=\"center\" justifyContent=\"center\" py=\"8px\" px=\"24px\">\n            <Button\n              width=\"100%\"\n              onClick={handleClick}\n              variant=\"text\"\n              endIcon={\n                showAll ? (\n                  <ChevronUpIcon color=\"primary\" width=\"21px\" />\n                ) : (\n                  <ChevronDownIcon color=\"primary\" width=\"21px\" />\n                )\n              }\n              disabled={!isFinished}\n            >\n              {showAll ? t('Hide') : t('See All')}\n            </Button>\n          </Flex>\n        </>\n      )}\n\n      {isFinished && displayVotes.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"32px\">\n          <Heading as=\"h5\">{t('No votes found')}</Heading>\n        </Flex>\n      )}\n    </Card>\n  )\n}\n\nexport default Votes\n"]},"metadata":{},"sourceType":"module"}