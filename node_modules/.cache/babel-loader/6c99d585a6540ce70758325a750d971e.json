{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/FarmAuction/components/PlaceBidModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nimport { Modal, Text, Flex, BalanceInput, Box, Button, PancakeRoundIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useWeb3React } from '@web3-react/core';\nimport { formatNumber, getBalanceAmount, getBalanceNumber } from 'utils/formatBalance';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { ethersToBigNumber } from 'utils/bigNumber';\nimport useTheme from 'hooks/useTheme';\nimport useTokenBalance, { FetchStatus } from 'hooks/useTokenBalance';\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction';\nimport { useCake, useFarmAuctionContract } from 'hooks/useContract';\nimport { DEFAULT_TOKEN_DECIMAL } from 'config';\nimport useToast from 'hooks/useToast';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport ApproveConfirmButtons, { ButtonArrangement } from 'views/Profile/components/ApproveConfirmButtons';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n  & > div:nth-child(2) {\n    padding: 0;\n  }\n`;\n_c = StyledModal;\nconst ExistingInfo = styled(Box)`\n  padding: 24px;\n  background-color: ${({\n  theme\n}) => theme.colors.dropdown};\n`;\n_c2 = ExistingInfo;\nconst InnerContent = styled(Box)`\n  padding: 24px;\n`;\n_c3 = InnerContent;\n\nconst PlaceBidModal = ({\n  onDismiss,\n  initialBidAmount,\n  connectedBidder,\n  refreshBidders\n}) => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  const {\n    callWithGasPrice\n  } = useCallWithGasPrice();\n  const [bid, setBid] = useState('');\n  const [isMultipleOfTen, setIsMultipleOfTen] = useState(false);\n  const [isMoreThanInitialBidAmount, setIsMoreThanInitialBidAmount] = useState(false);\n  const [userNotEnoughCake, setUserNotEnoughCake] = useState(false);\n  const [errorText, setErrorText] = useState(null);\n  const {\n    balance: userCake,\n    fetchStatus\n  } = useTokenBalance(getCakeAddress());\n  const userCakeBalance = getBalanceAmount(userCake);\n  const cakePriceBusd = usePriceCakeBusd();\n  const farmAuctionContract = useFarmAuctionContract();\n  const cakeContract = useCake();\n  const {\n    toastSuccess\n  } = useToast();\n  const {\n    bidderData\n  } = connectedBidder;\n  const {\n    amount,\n    position\n  } = bidderData;\n  const isFirstBid = amount.isZero();\n  const isInvalidFirstBid = isFirstBid && !isMoreThanInitialBidAmount;\n  useEffect(() => {\n    setIsMoreThanInitialBidAmount(parseFloat(bid) >= initialBidAmount);\n    setIsMultipleOfTen(parseFloat(bid) % 10 === 0 && parseFloat(bid) !== 0);\n\n    if (fetchStatus === FetchStatus.SUCCESS && userCakeBalance.lt(bid)) {\n      setUserNotEnoughCake(true);\n    } else {\n      setUserNotEnoughCake(false);\n    }\n  }, [bid, initialBidAmount, fetchStatus, userCakeBalance]);\n  useEffect(() => {\n    if (userNotEnoughCake) {\n      setErrorText(t('Insufficient CAKE balance'));\n    } else if (!isMoreThanInitialBidAmount && isFirstBid) {\n      setErrorText(t('First bid must be %initialBidAmount% CAKE or more.', {\n        initialBidAmount\n      }));\n    } else if (!isMultipleOfTen) {\n      setErrorText(t('Bid must be a multiple of 10'));\n    } else {\n      setErrorText(null);\n    }\n  }, [isMultipleOfTen, isMoreThanInitialBidAmount, userNotEnoughCake, initialBidAmount, t, isFirstBid]);\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.allowance(account, farmAuctionContract.address);\n        const currentAllowance = ethersToBigNumber(response);\n        return currentAllowance.gt(0);\n      } catch (error) {\n        return false;\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(cakeContract, 'approve', [farmAuctionContract.address, ethers.constants.MaxUint256]);\n    },\n    onApproveSuccess: async () => {\n      toastSuccess(t('Contract approved - you can now place your bid!'));\n    },\n    onConfirm: () => {\n      const bidAmount = new BigNumber(bid).times(DEFAULT_TOKEN_DECIMAL).toString();\n      return callWithGasPrice(farmAuctionContract, 'bid', [bidAmount]);\n    },\n    onSuccess: async () => {\n      refreshBidders();\n      onDismiss();\n      toastSuccess(t('Bid placed!'));\n    }\n  });\n\n  const handleInputChange = input => {\n    setBid(input);\n  };\n\n  const setPercentageValue = percentage => {\n    const rounding = percentage === 1 ? BigNumber.ROUND_FLOOR : BigNumber.ROUND_CEIL;\n    const valueToSet = getBalanceAmount(userCake.times(percentage)).div(10).integerValue(rounding).times(10);\n    setBid(valueToSet.toString());\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    title: t('Place a Bid'),\n    onDismiss: onDismiss,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: [/*#__PURE__*/_jsxDEV(ExistingInfo, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: t('Your existing bid')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('%num% CAKE', {\n            num: getBalanceNumber(amount).toLocaleString()\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: t('Your position')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: position ? `#${position}` : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InnerContent, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        pb: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: t('Bid a multiple of 10')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(PancakeRoundIcon, {\n            width: \"24px\",\n            height: \"24px\",\n            mr: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            children: \"CAKE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), isFirstBid && /*#__PURE__*/_jsxDEV(Text, {\n        pb: \"8px\",\n        small: true,\n        children: t('First bid must be %initialBidAmount% CAKE or more.', {\n          initialBidAmount\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BalanceInput, {\n        isWarning: !isMultipleOfTen || isInvalidFirstBid,\n        placeholder: \"0\",\n        value: bid,\n        onUserInput: handleInputChange,\n        currencyValue: cakePriceBusd.gt(0) && `~${bid ? cakePriceBusd.times(new BigNumber(bid)).toNumber().toLocaleString() : '0.00'} USD`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"flex-end\",\n        mt: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          mr: \"8px\",\n          children: [t('Balance'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          children: formatNumber(userCakeBalance.toNumber(), 3, 3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), errorText && /*#__PURE__*/_jsxDEV(Text, {\n        color: \"failure\",\n        textAlign: \"right\",\n        fontSize: \"12px\",\n        children: errorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        mt: \"8px\",\n        mb: \"24px\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: fetchStatus !== FetchStatus.SUCCESS,\n          scale: \"xs\",\n          mx: \"2px\",\n          p: \"4px 16px\",\n          variant: \"tertiary\",\n          onClick: () => setPercentageValue(0.25),\n          children: \"25%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: fetchStatus !== FetchStatus.SUCCESS,\n          scale: \"xs\",\n          mx: \"2px\",\n          p: \"4px 16px\",\n          variant: \"tertiary\",\n          onClick: () => setPercentageValue(0.5),\n          children: \"50%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: fetchStatus !== FetchStatus.SUCCESS,\n          scale: \"xs\",\n          mx: \"2px\",\n          p: \"4px 16px\",\n          variant: \"tertiary\",\n          onClick: () => setPercentageValue(0.75),\n          children: \"75%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: fetchStatus !== FetchStatus.SUCCESS,\n          scale: \"xs\",\n          mx: \"2px\",\n          p: \"4px 16px\",\n          variant: \"tertiary\",\n          onClick: () => setPercentageValue(1),\n          children: \"MAX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        children: account ? /*#__PURE__*/_jsxDEV(ApproveConfirmButtons, {\n          isApproveDisabled: isApproved,\n          isApproving: isApproving,\n          isConfirmDisabled: !isMultipleOfTen || getBalanceAmount(userCake).lt(bid) || isConfirmed || isInvalidFirstBid || userNotEnoughCake,\n          isConfirming: isConfirming,\n          onApprove: handleApprove,\n          onConfirm: handleConfirm,\n          buttonArrangement: ButtonArrangement.SEQUENTIAL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ConnectWalletButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        small: true,\n        mt: \"24px\",\n        children: t('If your bid is unsuccessful, you’ll be able to reclaim your CAKE after the auction.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlaceBidModal, \"rAUlIXNSQdhLwuTSG6p9WiYhyX4=\", false, function () {\n  return [useWeb3React, useTranslation, useTheme, useCallWithGasPrice, useTokenBalance, usePriceCakeBusd, useFarmAuctionContract, useCake, useToast, useApproveConfirmTransaction];\n});\n\n_c4 = PlaceBidModal;\nexport default PlaceBidModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledModal\");\n$RefreshReg$(_c2, \"ExistingInfo\");\n$RefreshReg$(_c3, \"InnerContent\");\n$RefreshReg$(_c4, \"PlaceBidModal\");","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/FarmAuction/components/PlaceBidModal.tsx"],"names":["React","useState","useEffect","styled","BigNumber","ethers","Modal","Text","Flex","BalanceInput","Box","Button","PancakeRoundIcon","useTranslation","useWeb3React","formatNumber","getBalanceAmount","getBalanceNumber","getCakeAddress","ethersToBigNumber","useTheme","useTokenBalance","FetchStatus","useApproveConfirmTransaction","useCake","useFarmAuctionContract","DEFAULT_TOKEN_DECIMAL","useToast","ConnectWalletButton","ApproveConfirmButtons","ButtonArrangement","usePriceCakeBusd","useCallWithGasPrice","StyledModal","ExistingInfo","theme","colors","dropdown","InnerContent","PlaceBidModal","onDismiss","initialBidAmount","connectedBidder","refreshBidders","account","t","callWithGasPrice","bid","setBid","isMultipleOfTen","setIsMultipleOfTen","isMoreThanInitialBidAmount","setIsMoreThanInitialBidAmount","userNotEnoughCake","setUserNotEnoughCake","errorText","setErrorText","balance","userCake","fetchStatus","userCakeBalance","cakePriceBusd","farmAuctionContract","cakeContract","toastSuccess","bidderData","amount","position","isFirstBid","isZero","isInvalidFirstBid","parseFloat","SUCCESS","lt","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onRequiresApproval","response","allowance","address","currentAllowance","gt","error","onApprove","constants","MaxUint256","onApproveSuccess","onConfirm","bidAmount","times","toString","onSuccess","handleInputChange","input","setPercentageValue","percentage","rounding","ROUND_FLOOR","ROUND_CEIL","valueToSet","div","integerValue","gradients","cardHeader","num","toLocaleString","toNumber","SEQUENTIAL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, Text, Flex, BalanceInput, Box, Button, PancakeRoundIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { formatNumber, getBalanceAmount, getBalanceNumber } from 'utils/formatBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { ethersToBigNumber } from 'utils/bigNumber'\nimport useTheme from 'hooks/useTheme'\nimport useTokenBalance, { FetchStatus } from 'hooks/useTokenBalance'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useFarmAuctionContract } from 'hooks/useContract'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport useToast from 'hooks/useToast'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ApproveConfirmButtons, { ButtonArrangement } from 'views/Profile/components/ApproveConfirmButtons'\nimport { ConnectedBidder } from 'config/constants/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n  & > div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ExistingInfo = styled(Box)`\n  padding: 24px;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst InnerContent = styled(Box)`\n  padding: 24px;\n`\n\ninterface PlaceBidModalProps {\n  onDismiss?: () => void\n  // undefined initialBidAmount is passed only if auction is not loaded\n  // in this case modal will not be possible to open\n  initialBidAmount?: number\n  connectedBidder: ConnectedBidder\n  refreshBidders: () => void\n}\n\nconst PlaceBidModal: React.FC<PlaceBidModalProps> = ({\n  onDismiss,\n  initialBidAmount,\n  connectedBidder,\n  refreshBidders,\n}) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const [bid, setBid] = useState('')\n  const [isMultipleOfTen, setIsMultipleOfTen] = useState(false)\n  const [isMoreThanInitialBidAmount, setIsMoreThanInitialBidAmount] = useState(false)\n  const [userNotEnoughCake, setUserNotEnoughCake] = useState(false)\n  const [errorText, setErrorText] = useState(null)\n\n  const { balance: userCake, fetchStatus } = useTokenBalance(getCakeAddress())\n  const userCakeBalance = getBalanceAmount(userCake)\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const farmAuctionContract = useFarmAuctionContract()\n  const cakeContract = useCake()\n\n  const { toastSuccess } = useToast()\n\n  const { bidderData } = connectedBidder\n  const { amount, position } = bidderData\n  const isFirstBid = amount.isZero()\n  const isInvalidFirstBid = isFirstBid && !isMoreThanInitialBidAmount\n\n  useEffect(() => {\n    setIsMoreThanInitialBidAmount(parseFloat(bid) >= initialBidAmount)\n    setIsMultipleOfTen(parseFloat(bid) % 10 === 0 && parseFloat(bid) !== 0)\n    if (fetchStatus === FetchStatus.SUCCESS && userCakeBalance.lt(bid)) {\n      setUserNotEnoughCake(true)\n    } else {\n      setUserNotEnoughCake(false)\n    }\n  }, [bid, initialBidAmount, fetchStatus, userCakeBalance])\n\n  useEffect(() => {\n    if (userNotEnoughCake) {\n      setErrorText(t('Insufficient CAKE balance'))\n    } else if (!isMoreThanInitialBidAmount && isFirstBid) {\n      setErrorText(t('First bid must be %initialBidAmount% CAKE or more.', { initialBidAmount }))\n    } else if (!isMultipleOfTen) {\n      setErrorText(t('Bid must be a multiple of 10'))\n    } else {\n      setErrorText(null)\n    }\n  }, [isMultipleOfTen, isMoreThanInitialBidAmount, userNotEnoughCake, initialBidAmount, t, isFirstBid])\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, farmAuctionContract.address)\n          const currentAllowance = ethersToBigNumber(response)\n          return currentAllowance.gt(0)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [farmAuctionContract.address, ethers.constants.MaxUint256])\n      },\n      onApproveSuccess: async () => {\n        toastSuccess(t('Contract approved - you can now place your bid!'))\n      },\n      onConfirm: () => {\n        const bidAmount = new BigNumber(bid).times(DEFAULT_TOKEN_DECIMAL).toString()\n        return callWithGasPrice(farmAuctionContract, 'bid', [bidAmount])\n      },\n      onSuccess: async () => {\n        refreshBidders()\n        onDismiss()\n        toastSuccess(t('Bid placed!'))\n      },\n    })\n\n  const handleInputChange = (input: string) => {\n    setBid(input)\n  }\n\n  const setPercentageValue = (percentage: number) => {\n    const rounding = percentage === 1 ? BigNumber.ROUND_FLOOR : BigNumber.ROUND_CEIL\n    const valueToSet = getBalanceAmount(userCake.times(percentage)).div(10).integerValue(rounding).times(10)\n    setBid(valueToSet.toString())\n  }\n  return (\n    <StyledModal title={t('Place a Bid')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <ExistingInfo>\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Your existing bid')}</Text>\n          <Text>{t('%num% CAKE', { num: getBalanceNumber(amount).toLocaleString() })}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Your position')}</Text>\n          <Text>{position ? `#${position}` : '-'}</Text>\n        </Flex>\n      </ExistingInfo>\n      <InnerContent>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"8px\">\n          <Text>{t('Bid a multiple of 10')}</Text>\n          <Flex>\n            <PancakeRoundIcon width=\"24px\" height=\"24px\" mr=\"4px\" />\n            <Text bold>CAKE</Text>\n          </Flex>\n        </Flex>\n        {isFirstBid && (\n          <Text pb=\"8px\" small>\n            {t('First bid must be %initialBidAmount% CAKE or more.', { initialBidAmount })}\n          </Text>\n        )}\n        <BalanceInput\n          isWarning={!isMultipleOfTen || isInvalidFirstBid}\n          placeholder=\"0\"\n          value={bid}\n          onUserInput={handleInputChange}\n          currencyValue={\n            cakePriceBusd.gt(0) &&\n            `~${bid ? cakePriceBusd.times(new BigNumber(bid)).toNumber().toLocaleString() : '0.00'} USD`\n          }\n        />\n        <Flex justifyContent=\"flex-end\" mt=\"8px\">\n          <Text fontSize=\"12px\" color=\"textSubtle\" mr=\"8px\">\n            {t('Balance')}:\n          </Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {formatNumber(userCakeBalance.toNumber(), 3, 3)}\n          </Text>\n        </Flex>\n        {errorText && (\n          <Text color=\"failure\" textAlign=\"right\" fontSize=\"12px\">\n            {errorText}\n          </Text>\n        )}\n        <Flex justifyContent=\"space-between\" mt=\"8px\" mb=\"24px\">\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(0.25)}\n          >\n            25%\n          </Button>\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(0.5)}\n          >\n            50%\n          </Button>\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(0.75)}\n          >\n            75%\n          </Button>\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(1)}\n          >\n            MAX\n          </Button>\n        </Flex>\n        <Flex flexDirection=\"column\">\n          {account ? (\n            <ApproveConfirmButtons\n              isApproveDisabled={isApproved}\n              isApproving={isApproving}\n              isConfirmDisabled={\n                !isMultipleOfTen ||\n                getBalanceAmount(userCake).lt(bid) ||\n                isConfirmed ||\n                isInvalidFirstBid ||\n                userNotEnoughCake\n              }\n              isConfirming={isConfirming}\n              onApprove={handleApprove}\n              onConfirm={handleConfirm}\n              buttonArrangement={ButtonArrangement.SEQUENTIAL}\n            />\n          ) : (\n            <ConnectWalletButton />\n          )}\n        </Flex>\n        <Text color=\"textSubtle\" small mt=\"24px\">\n          {t('If your bid is unsuccessful, you’ll be able to reclaim your CAKE after the auction.')}\n        </Text>\n      </InnerContent>\n    </StyledModal>\n  )\n}\n\nexport default PlaceBidModal\n"]},"metadata":{},"sourceType":"module"}