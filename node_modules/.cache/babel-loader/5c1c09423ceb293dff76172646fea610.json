{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,useMemo}from'react';import{usePriceCakeBusd}from'state/farms/hooks';import{useAppDispatch}from'state';import{orderBy}from'lodash';import{fetchCakeVaultFees,fetchPoolsPublicDataAsync}from'state/pools';import{simpleRpcProvider}from'utils/providers';import{useSelector}from'react-redux';import{useCakeVault}from'state/pools/hooks';import{getAprData}from'views/Pools/helpers';var FetchStatus;(function(FetchStatus){FetchStatus[\"NOT_FETCHED\"]=\"not-fetched\";FetchStatus[\"FETCHING\"]=\"fetching\";FetchStatus[\"SUCCESS\"]=\"success\";FetchStatus[\"FAILED\"]=\"failed\";})(FetchStatus||(FetchStatus={}));var useGetTopPoolsByApr=function useGetTopPoolsByApr(isIntersecting){var dispatch=useAppDispatch();var _useSelector=useSelector(function(state){return{pools:state.pools.data,userDataLoaded:state.pools.userDataLoaded};}),poolsWithoutAutoVault=_useSelector.pools;var _useCakeVault=useCakeVault(),performanceFee=_useCakeVault.fees.performanceFee;var performanceFeeAsDecimal=performanceFee&&performanceFee/100;var _useState=useState(FetchStatus.NOT_FETCHED),_useState2=_slicedToArray(_useState,2),fetchStatus=_useState2[0],setFetchStatus=_useState2[1];var _useState3=useState([null,null,null,null,null]),_useState4=_slicedToArray(_useState3,2),topPools=_useState4[0],setTopPools=_useState4[1];var pools=useMemo(function(){var activePools=poolsWithoutAutoVault.filter(function(pool){return!pool.isFinished;});var cakePool=activePools.find(function(pool){return pool.sousId===0;});var cakeAutoVault=_objectSpread(_objectSpread({},cakePool),{},{isAutoVault:true});var cakeAutoVaultWithApr=_objectSpread(_objectSpread({},cakeAutoVault),{},{apr:getAprData(cakeAutoVault,performanceFeeAsDecimal).apr});return[cakeAutoVaultWithApr].concat(_toConsumableArray(poolsWithoutAutoVault));},[poolsWithoutAutoVault,performanceFeeAsDecimal]);var cakePriceBusd=usePriceCakeBusd();useEffect(function(){var fetchPoolsPublicData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var blockNumber;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setFetchStatus(FetchStatus.FETCHING);_context.next=3;return simpleRpcProvider.getBlockNumber();case 3:blockNumber=_context.sent;_context.prev=4;_context.next=7;return dispatch(fetchCakeVaultFees());case 7:_context.next=9;return dispatch(fetchPoolsPublicDataAsync(blockNumber));case 9:setFetchStatus(FetchStatus.SUCCESS);_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](4);console.error(_context.t0);setFetchStatus(FetchStatus.FAILED);case 16:case\"end\":return _context.stop();}}},_callee,null,[[4,12]]);}));return function fetchPoolsPublicData(){return _ref.apply(this,arguments);};}();if(isIntersecting&&fetchStatus===FetchStatus.NOT_FETCHED){fetchPoolsPublicData();}},[dispatch,setFetchStatus,fetchStatus,topPools,isIntersecting]);useEffect(function(){var getTopPoolsByApr=function getTopPoolsByApr(activePools){var sortedByApr=orderBy(activePools,function(pool){return pool.apr||0;},'desc');setTopPools(sortedByApr.slice(0,5));};if(fetchStatus===FetchStatus.SUCCESS&&!topPools[0]){getTopPoolsByApr(pools);}},[setTopPools,pools,fetchStatus,cakePriceBusd,topPools,performanceFeeAsDecimal]);return{topPools:topPools};};export default useGetTopPoolsByApr;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Home/hooks/useGetTopPoolsByApr.tsx"],"names":["useState","useEffect","useMemo","usePriceCakeBusd","useAppDispatch","orderBy","fetchCakeVaultFees","fetchPoolsPublicDataAsync","simpleRpcProvider","useSelector","useCakeVault","getAprData","FetchStatus","useGetTopPoolsByApr","isIntersecting","dispatch","state","pools","data","userDataLoaded","poolsWithoutAutoVault","performanceFee","fees","performanceFeeAsDecimal","NOT_FETCHED","fetchStatus","setFetchStatus","topPools","setTopPools","activePools","filter","pool","isFinished","cakePool","find","sousId","cakeAutoVault","isAutoVault","cakeAutoVaultWithApr","apr","cakePriceBusd","fetchPoolsPublicData","FETCHING","getBlockNumber","blockNumber","SUCCESS","console","error","FAILED","getTopPoolsByApr","sortedByApr","slice"],"mappings":"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","sourcesContent":["import { useState, useEffect, useMemo } from 'react'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Pool, State } from 'state/types'\nimport { fetchCakeVaultFees, fetchPoolsPublicDataAsync } from 'state/pools'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { useSelector } from 'react-redux'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getAprData } from 'views/Pools/helpers'\n\nenum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useGetTopPoolsByApr = (isIntersecting: boolean) => {\n  const dispatch = useAppDispatch()\n  const { pools: poolsWithoutAutoVault } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [topPools, setTopPools] = useState<Pool[]>([null, null, null, null, null])\n\n  const pools = useMemo(() => {\n    const activePools = poolsWithoutAutoVault.filter((pool) => !pool.isFinished)\n    const cakePool = activePools.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    const cakeAutoVaultWithApr = { ...cakeAutoVault, apr: getAprData(cakeAutoVault, performanceFeeAsDecimal).apr }\n    return [cakeAutoVaultWithApr, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault, performanceFeeAsDecimal])\n\n  const cakePriceBusd = usePriceCakeBusd()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      setFetchStatus(FetchStatus.FETCHING)\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n\n      try {\n        await dispatch(fetchCakeVaultFees())\n        await dispatch(fetchPoolsPublicDataAsync(blockNumber))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch (e) {\n        console.error(e)\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (isIntersecting && fetchStatus === FetchStatus.NOT_FETCHED) {\n      fetchPoolsPublicData()\n    }\n  }, [dispatch, setFetchStatus, fetchStatus, topPools, isIntersecting])\n\n  useEffect(() => {\n    const getTopPoolsByApr = (activePools: Pool[]) => {\n      const sortedByApr = orderBy(activePools, (pool: Pool) => pool.apr || 0, 'desc')\n      setTopPools(sortedByApr.slice(0, 5))\n    }\n    if (fetchStatus === FetchStatus.SUCCESS && !topPools[0]) {\n      getTopPoolsByApr(pools)\n    }\n  }, [setTopPools, pools, fetchStatus, cakePriceBusd, topPools, performanceFeeAsDecimal])\n\n  return { topPools }\n}\n\nexport default useGetTopPoolsByApr\n"]},"metadata":{},"sourceType":"module"}