{"ast":null,"code":"import{useEffect}from'react';import{useWeb3React}from'@web3-react/core';import{useSelector}from'react-redux';import{useAppDispatch}from'state';import Nfts from'config/constants/nfts';import{fetchWalletNfts}from'./index';export var useGetCollectibles=function useGetCollectibles(){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var dispatch=useAppDispatch();var _useSelector=useSelector(function(state){return state.collectibles;}),isInitialized=_useSelector.isInitialized,isLoading=_useSelector.isLoading,data=_useSelector.data;var identifiers=Object.keys(data);useEffect(function(){// Fetch nfts only if we have not done so already\nif(!isInitialized){dispatch(fetchWalletNfts(account));}},[isInitialized,account,dispatch]);return{isInitialized:isInitialized,isLoading:isLoading,tokenIds:data,nftsInWallet:Nfts.filter(function(nft){return identifiers.includes(nft.identifier);})};};","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/state/collectibles/hooks.ts"],"names":["useEffect","useWeb3React","useSelector","useAppDispatch","Nfts","fetchWalletNfts","useGetCollectibles","account","dispatch","state","collectibles","isInitialized","isLoading","data","identifiers","Object","keys","tokenIds","nftsInWallet","filter","nft","includes","identifier"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CAEA,OAASC,eAAT,KAAgC,SAAhC,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CACtC,kBAAoBL,YAAY,EAAhC,CAAQM,OAAR,eAAQA,OAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGL,cAAc,EAA/B,CACA,iBAA2CD,WAAW,CAAC,SAACO,KAAD,QAAkBA,CAAAA,KAAK,CAACC,YAAxB,EAAD,CAAtD,CAAQC,aAAR,cAAQA,aAAR,CAAuBC,SAAvB,cAAuBA,SAAvB,CAAkCC,IAAlC,cAAkCA,IAAlC,CACA,GAAMC,CAAAA,WAAW,CAAGC,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAApB,CAEAb,SAAS,CAAC,UAAM,CACd;AACA,GAAI,CAACW,aAAL,CAAoB,CAClBH,QAAQ,CAACH,eAAe,CAACE,OAAD,CAAhB,CAAR,CACD,CACF,CALQ,CAKN,CAACI,aAAD,CAAgBJ,OAAhB,CAAyBC,QAAzB,CALM,CAAT,CAOA,MAAO,CACLG,aAAa,CAAbA,aADK,CAELC,SAAS,CAATA,SAFK,CAGLK,QAAQ,CAAEJ,IAHL,CAILK,YAAY,CAAEd,IAAI,CAACe,MAAL,CAAY,SAACC,GAAD,QAASN,CAAAA,WAAW,CAACO,QAAZ,CAAqBD,GAAG,CAACE,UAAzB,CAAT,EAAZ,CAJT,CAAP,CAMD,CAnBM","sourcesContent":["import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport Nfts from 'config/constants/nfts'\nimport { State } from '../types'\nimport { fetchWalletNfts } from './index'\n\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}