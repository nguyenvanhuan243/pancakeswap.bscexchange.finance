{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenvanhuan243/Documents/pancake-frontend/src/views/Profile/components/ConfirmProfileCreationModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Modal, Flex, Text } from '@pancakeswap/uikit';\nimport { useAppDispatch } from 'state';\nimport BigNumber from 'bignumber.js';\nimport { useTranslation } from 'contexts/Localization';\nimport { useCake, useProfile } from 'hooks/useContract';\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction';\nimport { fetchProfile } from 'state/profile';\nimport useToast from 'hooks/useToast';\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice';\nimport { REGISTER_COST } from '../ProfileCreation/config';\nimport ApproveConfirmButtons from './ApproveConfirmButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConfirmProfileCreationModal = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const profileContract = useProfile();\n  const dispatch = useAppDispatch();\n  const {\n    toastSuccess\n  } = useToast();\n  const cakeContract = useCake();\n  const {\n    callWithGasPrice\n  } = useCallWithGasPrice();\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.allowance(account, profileContract.address);\n        const currentAllowance = new BigNumber(response.toString());\n        return currentAllowance.gte(minimumCakeRequired);\n      } catch (error) {\n        return false;\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(cakeContract, 'approve', [profileContract.address, allowance.toJSON()]);\n    },\n    onConfirm: () => {\n      return callWithGasPrice(profileContract, 'createProfile', [teamId, selectedNft.nftAddress, selectedNft.tokenId]);\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account));\n      onDismiss();\n      toastSuccess(t('Profile created!'));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Complete Profile'),\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      mb: \"8px\",\n      children: t('Submitting NFT to contract and confirming User Name and Team.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      mb: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: t('Cost')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: t('%num% CAKE', {\n          num: REGISTER_COST\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApproveConfirmButtons, {\n      isApproveDisabled: isConfirmed || isConfirming || isApproved,\n      isApproving: isApproving,\n      isConfirmDisabled: !isApproved || isConfirmed,\n      isConfirming: isConfirming,\n      onApprove: handleApprove,\n      onConfirm: handleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfirmProfileCreationModal, \"6tbotzXn7X50nPMBCthfewYqwNQ=\", false, function () {\n  return [useTranslation, useProfile, useAppDispatch, useToast, useCake, useCallWithGasPrice, useApproveConfirmTransaction];\n});\n\n_c = ConfirmProfileCreationModal;\nexport default ConfirmProfileCreationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmProfileCreationModal\");","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/pancake-frontend/src/views/Profile/components/ConfirmProfileCreationModal.tsx"],"names":["React","Modal","Flex","Text","useAppDispatch","BigNumber","useTranslation","useCake","useProfile","useApproveConfirmTransaction","fetchProfile","useToast","useCallWithGasPrice","REGISTER_COST","ApproveConfirmButtons","ConfirmProfileCreationModal","account","teamId","selectedNft","minimumCakeRequired","allowance","onDismiss","t","profileContract","dispatch","toastSuccess","cakeContract","callWithGasPrice","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onRequiresApproval","response","address","currentAllowance","toString","gte","error","onApprove","toJSON","onConfirm","nftAddress","tokenId","onSuccess","num"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\nimport { State } from '../ProfileCreation/contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, profileContract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [profileContract.address, allowance.toJSON()])\n      },\n      onConfirm: () => {\n        return callWithGasPrice(profileContract, 'createProfile', [teamId, selectedNft.nftAddress, selectedNft.tokenId])\n      },\n      onSuccess: async () => {\n        await dispatch(fetchProfile(account))\n        onDismiss()\n        toastSuccess(t('Profile created!'))\n      },\n    })\n\n  return (\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{t('Cost')}</Text>\n        <Text>{t('%num% CAKE', { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n"]},"metadata":{},"sourceType":"module"}