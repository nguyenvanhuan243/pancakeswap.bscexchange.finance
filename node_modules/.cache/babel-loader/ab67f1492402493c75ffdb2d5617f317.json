{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Collectibles/components/NftList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from 'react';\nimport orderBy from 'lodash/orderBy';\nimport { useWeb3React } from '@web3-react/core';\nimport nfts from 'config/constants/nfts';\nimport { useAppDispatch } from 'state';\nimport { fetchWalletNfts } from 'state/collectibles';\nimport { useGetCollectibles } from 'state/collectibles/hooks';\nimport NftCard from './NftCard';\nimport NftGrid from './NftGrid';\nimport EasterNftCard from './NftCard/EasterNftCard';\nimport LotteryNftCard from './NftCard/LotteryNftCard';\n/**\n * A map of bunnyIds to special campaigns (NFT distribution)\n * Each NftCard is responsible for checking it's own claim status\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nftComponents = {\n  'easter-storm': EasterNftCard,\n  'easter-flipper': EasterNftCard,\n  'easter-caker': EasterNftCard,\n  lottie: LotteryNftCard,\n  lucky: LotteryNftCard,\n  baller: LotteryNftCard\n};\n\nconst NftList = () => {\n  _s();\n\n  const {\n    tokenIds\n  } = useGetCollectibles();\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const handleRefresh = useCallback(() => {\n    dispatch(fetchWalletNfts(account));\n  }, [dispatch, account]);\n  useEffect(() => {\n    handleRefresh();\n  }, [account, handleRefresh]);\n  return /*#__PURE__*/_jsxDEV(NftGrid, {\n    children: orderBy(nfts, 'sortOrder').map(nft => {\n      const Card = nftComponents[nft.identifier] || NftCard;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          nft: nft,\n          tokenIds: tokenIds[nft.identifier],\n          refresh: handleRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, nft.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NftList, \"vkyzKSegRMdSItY7YFpRk5lc3fM=\", false, function () {\n  return [useGetCollectibles, useAppDispatch, useWeb3React];\n});\n\n_c = NftList;\nexport default NftList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftList\");","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Collectibles/components/NftList.tsx"],"names":["React","useEffect","useCallback","orderBy","useWeb3React","nfts","useAppDispatch","fetchWalletNfts","useGetCollectibles","NftCard","NftGrid","EasterNftCard","LotteryNftCard","nftComponents","lottie","lucky","baller","NftList","tokenIds","dispatch","account","handleRefresh","map","nft","Card","identifier","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,aAAa,GAAG;AACpB,kBAAgBF,aADI;AAEpB,oBAAkBA,aAFE;AAGpB,kBAAgBA,aAHI;AAIpBG,EAAAA,MAAM,EAAEF,cAJY;AAKpBG,EAAAA,KAAK,EAAEH,cALa;AAMpBI,EAAAA,MAAM,EAAEJ;AANY,CAAtB;;AASA,MAAMK,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAeV,kBAAkB,EAAvC;AACA,QAAMW,QAAQ,GAAGb,cAAc,EAA/B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAchB,YAAY,EAAhC;AAEA,QAAMiB,aAAa,GAAGnB,WAAW,CAAC,MAAM;AACtCiB,IAAAA,QAAQ,CAACZ,eAAe,CAACa,OAAD,CAAhB,CAAR;AACD,GAFgC,EAE9B,CAACD,QAAD,EAAWC,OAAX,CAF8B,CAAjC;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACD,OAAD,EAAUC,aAAV,CAFM,CAAT;AAIA,sBACE,QAAC,OAAD;AAAA,cACGlB,OAAO,CAACE,IAAD,EAAO,WAAP,CAAP,CAA2BiB,GAA3B,CAAgCC,GAAD,IAAS;AACvC,YAAMC,IAAI,GAAGX,aAAa,CAACU,GAAG,CAACE,UAAL,CAAb,IAAiChB,OAA9C;AAEA,0BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,GAAG,EAAEc,GAAX;AAAgB,UAAA,QAAQ,EAAEL,QAAQ,CAACK,GAAG,CAACE,UAAL,CAAlC;AAAoD,UAAA,OAAO,EAAEJ;AAA7D;AAAA;AAAA;AAAA;AAAA;AADF,SAAUE,GAAG,CAACG,IAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA1BD;;GAAMT,O;UACiBT,kB,EACJF,c,EACGF,Y;;;KAHhBa,O;AA4BN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react'\nimport orderBy from 'lodash/orderBy'\nimport { useWeb3React } from '@web3-react/core'\nimport nfts from 'config/constants/nfts'\nimport { useAppDispatch } from 'state'\nimport { fetchWalletNfts } from 'state/collectibles'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport NftCard from './NftCard'\nimport NftGrid from './NftGrid'\nimport EasterNftCard from './NftCard/EasterNftCard'\nimport LotteryNftCard from './NftCard/LotteryNftCard'\n\n/**\n * A map of bunnyIds to special campaigns (NFT distribution)\n * Each NftCard is responsible for checking it's own claim status\n *\n */\nconst nftComponents = {\n  'easter-storm': EasterNftCard,\n  'easter-flipper': EasterNftCard,\n  'easter-caker': EasterNftCard,\n  lottie: LotteryNftCard,\n  lucky: LotteryNftCard,\n  baller: LotteryNftCard,\n}\n\nconst NftList = () => {\n  const { tokenIds } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleRefresh = useCallback(() => {\n    dispatch(fetchWalletNfts(account))\n  }, [dispatch, account])\n\n  useEffect(() => {\n    handleRefresh()\n  }, [account, handleRefresh])\n\n  return (\n    <NftGrid>\n      {orderBy(nfts, 'sortOrder').map((nft) => {\n        const Card = nftComponents[nft.identifier] || NftCard\n\n        return (\n          <div key={nft.name}>\n            <Card nft={nft} tokenIds={tokenIds[nft.identifier]} refresh={handleRefresh} />\n          </div>\n        )\n      })}\n    </NftGrid>\n  )\n}\n\nexport default NftList\n"]},"metadata":{},"sourceType":"module"}