{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Home/components/MetricsSection/StatCardContent.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Heading, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatCardContent = ({\n  headingText,\n  bodyText,\n  highlightColor\n}) => {\n  _s();\n\n  const {\n    isMobile,\n    isTablet\n  } = useMatchBreakpoints();\n  const isSmallerScreen = isMobile || isTablet;\n  const split = headingText.split(' ');\n  const lastWord = split.pop();\n  const remainingWords = split.slice(0, split.length).join(' ');\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minHeight: [null, null, null, '168px'],\n    minWidth: \"232px\",\n    width: \"fit-content\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    mt: [null, null, null, '64px'],\n    children: [isSmallerScreen && remainingWords.length > 13 ? /*#__PURE__*/_jsxDEV(Heading, {\n      scale: \"lg\",\n      children: remainingWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Heading, {\n      scale: \"xl\",\n      children: remainingWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      color: highlightColor,\n      scale: \"xl\",\n      mb: \"24px\",\n      children: lastWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      children: bodyText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StatCardContent, \"O+CYGy9d4oDVDpHZstgojxec9fA=\", false, function () {\n  return [useMatchBreakpoints];\n});\n\n_c = StatCardContent;\nexport default StatCardContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatCardContent\");","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Home/components/MetricsSection/StatCardContent.tsx"],"names":["React","Heading","Flex","Text","useMatchBreakpoints","StatCardContent","headingText","bodyText","highlightColor","isMobile","isTablet","isSmallerScreen","split","lastWord","pop","remainingWords","slice","length","join"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,mBAA9B,QAAyD,oBAAzD;;;AAEA,MAAMC,eAA4F,GAAG,CAAC;AACpGC,EAAAA,WADoG;AAEpGC,EAAAA,QAFoG;AAGpGC,EAAAA;AAHoG,CAAD,KAI/F;AAAA;;AACJ,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBN,mBAAmB,EAAlD;AACA,QAAMO,eAAe,GAAGF,QAAQ,IAAIC,QAApC;AACA,QAAME,KAAK,GAAGN,WAAW,CAACM,KAAZ,CAAkB,GAAlB,CAAd;AACA,QAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAN,EAAjB;AACA,QAAMC,cAAc,GAAGH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeJ,KAAK,CAACK,MAArB,EAA6BC,IAA7B,CAAkC,GAAlC,CAAvB;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,OAAnB,CADb;AAEE,IAAA,QAAQ,EAAC,OAFX;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,aAAa,EAAC,QAJhB;AAKE,IAAA,cAAc,EAAC,UALjB;AAME,IAAA,EAAE,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,MAAnB,CANN;AAAA,eAQGP,eAAe,IAAII,cAAc,CAACE,MAAf,GAAwB,EAA3C,gBACC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,IAAf;AAAA,gBAAqBF;AAArB;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,IAAf;AAAA,gBAAqBA;AAArB;AAAA;AAAA;AAAA;AAAA,YAXJ,eAaE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEP,cAAhB;AAAgC,MAAA,KAAK,EAAC,IAAtC;AAA2C,MAAA,EAAE,EAAC,MAA9C;AAAA,gBACGK;AADH;AAAA;AAAA;AAAA;AAAA,YAbF,eAgBE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAA,gBAA0BN;AAA1B;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA/BD;;GAAMF,e;UAK2BD,mB;;;KAL3BC,e;AAiCN,eAAeA,eAAf","sourcesContent":["import React from 'react'\nimport { Heading, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\n\nconst StatCardContent: React.FC<{ headingText: string; bodyText: string; highlightColor: string }> = ({\n  headingText,\n  bodyText,\n  highlightColor,\n}) => {\n  const { isMobile, isTablet } = useMatchBreakpoints()\n  const isSmallerScreen = isMobile || isTablet\n  const split = headingText.split(' ')\n  const lastWord = split.pop()\n  const remainingWords = split.slice(0, split.length).join(' ')\n\n  return (\n    <Flex\n      minHeight={[null, null, null, '168px']}\n      minWidth=\"232px\"\n      width=\"fit-content\"\n      flexDirection=\"column\"\n      justifyContent=\"flex-end\"\n      mt={[null, null, null, '64px']}\n    >\n      {isSmallerScreen && remainingWords.length > 13 ? (\n        <Heading scale=\"lg\">{remainingWords}</Heading>\n      ) : (\n        <Heading scale=\"xl\">{remainingWords}</Heading>\n      )}\n      <Heading color={highlightColor} scale=\"xl\" mb=\"24px\">\n        {lastWord}\n      </Heading>\n      <Text color=\"textSubtle\">{bodyText}</Text>\n    </Flex>\n  )\n}\n\nexport default StatCardContent\n"]},"metadata":{},"sourceType":"module"}