{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Predictions/components/RoundCard/ExpiredRoundCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { Card, Box, BlockIcon, CardBody } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport { useGetBetByEpoch, useGetBufferSeconds } from 'state/predictions/hooks';\nimport { formatBigNumberToFixed } from 'utils/formatBalance';\nimport useTheme from 'hooks/useTheme';\nimport { getHasRoundFailed, getNetPayoutv2 } from '../../helpers';\nimport { RoundResult } from '../RoundResult';\nimport MultiplierArrow from './MultiplierArrow';\nimport CardHeader, { getBorderBackground } from './CardHeader';\nimport CollectWinningsOverlay from './CollectWinningsOverlay';\nimport CanceledRoundCard from './CanceledRoundCard';\nimport CalculatingCard from './CalculatingCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledExpiredRoundCard = styled(Card)`\n  opacity: 0.7;\n  transition: opacity 300ms;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n_c = StyledExpiredRoundCard;\n\nconst ExpiredRoundCard = ({\n  round,\n  betAmount,\n  hasEnteredUp,\n  hasEnteredDown,\n  hasClaimedUp,\n  hasClaimedDown,\n  bullMultiplier,\n  bearMultiplier\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    epoch,\n    lockPrice,\n    closePrice\n  } = round;\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR;\n  const ledger = useGetBetByEpoch(account, epoch);\n  const bufferSeconds = useGetBufferSeconds();\n  const payout = getNetPayoutv2(ledger, round);\n  const formattedPayout = payout.toUnsafeFloat().toFixed(4);\n  const hasRoundFailed = getHasRoundFailed(round, bufferSeconds);\n\n  if (hasRoundFailed) {\n    return /*#__PURE__*/_jsxDEV(CanceledRoundCard, {\n      round: round\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!closePrice) {\n    return /*#__PURE__*/_jsxDEV(CalculatingCard, {\n      round: round,\n      hasEnteredDown: hasEnteredDown,\n      hasEnteredUp: hasEnteredUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(StyledExpiredRoundCard, {\n      borderBackground: getBorderBackground(theme, 'expired'),\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        status: \"expired\",\n        icon: /*#__PURE__*/_jsxDEV(BlockIcon, {\n          mr: \"4px\",\n          width: \"21px\",\n          color: \"textDisabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this),\n        title: t('Expired'),\n        epoch: round.epoch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        p: \"16px\",\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          betAmount: betAmount,\n          multiplier: bullMultiplier,\n          isActive: betPosition === BetPosition.BULL,\n          hasEntered: hasEnteredUp,\n          hasClaimed: hasClaimedUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoundResult, {\n          round: round,\n          hasFailed: hasRoundFailed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          betAmount: betAmount,\n          multiplier: bearMultiplier,\n          betPosition: BetPosition.BEAR,\n          isActive: betPosition === BetPosition.BEAR,\n          hasEntered: hasEnteredDown,\n          hasClaimed: hasClaimedDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollectWinningsOverlay, {\n      epoch: epoch,\n      payout: formattedPayout,\n      betAmount: betAmount ? formatBigNumberToFixed(betAmount, 4) : '0',\n      isBottom: hasEnteredDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpiredRoundCard, \"/gtJO3BCTbtNSVPtkHwy0AYbuTM=\", false, function () {\n  return [useTranslation, useTheme, useWeb3React, useGetBetByEpoch, useGetBufferSeconds];\n});\n\n_c2 = ExpiredRoundCard;\nexport default ExpiredRoundCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledExpiredRoundCard\");\n$RefreshReg$(_c2, \"ExpiredRoundCard\");","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Predictions/components/RoundCard/ExpiredRoundCard.tsx"],"names":["React","styled","useWeb3React","Card","Box","BlockIcon","CardBody","useTranslation","BetPosition","useGetBetByEpoch","useGetBufferSeconds","formatBigNumberToFixed","useTheme","getHasRoundFailed","getNetPayoutv2","RoundResult","MultiplierArrow","CardHeader","getBorderBackground","CollectWinningsOverlay","CanceledRoundCard","CalculatingCard","StyledExpiredRoundCard","ExpiredRoundCard","round","betAmount","hasEnteredUp","hasEnteredDown","hasClaimedUp","hasClaimedDown","bullMultiplier","bearMultiplier","t","theme","account","epoch","lockPrice","closePrice","betPosition","BULL","BEAR","ledger","bufferSeconds","payout","formattedPayout","toUnsafeFloat","toFixed","hasRoundFailed","position"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, Box, BlockIcon, CardBody } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition, NodeLedger } from 'state/types'\nimport { useGetBetByEpoch, useGetBufferSeconds } from 'state/predictions/hooks'\nimport { formatBigNumberToFixed } from 'utils/formatBalance'\nimport useTheme from 'hooks/useTheme'\nimport { getHasRoundFailed, getNetPayoutv2 } from '../../helpers'\nimport { RoundResult } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport CardHeader, { getBorderBackground } from './CardHeader'\nimport CollectWinningsOverlay from './CollectWinningsOverlay'\nimport CanceledRoundCard from './CanceledRoundCard'\nimport CalculatingCard from './CalculatingCard'\n\ninterface ExpiredRoundCardProps {\n  round: NodeRound\n  betAmount?: NodeLedger['amount']\n  hasEnteredUp: boolean\n  hasEnteredDown: boolean\n  hasClaimedUp: boolean\n  hasClaimedDown: boolean\n  bullMultiplier: string\n  bearMultiplier: string\n}\n\nconst StyledExpiredRoundCard = styled(Card)`\n  opacity: 0.7;\n  transition: opacity 300ms;\n\n  &:hover {\n    opacity: 1;\n  }\n`\n\nconst ExpiredRoundCard: React.FC<ExpiredRoundCardProps> = ({\n  round,\n  betAmount,\n  hasEnteredUp,\n  hasEnteredDown,\n  hasClaimedUp,\n  hasClaimedDown,\n  bullMultiplier,\n  bearMultiplier,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n  const { epoch, lockPrice, closePrice } = round\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR\n  const ledger = useGetBetByEpoch(account, epoch)\n  const bufferSeconds = useGetBufferSeconds()\n  const payout = getNetPayoutv2(ledger, round)\n  const formattedPayout = payout.toUnsafeFloat().toFixed(4)\n  const hasRoundFailed = getHasRoundFailed(round, bufferSeconds)\n\n  if (hasRoundFailed) {\n    return <CanceledRoundCard round={round} />\n  }\n\n  if (!closePrice) {\n    return <CalculatingCard round={round} hasEnteredDown={hasEnteredDown} hasEnteredUp={hasEnteredUp} />\n  }\n\n  return (\n    <Box position=\"relative\">\n      <StyledExpiredRoundCard borderBackground={getBorderBackground(theme, 'expired')}>\n        <CardHeader\n          status=\"expired\"\n          icon={<BlockIcon mr=\"4px\" width=\"21px\" color=\"textDisabled\" />}\n          title={t('Expired')}\n          epoch={round.epoch}\n        />\n        <CardBody p=\"16px\" style={{ position: 'relative' }}>\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bullMultiplier}\n            isActive={betPosition === BetPosition.BULL}\n            hasEntered={hasEnteredUp}\n            hasClaimed={hasClaimedUp}\n          />\n          <RoundResult round={round} hasFailed={hasRoundFailed} />\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bearMultiplier}\n            betPosition={BetPosition.BEAR}\n            isActive={betPosition === BetPosition.BEAR}\n            hasEntered={hasEnteredDown}\n            hasClaimed={hasClaimedDown}\n          />\n        </CardBody>\n      </StyledExpiredRoundCard>\n      <CollectWinningsOverlay\n        epoch={epoch}\n        payout={formattedPayout}\n        betAmount={betAmount ? formatBigNumberToFixed(betAmount, 4) : '0'}\n        isBottom={hasEnteredDown}\n      />\n    </Box>\n  )\n}\n\nexport default ExpiredRoundCard\n"]},"metadata":{},"sourceType":"module"}