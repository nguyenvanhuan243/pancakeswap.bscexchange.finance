{"ast":null,"code":"import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useState}from'react';import{Flex,Spinner,Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import styled from'styled-components';import ConnectWalletButton from'components/ConnectWalletButton';import{useTranslation}from'contexts/Localization';import{fetchHistory}from'state/predictions';import{getUnclaimedWinningBets}from'state/predictions/helpers';import{HistoryFilter}from'state/types';import{useAppDispatch}from'state';import{useGetCurrentEpoch,useGetHistoryByAccount,useGetHistoryFilter,useGetIsFetchingHistory,useIsHistoryPaneOpen}from'state/predictions/hooks';import{Header,HistoryTabs}from'./components/History';import RoundsTab from'./components/History/RoundsTab';import PnlTab from'./components/History/PnlTab/PnlTab';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledHistory=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n\"])),function(_ref){var theme=_ref.theme;return theme.card.background;});var BetWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  height: 100%;\\n  overflow-y: auto;\\n  position: relative;\\n\"])));var SpinnerWrapper=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  background-color: \",\";\\n  display: flex;\\n  left: 0;\\n  height: 100%;\\n  justify-content: center;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.card.background;});var History=function History(){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var dispatch=useAppDispatch();var isHistoryPaneOpen=useIsHistoryPaneOpen();var isFetchingHistory=useGetIsFetchingHistory();var historyFilter=useGetHistoryFilter();var currentEpoch=useGetCurrentEpoch();var _useTranslation=useTranslation(),t=_useTranslation.t;var bets=useGetHistoryByAccount(account);var _useState=useState(HistoryTabs.ROUNDS),_useState2=_slicedToArray(_useState,2),activeTab=_useState2[0],setActiveTab=_useState2[1];useEffect(function(){if(account&&isHistoryPaneOpen){dispatch(fetchHistory({account:account}));}},[account,currentEpoch,isHistoryPaneOpen,dispatch]);// Currently the api cannot filter by unclaimed AND won so we do it here\n// when the user has selected Uncollected only include positions they won\nvar results=historyFilter===HistoryFilter.UNCOLLECTED?getUnclaimedWinningBets(bets):bets;var hasBetHistory=results&&results.length>0;var activeTabComponent=null;switch(activeTab){case HistoryTabs.PNL:activeTabComponent=/*#__PURE__*/_jsx(PnlTab,{hasBetHistory:hasBetHistory,bets:results});break;case HistoryTabs.ROUNDS:default:activeTabComponent=/*#__PURE__*/_jsx(RoundsTab,{hasBetHistory:hasBetHistory,bets:results});break;}if(!account){activeTabComponent=/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",alignItems:\"center\",flexDirection:\"column\",mt:\"32px\",children:[/*#__PURE__*/_jsx(ConnectWalletButton,{}),/*#__PURE__*/_jsx(Text,{mt:\"8px\",children:t('Connect your wallet to view your prediction history')})]});}return/*#__PURE__*/_jsxs(StyledHistory,{children:[/*#__PURE__*/_jsx(Header,{activeTab:activeTab,setActiveTab:setActiveTab}),/*#__PURE__*/_jsx(BetWrapper,{children:isFetchingHistory?/*#__PURE__*/_jsx(SpinnerWrapper,{children:/*#__PURE__*/_jsx(Spinner,{size:72})}):activeTabComponent})]});};export default History;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Predictions/History.tsx"],"names":["React","useEffect","useState","Flex","Spinner","Text","useWeb3React","styled","ConnectWalletButton","useTranslation","fetchHistory","getUnclaimedWinningBets","HistoryFilter","useAppDispatch","useGetCurrentEpoch","useGetHistoryByAccount","useGetHistoryFilter","useGetIsFetchingHistory","useIsHistoryPaneOpen","Header","HistoryTabs","RoundsTab","PnlTab","StyledHistory","div","theme","card","background","BetWrapper","SpinnerWrapper","History","account","dispatch","isHistoryPaneOpen","isFetchingHistory","historyFilter","currentEpoch","t","bets","ROUNDS","activeTab","setActiveTab","results","UNCOLLECTED","hasBetHistory","length","activeTabComponent","PNL"],"mappings":"sZAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,OAAf,CAAwBC,IAAxB,KAAoC,oBAApC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,gCAAhC,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,YAAT,KAA6B,mBAA7B,CACA,OAASC,uBAAT,KAAwC,2BAAxC,CACA,OAASC,aAAT,KAA8B,aAA9B,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,OACEC,kBADF,CAEEC,sBAFF,CAGEC,mBAHF,CAIEC,uBAJF,CAKEC,oBALF,KAMO,yBANP,CAOA,OAASC,MAAT,CAAiBC,WAAjB,KAAoC,sBAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oCAAnB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAGhB,MAAM,CAACiB,GAAV,2JACG,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,IAAN,CAAWC,UAA1B,EADH,CAAnB,CAOA,GAAMC,CAAAA,UAAU,CAAGrB,MAAM,CAACiB,GAAV,8IAAhB,CAOA,GAAMK,CAAAA,cAAc,CAAGtB,MAAM,CAACiB,GAAV,oPAEE,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,IAAN,CAAWC,UAA1B,EAFF,CAApB,CAYA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,kBAAoBxB,YAAY,EAAhC,CAAQyB,OAAR,eAAQA,OAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGnB,cAAc,EAA/B,CACA,GAAMoB,CAAAA,iBAAiB,CAAGf,oBAAoB,EAA9C,CACA,GAAMgB,CAAAA,iBAAiB,CAAGjB,uBAAuB,EAAjD,CACA,GAAMkB,CAAAA,aAAa,CAAGnB,mBAAmB,EAAzC,CACA,GAAMoB,CAAAA,YAAY,CAAGtB,kBAAkB,EAAvC,CACA,oBAAcL,cAAc,EAA5B,CAAQ4B,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,IAAI,CAAGvB,sBAAsB,CAACgB,OAAD,CAAnC,CACA,cAAkC7B,QAAQ,CAACkB,WAAW,CAACmB,MAAb,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eAEAxC,SAAS,CAAC,UAAM,CACd,GAAI8B,OAAO,EAAIE,iBAAf,CAAkC,CAChCD,QAAQ,CAACtB,YAAY,CAAC,CAAEqB,OAAO,CAAPA,OAAF,CAAD,CAAb,CAAR,CACD,CACF,CAJQ,CAIN,CAACA,OAAD,CAAUK,YAAV,CAAwBH,iBAAxB,CAA2CD,QAA3C,CAJM,CAAT,CAMA;AACA;AACA,GAAMU,CAAAA,OAAO,CAAGP,aAAa,GAAKvB,aAAa,CAAC+B,WAAhC,CAA8ChC,uBAAuB,CAAC2B,IAAD,CAArE,CAA8EA,IAA9F,CAEA,GAAMM,CAAAA,aAAa,CAAGF,OAAO,EAAIA,OAAO,CAACG,MAAR,CAAiB,CAAlD,CAEA,GAAIC,CAAAA,kBAAkB,CAAG,IAAzB,CAEA,OAAQN,SAAR,EACE,IAAKpB,CAAAA,WAAW,CAAC2B,GAAjB,CACED,kBAAkB,cAAG,KAAC,MAAD,EAAQ,aAAa,CAAEF,aAAvB,CAAsC,IAAI,CAAEF,OAA5C,EAArB,CACA,MACF,IAAKtB,CAAAA,WAAW,CAACmB,MAAjB,CACA,QACEO,kBAAkB,cAAG,KAAC,SAAD,EAAW,aAAa,CAAEF,aAA1B,CAAyC,IAAI,CAAEF,OAA/C,EAArB,CACA,MAPJ,CAUA,GAAI,CAACX,OAAL,CAAc,CACZe,kBAAkB,cAChB,MAAC,IAAD,EAAM,cAAc,CAAC,QAArB,CAA8B,UAAU,CAAC,QAAzC,CAAkD,aAAa,CAAC,QAAhE,CAAyE,EAAE,CAAC,MAA5E,wBACE,KAAC,mBAAD,IADF,cAEE,KAAC,IAAD,EAAM,EAAE,CAAC,KAAT,UAAgBT,CAAC,CAAC,qDAAD,CAAjB,EAFF,GADF,CAMD,CAED,mBACE,MAAC,aAAD,yBACE,KAAC,MAAD,EAAQ,SAAS,CAAEG,SAAnB,CAA8B,YAAY,CAAEC,YAA5C,EADF,cAEE,KAAC,UAAD,WACGP,iBAAiB,cAChB,KAAC,cAAD,wBACE,KAAC,OAAD,EAAS,IAAI,CAAE,EAAf,EADF,EADgB,CAKhBY,kBANJ,EAFF,GADF,CAcD,CA1DD,CA4DA,cAAehB,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Flex, Spinner, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { fetchHistory } from 'state/predictions'\nimport { getUnclaimedWinningBets } from 'state/predictions/helpers'\nimport { HistoryFilter } from 'state/types'\nimport { useAppDispatch } from 'state'\nimport {\n  useGetCurrentEpoch,\n  useGetHistoryByAccount,\n  useGetHistoryFilter,\n  useGetIsFetchingHistory,\n  useIsHistoryPaneOpen,\n} from 'state/predictions/hooks'\nimport { Header, HistoryTabs } from './components/History'\nimport RoundsTab from './components/History/RoundsTab'\nimport PnlTab from './components/History/PnlTab/PnlTab'\n\nconst StyledHistory = styled.div`\n  background-color: ${({ theme }) => theme.card.background};\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\nconst BetWrapper = styled.div`\n  flex: 1;\n  height: 100%;\n  overflow-y: auto;\n  position: relative;\n`\n\nconst SpinnerWrapper = styled.div`\n  align-items: center;\n  background-color: ${({ theme }) => theme.card.background};\n  display: flex;\n  left: 0;\n  height: 100%;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`\n\nconst History = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const isHistoryPaneOpen = useIsHistoryPaneOpen()\n  const isFetchingHistory = useGetIsFetchingHistory()\n  const historyFilter = useGetHistoryFilter()\n  const currentEpoch = useGetCurrentEpoch()\n  const { t } = useTranslation()\n  const bets = useGetHistoryByAccount(account)\n  const [activeTab, setActiveTab] = useState(HistoryTabs.ROUNDS)\n\n  useEffect(() => {\n    if (account && isHistoryPaneOpen) {\n      dispatch(fetchHistory({ account }))\n    }\n  }, [account, currentEpoch, isHistoryPaneOpen, dispatch])\n\n  // Currently the api cannot filter by unclaimed AND won so we do it here\n  // when the user has selected Uncollected only include positions they won\n  const results = historyFilter === HistoryFilter.UNCOLLECTED ? getUnclaimedWinningBets(bets) : bets\n\n  const hasBetHistory = results && results.length > 0\n\n  let activeTabComponent = null\n\n  switch (activeTab) {\n    case HistoryTabs.PNL:\n      activeTabComponent = <PnlTab hasBetHistory={hasBetHistory} bets={results} />\n      break\n    case HistoryTabs.ROUNDS:\n    default:\n      activeTabComponent = <RoundsTab hasBetHistory={hasBetHistory} bets={results} />\n      break\n  }\n\n  if (!account) {\n    activeTabComponent = (\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" mt=\"32px\">\n        <ConnectWalletButton />\n        <Text mt=\"8px\">{t('Connect your wallet to view your prediction history')}</Text>\n      </Flex>\n    )\n  }\n\n  return (\n    <StyledHistory>\n      <Header activeTab={activeTab} setActiveTab={setActiveTab} />\n      <BetWrapper>\n        {isFetchingHistory ? (\n          <SpinnerWrapper>\n            <Spinner size={72} />\n          </SpinnerWrapper>\n        ) : (\n          activeTabComponent\n        )}\n      </BetWrapper>\n    </StyledHistory>\n  )\n}\n\nexport default History\n"]},"metadata":{},"sourceType":"module"}