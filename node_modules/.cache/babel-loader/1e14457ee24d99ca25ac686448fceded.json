{"ast":null,"code":"import{useEffect}from'react';import{useWeb3React}from'@web3-react/core';import{useSelector}from'react-redux';import{useAppDispatch}from'state';import{fetchProfile}from'.';export var useFetchProfile=function useFetchProfile(){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var dispatch=useAppDispatch();useEffect(function(){dispatch(fetchProfile(account));},[account,dispatch]);};export var useProfile=function useProfile(){var _useSelector=useSelector(function(state){return state.profile;}),isInitialized=_useSelector.isInitialized,isLoading=_useSelector.isLoading,data=_useSelector.data,hasRegistered=_useSelector.hasRegistered;return{profile:data,hasProfile:isInitialized&&hasRegistered,isInitialized:isInitialized,isLoading:isLoading};};","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/state/profile/hooks.ts"],"names":["useEffect","useWeb3React","useSelector","useAppDispatch","fetchProfile","useFetchProfile","account","dispatch","useProfile","state","profile","isInitialized","isLoading","data","hasRegistered","hasProfile"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,cAAT,KAA+B,OAA/B,CAEA,OAASC,YAAT,KAA6B,GAA7B,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACnC,kBAAoBJ,YAAY,EAAhC,CAAQK,OAAR,eAAQA,OAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGJ,cAAc,EAA/B,CAEAH,SAAS,CAAC,UAAM,CACdO,QAAQ,CAACH,YAAY,CAACE,OAAD,CAAb,CAAR,CACD,CAFQ,CAEN,CAACA,OAAD,CAAUC,QAAV,CAFM,CAAT,CAGD,CAPM,CASP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC9B,iBAAwEN,WAAW,CAAC,SAACO,KAAD,QAAkBA,CAAAA,KAAK,CAACC,OAAxB,EAAD,CAAnF,CAAQC,aAAR,cAAQA,aAAR,CAAuBC,SAAvB,cAAuBA,SAAvB,CAAkCC,IAAlC,cAAkCA,IAAlC,CAAwCC,aAAxC,cAAwCA,aAAxC,CACA,MAAO,CAAEJ,OAAO,CAAEG,IAAX,CAAiBE,UAAU,CAAEJ,aAAa,EAAIG,aAA9C,CAA6DH,aAAa,CAAbA,aAA7D,CAA4EC,SAAS,CAATA,SAA5E,CAAP,CACD,CAHM","sourcesContent":["import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n"]},"metadata":{},"sourceType":"module"}