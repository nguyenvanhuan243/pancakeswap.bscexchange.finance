{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{useWeb3React}from'@web3-react/core';import{Card,Box,BlockIcon,CardBody}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BetPosition}from'state/types';import{useGetBetByEpoch,useGetBufferSeconds}from'state/predictions/hooks';import{formatBigNumberToFixed}from'utils/formatBalance';import useTheme from'hooks/useTheme';import{getHasRoundFailed,getNetPayoutv2}from'../../helpers';import{RoundResult}from'../RoundResult';import MultiplierArrow from'./MultiplierArrow';import CardHeader,{getBorderBackground}from'./CardHeader';import CollectWinningsOverlay from'./CollectWinningsOverlay';import CanceledRoundCard from'./CanceledRoundCard';import CalculatingCard from'./CalculatingCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledExpiredRoundCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  opacity: 0.7;\\n  transition: opacity 300ms;\\n\\n  &:hover {\\n    opacity: 1;\\n  }\\n\"])));var ExpiredRoundCard=function ExpiredRoundCard(_ref){var round=_ref.round,betAmount=_ref.betAmount,hasEnteredUp=_ref.hasEnteredUp,hasEnteredDown=_ref.hasEnteredDown,hasClaimedUp=_ref.hasClaimedUp,hasClaimedDown=_ref.hasClaimedDown,bullMultiplier=_ref.bullMultiplier,bearMultiplier=_ref.bearMultiplier;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var epoch=round.epoch,lockPrice=round.lockPrice,closePrice=round.closePrice;var betPosition=closePrice>lockPrice?BetPosition.BULL:BetPosition.BEAR;var ledger=useGetBetByEpoch(account,epoch);var bufferSeconds=useGetBufferSeconds();var payout=getNetPayoutv2(ledger,round);var formattedPayout=payout.toUnsafeFloat().toFixed(4);var hasRoundFailed=getHasRoundFailed(round,bufferSeconds);if(hasRoundFailed){return/*#__PURE__*/_jsx(CanceledRoundCard,{round:round});}if(!closePrice){return/*#__PURE__*/_jsx(CalculatingCard,{round:round,hasEnteredDown:hasEnteredDown,hasEnteredUp:hasEnteredUp});}return/*#__PURE__*/_jsxs(Box,{position:\"relative\",children:[/*#__PURE__*/_jsxs(StyledExpiredRoundCard,{borderBackground:getBorderBackground(theme,'expired'),children:[/*#__PURE__*/_jsx(CardHeader,{status:\"expired\",icon:/*#__PURE__*/_jsx(BlockIcon,{mr:\"4px\",width:\"21px\",color:\"textDisabled\"}),title:t('Expired'),epoch:round.epoch}),/*#__PURE__*/_jsxs(CardBody,{p:\"16px\",style:{position:'relative'},children:[/*#__PURE__*/_jsx(MultiplierArrow,{betAmount:betAmount,multiplier:bullMultiplier,isActive:betPosition===BetPosition.BULL,hasEntered:hasEnteredUp,hasClaimed:hasClaimedUp}),/*#__PURE__*/_jsx(RoundResult,{round:round,hasFailed:hasRoundFailed}),/*#__PURE__*/_jsx(MultiplierArrow,{betAmount:betAmount,multiplier:bearMultiplier,betPosition:BetPosition.BEAR,isActive:betPosition===BetPosition.BEAR,hasEntered:hasEnteredDown,hasClaimed:hasClaimedDown})]})]}),/*#__PURE__*/_jsx(CollectWinningsOverlay,{epoch:epoch,payout:formattedPayout,betAmount:betAmount?formatBigNumberToFixed(betAmount,4):'0',isBottom:hasEnteredDown})]});};export default ExpiredRoundCard;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Predictions/components/RoundCard/ExpiredRoundCard.tsx"],"names":["React","styled","useWeb3React","Card","Box","BlockIcon","CardBody","useTranslation","BetPosition","useGetBetByEpoch","useGetBufferSeconds","formatBigNumberToFixed","useTheme","getHasRoundFailed","getNetPayoutv2","RoundResult","MultiplierArrow","CardHeader","getBorderBackground","CollectWinningsOverlay","CanceledRoundCard","CalculatingCard","StyledExpiredRoundCard","ExpiredRoundCard","round","betAmount","hasEnteredUp","hasEnteredDown","hasClaimedUp","hasClaimedDown","bullMultiplier","bearMultiplier","t","theme","account","epoch","lockPrice","closePrice","betPosition","BULL","BEAR","ledger","bufferSeconds","payout","formattedPayout","toUnsafeFloat","toFixed","hasRoundFailed","position"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, Box, BlockIcon, CardBody } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition, NodeLedger } from 'state/types'\nimport { useGetBetByEpoch, useGetBufferSeconds } from 'state/predictions/hooks'\nimport { formatBigNumberToFixed } from 'utils/formatBalance'\nimport useTheme from 'hooks/useTheme'\nimport { getHasRoundFailed, getNetPayoutv2 } from '../../helpers'\nimport { RoundResult } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport CardHeader, { getBorderBackground } from './CardHeader'\nimport CollectWinningsOverlay from './CollectWinningsOverlay'\nimport CanceledRoundCard from './CanceledRoundCard'\nimport CalculatingCard from './CalculatingCard'\n\ninterface ExpiredRoundCardProps {\n  round: NodeRound\n  betAmount?: NodeLedger['amount']\n  hasEnteredUp: boolean\n  hasEnteredDown: boolean\n  hasClaimedUp: boolean\n  hasClaimedDown: boolean\n  bullMultiplier: string\n  bearMultiplier: string\n}\n\nconst StyledExpiredRoundCard = styled(Card)`\n  opacity: 0.7;\n  transition: opacity 300ms;\n\n  &:hover {\n    opacity: 1;\n  }\n`\n\nconst ExpiredRoundCard: React.FC<ExpiredRoundCardProps> = ({\n  round,\n  betAmount,\n  hasEnteredUp,\n  hasEnteredDown,\n  hasClaimedUp,\n  hasClaimedDown,\n  bullMultiplier,\n  bearMultiplier,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n  const { epoch, lockPrice, closePrice } = round\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR\n  const ledger = useGetBetByEpoch(account, epoch)\n  const bufferSeconds = useGetBufferSeconds()\n  const payout = getNetPayoutv2(ledger, round)\n  const formattedPayout = payout.toUnsafeFloat().toFixed(4)\n  const hasRoundFailed = getHasRoundFailed(round, bufferSeconds)\n\n  if (hasRoundFailed) {\n    return <CanceledRoundCard round={round} />\n  }\n\n  if (!closePrice) {\n    return <CalculatingCard round={round} hasEnteredDown={hasEnteredDown} hasEnteredUp={hasEnteredUp} />\n  }\n\n  return (\n    <Box position=\"relative\">\n      <StyledExpiredRoundCard borderBackground={getBorderBackground(theme, 'expired')}>\n        <CardHeader\n          status=\"expired\"\n          icon={<BlockIcon mr=\"4px\" width=\"21px\" color=\"textDisabled\" />}\n          title={t('Expired')}\n          epoch={round.epoch}\n        />\n        <CardBody p=\"16px\" style={{ position: 'relative' }}>\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bullMultiplier}\n            isActive={betPosition === BetPosition.BULL}\n            hasEntered={hasEnteredUp}\n            hasClaimed={hasClaimedUp}\n          />\n          <RoundResult round={round} hasFailed={hasRoundFailed} />\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bearMultiplier}\n            betPosition={BetPosition.BEAR}\n            isActive={betPosition === BetPosition.BEAR}\n            hasEntered={hasEnteredDown}\n            hasClaimed={hasClaimedDown}\n          />\n        </CardBody>\n      </StyledExpiredRoundCard>\n      <CollectWinningsOverlay\n        epoch={epoch}\n        payout={formattedPayout}\n        betAmount={betAmount ? formatBigNumberToFixed(betAmount, 4) : '0'}\n        isBottom={hasEnteredDown}\n      />\n    </Box>\n  )\n}\n\nexport default ExpiredRoundCard\n"]},"metadata":{},"sourceType":"module"}