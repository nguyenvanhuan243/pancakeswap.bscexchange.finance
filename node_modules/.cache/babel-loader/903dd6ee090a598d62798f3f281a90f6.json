{"ast":null,"code":"import React,{useEffect,useCallback}from'react';import orderBy from'lodash/orderBy';import{useWeb3React}from'@web3-react/core';import nfts from'config/constants/nfts';import{useAppDispatch}from'state';import{fetchWalletNfts}from'state/collectibles';import{useGetCollectibles}from'state/collectibles/hooks';import NftCard from'./NftCard';import NftGrid from'./NftGrid';import EasterNftCard from'./NftCard/EasterNftCard';import LotteryNftCard from'./NftCard/LotteryNftCard';/**\n * A map of bunnyIds to special campaigns (NFT distribution)\n * Each NftCard is responsible for checking it's own claim status\n *\n */import{jsx as _jsx}from\"react/jsx-runtime\";var nftComponents={'easter-storm':EasterNftCard,'easter-flipper':EasterNftCard,'easter-caker':EasterNftCard,lottie:LotteryNftCard,lucky:LotteryNftCard,baller:LotteryNftCard};var NftList=function NftList(){var _useGetCollectibles=useGetCollectibles(),tokenIds=_useGetCollectibles.tokenIds;var dispatch=useAppDispatch();var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var handleRefresh=useCallback(function(){dispatch(fetchWalletNfts(account));},[dispatch,account]);useEffect(function(){handleRefresh();},[account,handleRefresh]);return/*#__PURE__*/_jsx(NftGrid,{children:orderBy(nfts,'sortOrder').map(function(nft){var Card=nftComponents[nft.identifier]||NftCard;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Card,{nft:nft,tokenIds:tokenIds[nft.identifier],refresh:handleRefresh})},nft.name);})});};export default NftList;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Collectibles/components/NftList.tsx"],"names":["React","useEffect","useCallback","orderBy","useWeb3React","nfts","useAppDispatch","fetchWalletNfts","useGetCollectibles","NftCard","NftGrid","EasterNftCard","LotteryNftCard","nftComponents","lottie","lucky","baller","NftList","tokenIds","dispatch","account","handleRefresh","map","nft","Card","identifier","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,WAA3B,KAA8C,OAA9C,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,OAASC,eAAT,KAAgC,oBAAhC,CACA,OAASC,kBAAT,KAAmC,0BAAnC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,0BAA3B,CAEA;AACA;AACA;AACA;AACA,G,2CACA,GAAMC,CAAAA,aAAa,CAAG,CACpB,eAAgBF,aADI,CAEpB,iBAAkBA,aAFE,CAGpB,eAAgBA,aAHI,CAIpBG,MAAM,CAAEF,cAJY,CAKpBG,KAAK,CAAEH,cALa,CAMpBI,MAAM,CAAEJ,cANY,CAAtB,CASA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,wBAAqBT,kBAAkB,EAAvC,CAAQU,QAAR,qBAAQA,QAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGb,cAAc,EAA/B,CACA,kBAAoBF,YAAY,EAAhC,CAAQgB,OAAR,eAAQA,OAAR,CAEA,GAAMC,CAAAA,aAAa,CAAGnB,WAAW,CAAC,UAAM,CACtCiB,QAAQ,CAACZ,eAAe,CAACa,OAAD,CAAhB,CAAR,CACD,CAFgC,CAE9B,CAACD,QAAD,CAAWC,OAAX,CAF8B,CAAjC,CAIAnB,SAAS,CAAC,UAAM,CACdoB,aAAa,GACd,CAFQ,CAEN,CAACD,OAAD,CAAUC,aAAV,CAFM,CAAT,CAIA,mBACE,KAAC,OAAD,WACGlB,OAAO,CAACE,IAAD,CAAO,WAAP,CAAP,CAA2BiB,GAA3B,CAA+B,SAACC,GAAD,CAAS,CACvC,GAAMC,CAAAA,IAAI,CAAGX,aAAa,CAACU,GAAG,CAACE,UAAL,CAAb,EAAiChB,OAA9C,CAEA,mBACE,kCACE,KAAC,IAAD,EAAM,GAAG,CAAEc,GAAX,CAAgB,QAAQ,CAAEL,QAAQ,CAACK,GAAG,CAACE,UAAL,CAAlC,CAAoD,OAAO,CAAEJ,aAA7D,EADF,EAAUE,GAAG,CAACG,IAAd,CADF,CAKD,CARA,CADH,EADF,CAaD,CA1BD,CA4BA,cAAeT,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react'\nimport orderBy from 'lodash/orderBy'\nimport { useWeb3React } from '@web3-react/core'\nimport nfts from 'config/constants/nfts'\nimport { useAppDispatch } from 'state'\nimport { fetchWalletNfts } from 'state/collectibles'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport NftCard from './NftCard'\nimport NftGrid from './NftGrid'\nimport EasterNftCard from './NftCard/EasterNftCard'\nimport LotteryNftCard from './NftCard/LotteryNftCard'\n\n/**\n * A map of bunnyIds to special campaigns (NFT distribution)\n * Each NftCard is responsible for checking it's own claim status\n *\n */\nconst nftComponents = {\n  'easter-storm': EasterNftCard,\n  'easter-flipper': EasterNftCard,\n  'easter-caker': EasterNftCard,\n  lottie: LotteryNftCard,\n  lucky: LotteryNftCard,\n  baller: LotteryNftCard,\n}\n\nconst NftList = () => {\n  const { tokenIds } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleRefresh = useCallback(() => {\n    dispatch(fetchWalletNfts(account))\n  }, [dispatch, account])\n\n  useEffect(() => {\n    handleRefresh()\n  }, [account, handleRefresh])\n\n  return (\n    <NftGrid>\n      {orderBy(nfts, 'sortOrder').map((nft) => {\n        const Card = nftComponents[nft.identifier] || NftCard\n\n        return (\n          <div key={nft.name}>\n            <Card nft={nft} tokenIds={tokenIds[nft.identifier]} refresh={handleRefresh} />\n          </div>\n        )\n      })}\n    </NftGrid>\n  )\n}\n\nexport default NftList\n"]},"metadata":{},"sourceType":"module"}