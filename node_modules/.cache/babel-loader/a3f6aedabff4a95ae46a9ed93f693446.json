{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useState}from'react';import styled from'styled-components';import BigNumber from'bignumber.js';import{Card,CardBody,Heading,Text,Input as UIKitInput,Button,AutoRenewIcon,CheckmarkIcon,Flex,WarningIcon,useModal,Skeleton,Checkbox}from'@pancakeswap/uikit';import{parseISO,formatDistance}from'date-fns';import{useWeb3React}from'@web3-react/core';import useToast from'hooks/useToast';import{signMessage}from'utils/web3React';import useWeb3Provider from'hooks/useActiveWeb3React';import{useTranslation}from'contexts/Localization';import useHasCakeBalance from'hooks/useHasCakeBalance';import{DEFAULT_TOKEN_DECIMAL}from'config';import debounce from'lodash/debounce';import ConfirmProfileCreationModal from'../components/ConfirmProfileCreationModal';import useProfileCreation from'./contexts/hook';import{USERNAME_MIN_LENGTH,USERNAME_MAX_LENGTH,REGISTER_COST}from'./config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ExistingUserState;(function(ExistingUserState){ExistingUserState[\"IDLE\"]=\"idle\";ExistingUserState[\"CREATED\"]=\"created\";ExistingUserState[\"NEW\"]=\"new\";})(ExistingUserState||(ExistingUserState={}));var profileApiUrl=process.env.REACT_APP_API_PROFILE;var minimumCakeToRegister=new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL);var InputWrap=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  max-width: 240px;\\n\"])));var Input=styled(UIKitInput)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding-right: 40px;\\n\"])));var Indicator=styled(Flex)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  height: 24px;\\n  justify-content: center;\\n  margin-top: -12px;\\n  position: absolute;\\n  right: 16px;\\n  top: 50%;\\n  width: 24px;\\n\"])));var UserName=function UserName(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAcknowledged=_useState2[0],setIsAcknowledged=_useState2[1];var _useProfileCreation=useProfileCreation(),teamId=_useProfileCreation.teamId,selectedNft=_useProfileCreation.selectedNft,userName=_useProfileCreation.userName,actions=_useProfileCreation.actions,minimumCakeRequired=_useProfileCreation.minimumCakeRequired,allowance=_useProfileCreation.allowance;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useToast=useToast(),toastError=_useToast.toastError;var _useWeb3Provider=useWeb3Provider(),library=_useWeb3Provider.library;var _useState3=useState(ExistingUserState.IDLE),_useState4=_slicedToArray(_useState3,2),existingUserState=_useState4[0],setExistingUserState=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isLoading=_useState8[0],setIsLoading=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var hasMinimumCakeRequired=useHasCakeBalance(minimumCakeToRegister);var _useModal=useModal(/*#__PURE__*/_jsx(ConfirmProfileCreationModal,{userName:userName,selectedNft:selectedNft,account:account,teamId:teamId,minimumCakeRequired:minimumCakeRequired,allowance:allowance}),false),_useModal2=_slicedToArray(_useModal,1),onPresentConfirmProfileCreation=_useModal2[0];var isUserCreated=existingUserState===ExistingUserState.CREATED;var checkUsernameValidity=debounce(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(value){var res,_data$error,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setIsLoading(true);_context.next=4;return fetch(\"\".concat(profileApiUrl,\"/api/users/valid/\").concat(value));case 4:res=_context.sent;if(!res.ok){_context.next=10;break;}setIsValid(true);setMessage('');_context.next=15;break;case 10:_context.next=12;return res.json();case 12:data=_context.sent;setIsValid(false);setMessage(data===null||data===void 0?void 0:(_data$error=data.error)===null||_data$error===void 0?void 0:_data$error.message);case 15:_context.prev=15;setIsLoading(false);return _context.finish(15);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,,15,18]]);}));return function(_x){return _ref.apply(this,arguments);};}(),200);var handleChange=function handleChange(event){var value=event.target.value;actions.setUserName(value);checkUsernameValidity(value);};var handleConfirm=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var signature,response,_data$error2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setIsLoading(true);_context2.next=4;return signMessage(library,account,userName);case 4:signature=_context2.sent;_context2.next=7;return fetch(\"\".concat(profileApiUrl,\"/api/users/register\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({address:account,username:userName,signature:signature})});case 7:response=_context2.sent;if(!response.ok){_context2.next=12;break;}setExistingUserState(ExistingUserState.CREATED);_context2.next=16;break;case 12:_context2.next=14;return response.json();case 14:data=_context2.sent;toastError(t('Error'),data===null||data===void 0?void 0:(_data$error2=data.error)===null||_data$error2===void 0?void 0:_data$error2.message);case 16:_context2.next=21;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](0);toastError((_context2.t0===null||_context2.t0===void 0?void 0:_context2.t0.message)?_context2.t0.message:JSON.stringify(_context2.t0));case 21:_context2.prev=21;setIsLoading(false);return _context2.finish(21);case 24:case\"end\":return _context2.stop();}}},_callee2,null,[[0,18,21,24]]);}));return function handleConfirm(){return _ref2.apply(this,arguments);};}();var handleAcknowledge=function handleAcknowledge(){return setIsAcknowledged(!isAcknowledged);};// Perform an initial check to see if the wallet has already created a username\nuseEffect(function(){var fetchUser=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response,data,dateCreated;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(profileApiUrl,\"/api/users/\").concat(account));case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:data=_context3.sent;if(response.ok){dateCreated=formatDistance(parseISO(data.created_at),new Date());setMessage(t('Created %dateCreated% ago',{dateCreated:dateCreated}));actions.setUserName(data.username);setExistingUserState(ExistingUserState.CREATED);setIsValid(true);}else{setExistingUserState(ExistingUserState.NEW);}_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);toastError(t('Error'),t('Unable to verify username'));case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function fetchUser(){return _ref3.apply(this,arguments);};}();if(account){fetchUser();}},[account,setExistingUserState,setIsValid,setMessage,actions,toastError,t]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",color:\"textSubtle\",bold:true,children:t('Step %num%',{num:4})}),/*#__PURE__*/_jsx(Heading,{as:\"h3\",scale:\"xl\",mb:\"24px\",children:t('Set Your Name')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"24px\",children:t('This name will be shown in team leaderboards and search results as long as your profile is active.')}),/*#__PURE__*/_jsx(Card,{mb:\"24px\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",scale:\"lg\",mb:\"8px\",children:t('Set Your Name')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:t('Your name must be at least 3 and at most 15 standard letters and numbers long. You canâ€™t change this once you click Confirm.')}),existingUserState===ExistingUserState.IDLE?/*#__PURE__*/_jsx(Skeleton,{height:\"40px\",width:\"240px\"}):/*#__PURE__*/_jsxs(InputWrap,{children:[/*#__PURE__*/_jsx(Input,{onChange:handleChange,isWarning:userName&&!isValid,isSuccess:userName&&isValid,minLength:USERNAME_MIN_LENGTH,maxLength:USERNAME_MAX_LENGTH,disabled:isUserCreated,placeholder:t('Enter your name...'),value:userName}),/*#__PURE__*/_jsxs(Indicator,{children:[isLoading&&/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true}),!isLoading&&isValid&&userName&&/*#__PURE__*/_jsx(CheckmarkIcon,{color:\"success\"}),!isLoading&&!isValid&&userName&&/*#__PURE__*/_jsx(WarningIcon,{color:\"failure\"})]})]}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",fontSize:\"14px\",py:\"4px\",mb:\"16px\",style:{minHeight:'30px'},children:message}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"failure\",mb:\"8px\",children:t(\"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\")}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"checkbox\",style:{display:'block',cursor:'pointer',marginBottom:'24px'},children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(\"div\",{style:{flex:'none'},children:/*#__PURE__*/_jsx(Checkbox,{id:\"checkbox\",scale:\"sm\",checked:isAcknowledged,onChange:handleAcknowledge})}),/*#__PURE__*/_jsx(Text,{ml:\"8px\",children:t('I understand that people can view my wallet if they know my username')})]})}),/*#__PURE__*/_jsx(Button,{onClick:handleConfirm,disabled:!isValid||isUserCreated||isLoading||!isAcknowledged,children:t('Confirm')})]})}),/*#__PURE__*/_jsx(Button,{onClick:onPresentConfirmProfileCreation,disabled:!isValid||!isUserCreated,id:\"completeProfileCreation\",children:t('Complete Profile')}),!hasMinimumCakeRequired&&/*#__PURE__*/_jsx(Text,{color:\"failure\",mt:\"16px\",children:t('A minimum of %num% CAKE is required',{num:REGISTER_COST})})]});};export default UserName;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Profile/ProfileCreation/UserName.tsx"],"names":["React","useEffect","useState","styled","BigNumber","Card","CardBody","Heading","Text","Input","UIKitInput","Button","AutoRenewIcon","CheckmarkIcon","Flex","WarningIcon","useModal","Skeleton","Checkbox","parseISO","formatDistance","useWeb3React","useToast","signMessage","useWeb3Provider","useTranslation","useHasCakeBalance","DEFAULT_TOKEN_DECIMAL","debounce","ConfirmProfileCreationModal","useProfileCreation","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","REGISTER_COST","ExistingUserState","profileApiUrl","process","env","REACT_APP_API_PROFILE","minimumCakeToRegister","multipliedBy","InputWrap","div","Indicator","UserName","isAcknowledged","setIsAcknowledged","teamId","selectedNft","userName","actions","minimumCakeRequired","allowance","t","account","toastError","library","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","isLoading","setIsLoading","message","setMessage","hasMinimumCakeRequired","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","value","fetch","res","ok","json","data","error","handleChange","event","target","setUserName","handleConfirm","signature","method","headers","body","JSON","stringify","address","username","response","handleAcknowledge","fetchUser","dateCreated","created_at","Date","NEW","num","minHeight","display","cursor","marginBottom","flex"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { signMessage } from 'utils/web3React'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = await signMessage(library, account, userName)\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(t('Error'), data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'))\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 4 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You canâ€™t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={t('Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {t(\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {t('Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button\n        onClick={onPresentConfirmProfileCreation}\n        disabled={!isValid || !isUserCreated}\n        id=\"completeProfileCreation\"\n      >\n        {t('Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {t('A minimum of %num% CAKE is required', { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n"]},"metadata":{},"sourceType":"module"}