{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Button,Skeleton,Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import{useAppDispatch}from'state';import{useGetCollectibles}from'state/collectibles/hooks';import{useProfile}from'state/profile/hooks';import{useTranslation}from'contexts/Localization';import useToast from'hooks/useToast';import{fetchProfile}from'state/profile';import{getAddressByType}from'utils/collectibles';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{getErc721Contract}from'utils/contractHelpers';import{useProfile as useProfileContract}from'hooks/useContract';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import{getPancakeProfileAddress}from'utils/addressHelpers';import SelectionCard from'../SelectionCard';import ApproveConfirmButtons from'../ApproveConfirmButtons';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChangeProfilePicPage=function ChangeProfilePicPage(_ref){var onDismiss=_ref.onDismiss;var _useState=useState({tokenId:null,nftAddress:null}),_useState2=_slicedToArray(_useState,2),selectedNft=_useState2[0],setSelectedNft=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useGetCollectibles=useGetCollectibles(),isLoading=_useGetCollectibles.isLoading,tokenIds=_useGetCollectibles.tokenIds,nftsInWallet=_useGetCollectibles.nftsInWallet;var dispatch=useAppDispatch();var _useProfile=useProfile(),profile=_useProfile.profile;var profileContract=useProfileContract();var _useWeb3React=useWeb3React(),account=_useWeb3React.account,library=_useWeb3React.library;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess;var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var _useApproveConfirmTra=useApproveConfirmTransaction({onApprove:function onApprove(){var contract=getErc721Contract(selectedNft.nftAddress,library.getSigner());return callWithGasPrice(contract,'approve',[getPancakeProfileAddress(),selectedNft.tokenId]);},onConfirm:function onConfirm(){if(!profile.isActive){return callWithGasPrice(profileContract,'reactivateProfile',[selectedNft.nftAddress,selectedNft.tokenId]);}return callWithGasPrice(profileContract,'updateProfile',[selectedNft.nftAddress,selectedNft.tokenId]);},onSuccess:function(){var _onSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return dispatch(fetchProfile(account));case 2:toastSuccess(t('Profile Updated!'));onDismiss();case 4:case\"end\":return _context.stop();}}},_callee);}));function onSuccess(){return _onSuccess.apply(this,arguments);}return onSuccess;}()}),isApproving=_useApproveConfirmTra.isApproving,isApproved=_useApproveConfirmTra.isApproved,isConfirmed=_useApproveConfirmTra.isConfirmed,isConfirming=_useApproveConfirmTra.isConfirming,handleApprove=_useApproveConfirmTra.handleApprove,handleConfirm=_useApproveConfirmTra.handleConfirm;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:t('Choose a new Collectible to use as your profile pic.')}),isLoading?/*#__PURE__*/_jsx(Skeleton,{height:\"80px\",mb:\"16px\"}):nftsInWallet.map(function(walletNft){var _tokenIds$walletNft$i=_slicedToArray(tokenIds[walletNft.identifier],1),firstTokenId=_tokenIds$walletNft$i[0];var handleChange=function handleChange(value){setSelectedNft({tokenId:Number(value),nftAddress:getAddressByType(walletNft.type)});};return/*#__PURE__*/_jsx(SelectionCard,{name:\"profilePicture\",value:firstTokenId,image:\"/images/nfts/\".concat(walletNft.images.md),isChecked:firstTokenId===selectedNft.tokenId,onChange:handleChange,disabled:isApproving||isConfirming||isConfirmed,children:/*#__PURE__*/_jsx(Text,{bold:true,children:walletNft.name})},walletNft.identifier);}),!isLoading&&nftsInWallet.length===0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"16px\",children:t('Sorry! You donâ€™t have any eligible Collectibles in your wallet to use!')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:t('Make sure you have a Pancake Collectible in your wallet and try again!')})]}),/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:isConfirmed||isConfirming||isApproved||selectedNft.tokenId===null,isApproving:isApproving,isConfirmDisabled:!isApproved||isConfirmed||selectedNft.tokenId===null,isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm}),/*#__PURE__*/_jsx(Button,{variant:\"text\",width:\"100%\",onClick:onDismiss,disabled:isApproving||isConfirming,children:t('Close Window')})]});};export default ChangeProfilePicPage;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx"],"names":["React","useState","Button","Skeleton","Text","useWeb3React","useAppDispatch","useGetCollectibles","useProfile","useTranslation","useToast","fetchProfile","getAddressByType","useApproveConfirmTransaction","getErc721Contract","useProfileContract","useCallWithGasPrice","getPancakeProfileAddress","SelectionCard","ApproveConfirmButtons","ChangeProfilePicPage","onDismiss","tokenId","nftAddress","selectedNft","setSelectedNft","t","isLoading","tokenIds","nftsInWallet","dispatch","profile","profileContract","account","library","toastSuccess","callWithGasPrice","onApprove","contract","getSigner","onConfirm","isActive","onSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","map","walletNft","identifier","firstTokenId","handleChange","value","Number","type","images","md","name","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport { getAddressByType } from 'utils/collectibles'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null,\n  })\n  const { t } = useTranslation()\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const profileContract = useProfileContract()\n  const { account, library } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\n        return callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return callWithGasPrice(profileContract, 'reactivateProfile', [selectedNft.nftAddress, selectedNft.tokenId])\n        }\n\n        return callWithGasPrice(profileContract, 'updateProfile', [selectedNft.nftAddress, selectedNft.tokenId])\n      },\n      onSuccess: async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'))\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        nftsInWallet.map((walletNft) => {\n          const [firstTokenId] = tokenIds[walletNft.identifier]\n          const handleChange = (value: string) => {\n            setSelectedNft({\n              tokenId: Number(value),\n              nftAddress: getAddressByType(walletNft.type),\n            })\n          }\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.identifier}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === selectedNft.tokenId}\n              onChange={handleChange}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && nftsInWallet.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You donâ€™t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n"]},"metadata":{},"sourceType":"module"}