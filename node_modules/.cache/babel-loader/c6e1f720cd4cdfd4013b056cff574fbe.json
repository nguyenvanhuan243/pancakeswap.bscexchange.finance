{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import every from'lodash/every';import{Stepper,Step,Card,CardBody,Heading,Text,Button,Link,OpenNewIcon}from'@pancakeswap/uikit';import{BASE_ADD_LIQUIDITY_URL}from'config';import{useTranslation}from'contexts/Localization';import useTokenBalance from'hooks/useTokenBalance';import Container from'components/Layout/Container';import{useProfile}from'state/profile/hooks';import{getAddress}from'utils/addressHelpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled(Container)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  margin-left: -16px;\\n  margin-right: -16px;\\n  padding-top: 48px;\\n  padding-bottom: 48px;\\n\\n  \",\" {\\n    margin-left: -24px;\\n    margin-right: -24px;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.gradients.bubblegum;},function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});var IfoSteps=function IfoSteps(_ref3){var ifo=_ref3.ifo,walletIfoData=_ref3.walletIfoData;var poolBasic=walletIfoData.poolBasic,poolUnlimited=walletIfoData.poolUnlimited;var _useProfile=useProfile(),hasProfile=_useProfile.hasProfile;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTokenBalance=useTokenBalance(getAddress(ifo.currency.address)),balance=_useTokenBalance.balance;var stepsValidationStatus=[hasProfile,balance.isGreaterThan(0),poolBasic.amountTokenCommittedInLP.isGreaterThan(0)||poolUnlimited.amountTokenCommittedInLP.isGreaterThan(0),poolBasic.hasClaimed||poolUnlimited.hasClaimed];var getStatusProp=function getStatusProp(index){var arePreviousValid=index===0?true:every(stepsValidationStatus.slice(0,index),Boolean);if(stepsValidationStatus[index]){return arePreviousValid?'past':'future';}return arePreviousValid?'current':'future';};var renderCardBody=function renderCardBody(step){var isStepValid=stepsValidationStatus[step];switch(step){case 0:return/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",color:\"secondary\",mb:\"16px\",children:t('Activate your Profile')}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",small:true,mb:\"16px\",children:t('You’ll need an active PancakeSwap Profile to take part in an IFO!')}),isStepValid?/*#__PURE__*/_jsx(Text,{color:\"success\",bold:true,children:t('Profile Active!')}):/*#__PURE__*/_jsx(Button,{as:Link,href:\"/profile\",children:t('Activate your Profile')})]});case 1:return/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",color:\"secondary\",mb:\"16px\",children:t('Get CAKE-BNB LP Tokens')}),/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",small:true,children:[t('Stake CAKE and BNB in the liquidity pool to get LP tokens.'),\" \",/*#__PURE__*/_jsx(\"br\",{}),t('You’ll spend them to buy IFO sale tokens.')]}),/*#__PURE__*/_jsx(Button,{as:Link,external:true,href:\"\".concat(BASE_ADD_LIQUIDITY_URL,\"/BNB/0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82\"),endIcon:/*#__PURE__*/_jsx(OpenNewIcon,{color:\"white\"}),mt:\"16px\",children:t('Get LP tokens')})]});case 2:return/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",color:\"secondary\",mb:\"16px\",children:t('Commit LP Tokens')}),/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",small:true,children:[t('When the IFO sales are live, you can “commit” your LP tokens to buy the tokens being sold.'),\" \",/*#__PURE__*/_jsx(\"br\",{}),t('We recommend committing to the Basic Sale first, but you can do both if you like.')]})]});case 3:return/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",color:\"secondary\",mb:\"16px\",children:t('Claim your tokens and achievement')}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",small:true,children:t('After the IFO sales finish, you can claim any IFO tokens that you bought, and any unspent CAKE-BNB LP tokens will be returned to your wallet.')})]});default:return null;}};return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h2\",scale:\"xl\",color:\"secondary\",mb:\"24px\",textAlign:\"center\",children:t('How to Take Part')}),/*#__PURE__*/_jsx(Stepper,{children:stepsValidationStatus.map(function(_,index){return/*#__PURE__*/ (// eslint-disable-next-line react/no-array-index-key\n_jsx(Step,{index:index,status:getStatusProp(index),children:/*#__PURE__*/_jsx(Card,{children:renderCardBody(index)})},index));})})]});};export default IfoSteps;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Ifos/components/IfoSteps.tsx"],"names":["React","styled","every","Stepper","Step","Card","CardBody","Heading","Text","Button","Link","OpenNewIcon","BASE_ADD_LIQUIDITY_URL","useTranslation","useTokenBalance","Container","useProfile","getAddress","Wrapper","theme","colors","gradients","bubblegum","mediaQueries","sm","IfoSteps","ifo","walletIfoData","poolBasic","poolUnlimited","hasProfile","t","currency","address","balance","stepsValidationStatus","isGreaterThan","amountTokenCommittedInLP","hasClaimed","getStatusProp","index","arePreviousValid","slice","Boolean","renderCardBody","step","isStepValid","map","_"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport every from 'lodash/every'\nimport { Stepper, Step, StepStatus, Card, CardBody, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { Ifo } from 'config/constants/types'\nimport { WalletIfoData } from 'views/Ifos/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport Container from 'components/Layout/Container'\nimport { useProfile } from 'state/profile/hooks'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface Props {\n  ifo: Ifo\n  walletIfoData: WalletIfoData\n}\n\nconst Wrapper = styled(Container)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  margin-left: -16px;\n  margin-right: -16px;\n  padding-top: 48px;\n  padding-bottom: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: -24px;\n    margin-right: -24px;\n  }\n`\n\nconst IfoSteps: React.FC<Props> = ({ ifo, walletIfoData }) => {\n  const { poolBasic, poolUnlimited } = walletIfoData\n  const { hasProfile } = useProfile()\n  const { t } = useTranslation()\n  const { balance } = useTokenBalance(getAddress(ifo.currency.address))\n  const stepsValidationStatus = [\n    hasProfile,\n    balance.isGreaterThan(0),\n    poolBasic.amountTokenCommittedInLP.isGreaterThan(0) || poolUnlimited.amountTokenCommittedInLP.isGreaterThan(0),\n    poolBasic.hasClaimed || poolUnlimited.hasClaimed,\n  ]\n\n  const getStatusProp = (index: number): StepStatus => {\n    const arePreviousValid = index === 0 ? true : every(stepsValidationStatus.slice(0, index), Boolean)\n    if (stepsValidationStatus[index]) {\n      return arePreviousValid ? 'past' : 'future'\n    }\n    return arePreviousValid ? 'current' : 'future'\n  }\n\n  const renderCardBody = (step: number) => {\n    const isStepValid = stepsValidationStatus[step]\n    switch (step) {\n      case 0:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Activate your Profile')}\n            </Heading>\n            <Text color=\"textSubtle\" small mb=\"16px\">\n              {t('You’ll need an active PancakeSwap Profile to take part in an IFO!')}\n            </Text>\n            {isStepValid ? (\n              <Text color=\"success\" bold>\n                {t('Profile Active!')}\n              </Text>\n            ) : (\n              <Button as={Link} href=\"/profile\">\n                {t('Activate your Profile')}\n              </Button>\n            )}\n          </CardBody>\n        )\n      case 1:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Get CAKE-BNB LP Tokens')}\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              {t('Stake CAKE and BNB in the liquidity pool to get LP tokens.')} <br />\n              {t('You’ll spend them to buy IFO sale tokens.')}\n            </Text>\n            <Button\n              as={Link}\n              external\n              href={`${BASE_ADD_LIQUIDITY_URL}/BNB/0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82`}\n              endIcon={<OpenNewIcon color=\"white\" />}\n              mt=\"16px\"\n            >\n              {t('Get LP tokens')}\n            </Button>\n          </CardBody>\n        )\n      case 2:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Commit LP Tokens')}\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              {t('When the IFO sales are live, you can “commit” your LP tokens to buy the tokens being sold.')} <br />\n              {t('We recommend committing to the Basic Sale first, but you can do both if you like.')}\n            </Text>\n          </CardBody>\n        )\n      case 3:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              {t('Claim your tokens and achievement')}\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              {t(\n                'After the IFO sales finish, you can claim any IFO tokens that you bought, and any unspent CAKE-BNB LP tokens will be returned to your wallet.',\n              )}\n            </Text>\n          </CardBody>\n        )\n      default:\n        return null\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Heading as=\"h2\" scale=\"xl\" color=\"secondary\" mb=\"24px\" textAlign=\"center\">\n        {t('How to Take Part')}\n      </Heading>\n      <Stepper>\n        {stepsValidationStatus.map((_, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Step key={index} index={index} status={getStatusProp(index)}>\n            <Card>{renderCardBody(index)}</Card>\n          </Step>\n        ))}\n      </Stepper>\n    </Wrapper>\n  )\n}\n\nexport default IfoSteps\n"]},"metadata":{},"sourceType":"module"}