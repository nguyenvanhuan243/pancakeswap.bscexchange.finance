{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Skeleton, Text } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppDispatch } from 'state';\nimport { useGetCollectibles } from 'state/collectibles/hooks';\nimport { useProfile } from 'state/profile/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport useToast from 'hooks/useToast';\nimport { fetchProfile } from 'state/profile';\nimport { getAddressByType } from 'utils/collectibles';\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction';\nimport { getErc721Contract } from 'utils/contractHelpers';\nimport { useProfile as useProfileContract } from 'hooks/useContract';\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice';\nimport { getPancakeProfileAddress } from 'utils/addressHelpers';\nimport SelectionCard from '../SelectionCard';\nimport ApproveConfirmButtons from '../ApproveConfirmButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangeProfilePicPage = ({\n  onDismiss\n}) => {\n  _s();\n\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null\n  });\n  const {\n    t\n  } = useTranslation();\n  const {\n    isLoading,\n    tokenIds,\n    nftsInWallet\n  } = useGetCollectibles();\n  const dispatch = useAppDispatch();\n  const {\n    profile\n  } = useProfile();\n  const profileContract = useProfileContract();\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const {\n    toastSuccess\n  } = useToast();\n  const {\n    callWithGasPrice\n  } = useCallWithGasPrice();\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner());\n      return callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId]);\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return callWithGasPrice(profileContract, 'reactivateProfile', [selectedNft.nftAddress, selectedNft.tokenId]);\n      }\n\n      return callWithGasPrice(profileContract, 'updateProfile', [selectedNft.nftAddress, selectedNft.tokenId]);\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account));\n      toastSuccess(t('Profile Updated!'));\n      onDismiss();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"textSubtle\",\n      mb: \"24px\",\n      children: t('Choose a new Collectible to use as your profile pic.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      height: \"80px\",\n      mb: \"16px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : nftsInWallet.map(walletNft => {\n      const [firstTokenId] = tokenIds[walletNft.identifier];\n\n      const handleChange = value => {\n        setSelectedNft({\n          tokenId: Number(value),\n          nftAddress: getAddressByType(walletNft.type)\n        });\n      };\n\n      return /*#__PURE__*/_jsxDEV(SelectionCard, {\n        name: \"profilePicture\",\n        value: firstTokenId,\n        image: `/images/nfts/${walletNft.images.md}`,\n        isChecked: firstTokenId === selectedNft.tokenId,\n        onChange: handleChange,\n        disabled: isApproving || isConfirming || isConfirmed,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: walletNft.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, walletNft.identifier, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this);\n    }), !isLoading && nftsInWallet.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        color: \"textSubtle\",\n        mb: \"16px\",\n        children: t('Sorry! You donâ€™t have any eligible Collectibles in your wallet to use!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        color: \"textSubtle\",\n        mb: \"24px\",\n        children: t('Make sure you have a Pancake Collectible in your wallet and try again!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ApproveConfirmButtons, {\n      isApproveDisabled: isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null,\n      isApproving: isApproving,\n      isConfirmDisabled: !isApproved || isConfirmed || selectedNft.tokenId === null,\n      isConfirming: isConfirming,\n      onApprove: handleApprove,\n      onConfirm: handleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      width: \"100%\",\n      onClick: onDismiss,\n      disabled: isApproving || isConfirming,\n      children: t('Close Window')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChangeProfilePicPage, \"KObZoGwaTgox4LNe4E8TctXc9HQ=\", false, function () {\n  return [useTranslation, useGetCollectibles, useAppDispatch, useProfile, useProfileContract, useWeb3React, useToast, useCallWithGasPrice, useApproveConfirmTransaction];\n});\n\n_c = ChangeProfilePicPage;\nexport default ChangeProfilePicPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeProfilePicPage\");","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx"],"names":["React","useState","Button","Skeleton","Text","useWeb3React","useAppDispatch","useGetCollectibles","useProfile","useTranslation","useToast","fetchProfile","getAddressByType","useApproveConfirmTransaction","getErc721Contract","useProfileContract","useCallWithGasPrice","getPancakeProfileAddress","SelectionCard","ApproveConfirmButtons","ChangeProfilePicPage","onDismiss","selectedNft","setSelectedNft","tokenId","nftAddress","t","isLoading","tokenIds","nftsInWallet","dispatch","profile","profileContract","account","library","toastSuccess","callWithGasPrice","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onApprove","contract","getSigner","onConfirm","isActive","onSuccess","map","walletNft","firstTokenId","identifier","handleChange","value","Number","type","images","md","name","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport { getAddressByType } from 'utils/collectibles'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null,\n  })\n  const { t } = useTranslation()\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const profileContract = useProfileContract()\n  const { account, library } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\n        return callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return callWithGasPrice(profileContract, 'reactivateProfile', [selectedNft.nftAddress, selectedNft.tokenId])\n        }\n\n        return callWithGasPrice(profileContract, 'updateProfile', [selectedNft.nftAddress, selectedNft.tokenId])\n      },\n      onSuccess: async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'))\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        nftsInWallet.map((walletNft) => {\n          const [firstTokenId] = tokenIds[walletNft.identifier]\n          const handleChange = (value: string) => {\n            setSelectedNft({\n              tokenId: Number(value),\n              nftAddress: getAddressByType(walletNft.type),\n            })\n          }\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.identifier}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === selectedNft.tokenId}\n              onChange={handleChange}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && nftsInWallet.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You donâ€™t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n"]},"metadata":{},"sourceType":"module"}