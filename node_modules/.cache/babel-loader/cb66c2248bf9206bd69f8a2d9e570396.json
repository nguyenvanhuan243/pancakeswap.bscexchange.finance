{"ast":null,"code":"import React from'react';import{Route}from'react-router-dom';import{useWeb3React}from'@web3-react/core';import Page from'components/Layout/Page';import PageLoader from'components/Loader/PageLoader';import{useProfile}from'state/profile/hooks';import{useFetchAchievements}from'state/achievements/hooks';import ProfileCreation from'./ProfileCreation';import Header from'./components/Header';import TaskCenter from'./TaskCenter';import PublicProfile from'./PublicProfile';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Profile=function Profile(){var _useProfile=useProfile(),isInitialized=_useProfile.isInitialized,isLoading=_useProfile.isLoading,hasProfile=_useProfile.hasProfile;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;useFetchAchievements();if(!isInitialized||isLoading){return/*#__PURE__*/_jsx(PageLoader,{});}if(account&&!hasProfile){return/*#__PURE__*/_jsx(Page,{children:/*#__PURE__*/_jsx(ProfileCreation,{})});}return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/profile\",children:/*#__PURE__*/_jsx(PublicProfile,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile/tasks\",children:/*#__PURE__*/_jsx(TaskCenter,{})})]});};export default Profile;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/pancake-frontend/src/views/Profile/index.tsx"],"names":["React","Route","useWeb3React","Page","PageLoader","useProfile","useFetchAchievements","ProfileCreation","Header","TaskCenter","PublicProfile","Profile","isInitialized","isLoading","hasProfile","account"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,OAASC,oBAAT,KAAqC,0BAArC,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,gBAAiDN,UAAU,EAA3D,CAAQO,aAAR,aAAQA,aAAR,CAAuBC,SAAvB,aAAuBA,SAAvB,CAAkCC,UAAlC,aAAkCA,UAAlC,CACA,kBAAoBZ,YAAY,EAAhC,CAAQa,OAAR,eAAQA,OAAR,CAEAT,oBAAoB,GAEpB,GAAI,CAACM,aAAD,EAAkBC,SAAtB,CAAiC,CAC/B,mBAAO,KAAC,UAAD,IAAP,CACD,CAED,GAAIE,OAAO,EAAI,CAACD,UAAhB,CAA4B,CAC1B,mBACE,KAAC,IAAD,wBACE,KAAC,eAAD,IADF,EADF,CAKD,CAED,mBACE,MAAC,IAAD,yBACE,KAAC,MAAD,IADF,cAEE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,UAAlB,uBACE,KAAC,aAAD,IADF,EAFF,cAKE,KAAC,KAAD,EAAO,IAAI,CAAC,gBAAZ,uBACE,KAAC,UAAD,IADF,EALF,GADF,CAWD,CA7BD,CA+BA,cAAeH,CAAAA,OAAf","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/Layout/Page'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { useProfile } from 'state/profile/hooks'\nimport { useFetchAchievements } from 'state/achievements/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}