{"ast":null,"code":"import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import identity from'lodash/identity';import{useEffect,useState}from'react';var defaultOptions={hydrate:identity,dehydrate:identity};/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */var usePersistState=function usePersistState(initialValue,userOptions){var _defaultOptions$userO=_objectSpread(_objectSpread({},defaultOptions),userOptions),localStorageKey=_defaultOptions$userO.localStorageKey,hydrate=_defaultOptions$userO.hydrate,dehydrate=_defaultOptions$userO.dehydrate;var _useState=useState(function(){try{var valueFromLS=localStorage.getItem(localStorageKey);return valueFromLS?hydrate(JSON.parse(valueFromLS)):initialValue;}catch(error){return initialValue;}}),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];useEffect(function(){localStorage.setItem(localStorageKey,JSON.stringify(dehydrate(value)));},[value,localStorageKey,dehydrate]);return[value,setValue];};export default usePersistState;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/hooks/usePersistState.ts"],"names":["identity","useEffect","useState","defaultOptions","hydrate","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","localStorage","getItem","JSON","parse","error","value","setValue","setItem","stringify"],"mappings":"+UAAA,MAAOA,CAAAA,QAAP,KAAqB,iBAArB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAQA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,OAAO,CAAEJ,QADY,CAErBK,SAAS,CAAEL,QAFU,CAAvB,CAKA;AACA;AACA,GACA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,YAAD,CAAoBC,WAApB,CAA4D,CAClF,yDAAqDL,cAArD,EAAwEK,WAAxE,EAAQC,eAAR,uBAAQA,eAAR,CAAyBL,OAAzB,uBAAyBA,OAAzB,CAAkCC,SAAlC,uBAAkCA,SAAlC,CACA,cAA0BH,QAAQ,CAAC,UAAM,CACvC,GAAI,CACF,GAAMQ,CAAAA,WAAW,CAAGC,YAAY,CAACC,OAAb,CAAqBH,eAArB,CAApB,CAEA,MAAOC,CAAAA,WAAW,CAAGN,OAAO,CAACS,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAD,CAAV,CAAsCH,YAAxD,CACD,CAAC,MAAOQ,KAAP,CAAc,CACd,MAAOR,CAAAA,YAAP,CACD,CACF,CARiC,CAAlC,wCAAOS,KAAP,eAAcC,QAAd,eAUAhB,SAAS,CAAC,UAAM,CACdU,YAAY,CAACO,OAAb,CAAqBT,eAArB,CAAsCI,IAAI,CAACM,SAAL,CAAed,SAAS,CAACW,KAAD,CAAxB,CAAtC,EACD,CAFQ,CAEN,CAACA,KAAD,CAAQP,eAAR,CAAyBJ,SAAzB,CAFM,CAAT,CAIA,MAAO,CAACW,KAAD,CAAQC,QAAR,CAAP,CACD,CAjBD,CAmBA,cAAeX,CAAAA,eAAf","sourcesContent":["import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n"]},"metadata":{},"sourceType":"module"}