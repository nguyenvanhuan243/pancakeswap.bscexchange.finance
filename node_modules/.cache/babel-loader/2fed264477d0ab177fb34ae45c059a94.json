{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/nguyenvanhuan243/Documents/apphocvienstock/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useCallback}from'react';import styled from'styled-components';import{AutoRenewIcon,Button,Card,CardBody,Flex,Skeleton,Text,Link,ArrowForwardIcon}from'@pancakeswap/uikit';import BigNumber from'bignumber.js';import{useTranslation}from'contexts/Localization';import{usePriceCakeBusd}from'state/farms/hooks';import useToast from'hooks/useToast';import{useMasterchef}from'hooks/useContract';import{harvestFarm}from'utils/calls';import Balance from'components/Balance';import useFarmsWithBalance from'views/Home/hooks/useFarmsWithBalance';import{getEarningsText}from'./EarningsText';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: fit-content;\\n\"])));var HarvestCard=function HarvestCard(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useFarmsWithBalance=useFarmsWithBalance(),farmsWithStakedBalance=_useFarmsWithBalance.farmsWithStakedBalance,farmEarningsSum=_useFarmsWithBalance.earningsSum;var masterChefContract=useMasterchef();var cakePriceBusd=usePriceCakeBusd();var earningsBusd=new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd);var numTotalToCollect=farmsWithStakedBalance.length;var numFarmsToCollect=farmsWithStakedBalance.filter(function(value){return value.pid!==0;}).length;var hasCakePoolToCollect=numTotalToCollect-numFarmsToCollect>0;var earningsText=getEarningsText(numFarmsToCollect,hasCakePoolToCollect,earningsBusd,t);var _earningsText$split=earningsText.split(earningsBusd.toString()),_earningsText$split2=_slicedToArray(_earningsText$split,2),preText=_earningsText$split2[0],toCollectText=_earningsText$split2[1];var harvestAllFarms=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _iterator,_step,farmWithBalance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);// eslint-disable-next-line no-restricted-syntax\n_iterator=_createForOfIteratorHelper(farmsWithStakedBalance);_context.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context.next=17;break;}farmWithBalance=_step.value;_context.prev=6;_context.next=9;return harvestFarm(masterChefContract,farmWithBalance.pid);case 9:toastSuccess(\"\".concat(t('Harvested'),\"!\"),t('Your %symbol% earnings have been sent to your wallet!',{symbol:'CAKE'}));_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](6);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));case 15:_context.next=4;break;case 17:_context.next=22;break;case 19:_context.prev=19;_context.t1=_context[\"catch\"](2);_iterator.e(_context.t1);case 22:_context.prev=22;_iterator.f();return _context.finish(22);case 25:setPendingTx(false);case 26:case\"end\":return _context.stop();}}},_callee,null,[[2,19,22,25],[6,12]]);})),[farmsWithStakedBalance,masterChefContract,toastSuccess,toastError,t]);return/*#__PURE__*/_jsx(StyledCard,{children:/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Flex,{flexDirection:['column',null,null,'row'],justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",alignItems:['center',null,null,'flex-start'],children:[preText&&/*#__PURE__*/_jsx(Text,{mb:\"4px\",color:\"textSubtle\",children:preText}),!earningsBusd.isNaN()?/*#__PURE__*/_jsx(Balance,{decimals:earningsBusd.gt(0)?2:0,fontSize:\"24px\",bold:true,prefix:earningsBusd.gt(0)?'~$':'$',lineHeight:\"1.1\",value:earningsBusd.toNumber()}):/*#__PURE__*/_jsx(Skeleton,{width:96,height:24,my:\"2px\"}),/*#__PURE__*/_jsx(Text,{mb:['16px',null,null,'0'],color:\"textSubtle\",children:toCollectText})]}),numTotalToCollect<=0?/*#__PURE__*/_jsx(Link,{href:\"farms\",children:/*#__PURE__*/_jsxs(Button,{width:['100%',null,null,'auto'],variant:\"secondary\",children:[/*#__PURE__*/_jsx(Text,{color:\"primary\",bold:true,children:t('Start earning')}),/*#__PURE__*/_jsx(ArrowForwardIcon,{ml:\"4px\",color:\"primary\"})]})}):/*#__PURE__*/_jsx(Button,{width:['100%',null,null,'auto'],id:\"harvest-all\",isLoading:pendingTx,endIcon:pendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,disabled:pendingTx,onClick:harvestAllFarms,children:/*#__PURE__*/_jsx(Text,{color:\"invertedContrast\",bold:true,children:pendingTx?t('Harvesting'):t('Harvest all')})})]})})});};export default HarvestCard;","map":{"version":3,"sources":["/Users/nguyenvanhuan243/Documents/apphocvienstock/src/views/Home/components/UserBanner/HarvestCard.tsx"],"names":["React","useState","useCallback","styled","AutoRenewIcon","Button","Card","CardBody","Flex","Skeleton","Text","Link","ArrowForwardIcon","BigNumber","useTranslation","usePriceCakeBusd","useToast","useMasterchef","harvestFarm","Balance","useFarmsWithBalance","getEarningsText","StyledCard","HarvestCard","pendingTx","setPendingTx","t","toastSuccess","toastError","farmsWithStakedBalance","farmEarningsSum","earningsSum","masterChefContract","cakePriceBusd","earningsBusd","multipliedBy","numTotalToCollect","length","numFarmsToCollect","filter","value","pid","hasCakePoolToCollect","earningsText","split","toString","preText","toCollectText","harvestAllFarms","farmWithBalance","symbol","isNaN","gt","toNumber"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Flex, Skeleton, Text, Link, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport useToast from 'hooks/useToast'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { getEarningsText } from './EarningsText'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  height: fit-content;\n`\n\nconst HarvestCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef()\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numTotalToCollect = farmsWithStakedBalance.length\n  const numFarmsToCollect = farmsWithStakedBalance.filter((value) => value.pid !== 0).length\n  const hasCakePoolToCollect = numTotalToCollect - numFarmsToCollect > 0\n\n  const earningsText = getEarningsText(numFarmsToCollect, hasCakePoolToCollect, earningsBusd, t)\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\n        )\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <Flex flexDirection={['column', null, null, 'row']} justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex flexDirection=\"column\" alignItems={['center', null, null, 'flex-start']}>\n            {preText && (\n              <Text mb=\"4px\" color=\"textSubtle\">\n                {preText}\n              </Text>\n            )}\n            {!earningsBusd.isNaN() ? (\n              <Balance\n                decimals={earningsBusd.gt(0) ? 2 : 0}\n                fontSize=\"24px\"\n                bold\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\n                lineHeight=\"1.1\"\n                value={earningsBusd.toNumber()}\n              />\n            ) : (\n              <Skeleton width={96} height={24} my=\"2px\" />\n            )}\n            <Text mb={['16px', null, null, '0']} color=\"textSubtle\">\n              {toCollectText}\n            </Text>\n          </Flex>\n          {numTotalToCollect <= 0 ? (\n            <Link href=\"farms\">\n              <Button width={['100%', null, null, 'auto']} variant=\"secondary\">\n                <Text color=\"primary\" bold>\n                  {t('Start earning')}\n                </Text>\n                <ArrowForwardIcon ml=\"4px\" color=\"primary\" />\n              </Button>\n            </Link>\n          ) : (\n            <Button\n              width={['100%', null, null, 'auto']}\n              id=\"harvest-all\"\n              isLoading={pendingTx}\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              disabled={pendingTx}\n              onClick={harvestAllFarms}\n            >\n              <Text color=\"invertedContrast\" bold>\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\n              </Text>\n            </Button>\n          )}\n        </Flex>\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default HarvestCard\n"]},"metadata":{},"sourceType":"module"}